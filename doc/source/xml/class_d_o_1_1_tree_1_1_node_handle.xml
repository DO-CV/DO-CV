<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_d_o_1_1_tree_1_1_node_handle" kind="class" prot="private">
    <compoundname>DO::Tree::NodeHandle</compoundname>
    <derivedcompoundref refid="class_d_o_1_1_tree_1_1_breadth_first_iterator" prot="public" virt="non-virtual">Tree&lt; T &gt;::BreadthFirstIterator&lt; IsConst &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_d_o_1_1_tree_1_1_children_iterator" prot="public" virt="non-virtual">Tree&lt; T &gt;::ChildrenIterator&lt; IsConst &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_d_o_1_1_tree_1_1_depth_first_iterator" prot="public" virt="non-virtual">Tree&lt; T &gt;::DepthFirstIterator&lt; IsConst &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1_1_node_handle_1a29dec7bd5e642cefd5dae80d899a7883" prot="public" static="no">
        <type>NodeHandle</type>
        <definition>typedef NodeHandle self_type</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="467" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1_1_node_handle_1a26fed2b714bb6205437abe3897dd7e3f" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_choose" kindref="compound">Meta::Choose</ref>&lt; IsConst, const Node *, Node * &gt;::Type</type>
        <definition>typedef Meta::Choose&lt;IsConst, const Node *, Node *&gt;::Type node_pointer</definition>
        <argsstring></argsstring>
        <name>node_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="469" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="469" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1_1_node_handle_1a98b9438a5b2fcbe0401c2b83a9b97866" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_choose" kindref="compound">Meta::Choose</ref>&lt; IsConst, const T &amp;, T &amp; &gt;::Type</type>
        <definition>typedef Meta::Choose&lt;IsConst, const T&amp;, T&amp;&gt;::Type reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="470" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1_1_node_handle_1afaf0601f102d426bf70a7903dc0b7aeb" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_choose" kindref="compound">Meta::Choose</ref>&lt; IsConst, const T *, T * &gt;::Type</type>
        <definition>typedef Meta::Choose&lt;IsConst, const T *, T *&gt;::Type pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="471" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="471" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_d_o_1_1_tree_1_1_node_handle_1a15740190d17658ee473d28d80f418a9c" prot="protected" static="no" mutable="no">
        <type>node_pointer</type>
        <definition>node_pointer _node_ptr</definition>
        <argsstring></argsstring>
        <name>_node_ptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="548" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="548" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a514878fa0cf96489a1d061b7af41dc6f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NodeHandle</definition>
        <argsstring>(node_pointer node_ptr=0)</argsstring>
        <name>NodeHandle</name>
        <param>
          <type>node_pointer</type>
          <declname>node_ptr</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="475" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="473" bodyend="475"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1ac6ac1ceb1896213decb04354cbdef662" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NodeHandle</definition>
        <argsstring>(const NodeHandle&lt; false &gt; &amp;node)</argsstring>
        <name>NodeHandle</name>
        <param>
          <type>const NodeHandle&lt; false &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="479" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="477" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1aa149c2249879e7727f33688b76bf2c99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="483" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="482" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="490" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="489" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a195c017863fbda13e585649328d77e06" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>is_const_2</declname>
            <defname>is_const_2</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const NodeHandle&lt; is_const_2 &gt; &amp;iter2) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const NodeHandle&lt; is_const_2 &gt; &amp;</type>
          <declname>iter2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="499" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="498" bodyend="499"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1af9b08673dd268dd832f32a0fadcfeb4d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>bool</type>
            <declname>is_const_2</declname>
            <defname>is_const_2</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const NodeHandle&lt; is_const_2 &gt; &amp;iter2) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const NodeHandle&lt; is_const_2 &gt; &amp;</type>
          <declname>iter2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="503" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="502" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a259fdabf1356d51ef28962cb65e0eef7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(node_pointer node) const </argsstring>
        <name>operator==</name>
        <param>
          <type>node_pointer</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="506" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="505" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a878e059e92f2a8fa965666faad8f7134" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(node_pointer node) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>node_pointer</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="509" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="508" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1adbfc20b4917fb9e64e459d3a57a1021a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>node_pointer</type>
        <definition>node_pointer operator()</definition>
        <argsstring>() const </argsstring>
        <name>operator()</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="512" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="511" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a521daa089e1641163ed60754ab076f6d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>self_type</type>
        <definition>self_type parent</definition>
        <argsstring>() const </argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="515" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="514" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a77948ff2d68c4909850ac2e3c2c46263" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>self_type</type>
        <definition>self_type prev_sibling</definition>
        <argsstring>() const </argsstring>
        <name>prev_sibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="518" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="517" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a65681a9c090529243ef3d9176a7f26aa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>self_type</type>
        <definition>self_type next_sibling</definition>
        <argsstring>() const </argsstring>
        <name>next_sibling</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="521" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="520" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a02f2d05b54905ef794473c3dd4963643" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>self_type</type>
        <definition>self_type first_child</definition>
        <argsstring>() const </argsstring>
        <name>first_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="524" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="523" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a3d427bf0b966aabbd323d35c4fa23e60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>self_type</type>
        <definition>self_type last_child</definition>
        <argsstring>() const </argsstring>
        <name>last_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="527" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="526" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1aeb2540297fbc128d501532e885fa8597" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_first_child</definition>
        <argsstring>() const </argsstring>
        <name>is_first_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="530" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="529" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_node_handle_1a2248cb249459f497ef0f86c34c6cf218" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_last_child</definition>
        <argsstring>() const </argsstring>
        <name>is_last_child</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="539" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="538" bodyend="545"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="397">
        <label>Tree&lt; T &gt;::NodeHandle&lt; IsConst &gt;</label>
      </node>
      <node id="399">
        <label>ChildrenIterator</label>
        <childnode refid="397" relation="public-inheritance">
        </childnode>
      </node>
      <node id="398">
        <label>BreadthFirstIterator</label>
        <childnode refid="397" relation="public-inheritance">
        </childnode>
      </node>
      <node id="400">
        <label>DepthFirstIterator</label>
        <childnode refid="397" relation="public-inheritance">
        </childnode>
      </node>
      <node id="401">
        <label>LeafIterator</label>
        <childnode refid="400" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="402">
        <label>Tree&lt; T &gt;::NodeHandle&lt; IsConst &gt;</label>
        <childnode refid="403" relation="usage">
          <edgelabel>_node_ptr</edgelabel>
        </childnode>
      </node>
      <node id="403">
        <label>Choose&lt; IsConst, const Node *, Node * &gt;</label>
        <link refid="struct_d_o_1_1_meta_1_1_choose"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="40" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="40" bodyend="-1"/>
    <listofallmembers>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a15740190d17658ee473d28d80f418a9c" prot="protected" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>_node_ptr</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a02f2d05b54905ef794473c3dd4963643" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>first_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1aeb2540297fbc128d501532e885fa8597" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>is_first_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a2248cb249459f497ef0f86c34c6cf218" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>is_last_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a3d427bf0b966aabbd323d35c4fa23e60" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>last_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a65681a9c090529243ef3d9176a7f26aa" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>next_sibling</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a26fed2b714bb6205437abe3897dd7e3f" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>node_pointer</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a514878fa0cf96489a1d061b7af41dc6f" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>NodeHandle</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1ac6ac1ceb1896213decb04354cbdef662" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>NodeHandle</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1af9b08673dd268dd832f32a0fadcfeb4d" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a878e059e92f2a8fa965666faad8f7134" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1adbfc20b4917fb9e64e459d3a57a1021a" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1aa149c2249879e7727f33688b76bf2c99" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>operator*</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>operator-&gt;</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a195c017863fbda13e585649328d77e06" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a259fdabf1356d51ef28962cb65e0eef7" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a521daa089e1641163ed60754ab076f6d" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>parent</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1afaf0601f102d426bf70a7903dc0b7aeb" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>pointer</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a77948ff2d68c4909850ac2e3c2c46263" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>prev_sibling</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a98b9438a5b2fcbe0401c2b83a9b97866" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>reference</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a29dec7bd5e642cefd5dae80d899a7883" prot="public" virt="non-virtual"><scope>DO::Tree::NodeHandle</scope><name>self_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
