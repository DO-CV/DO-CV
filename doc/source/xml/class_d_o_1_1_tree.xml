<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_d_o_1_1_tree" kind="class" prot="public">
    <compoundname>DO::Tree</compoundname>
    <includes refid="_tree_8hpp" local="no">Tree.hpp</includes>
    <innerclass refid="class_d_o_1_1_tree_1_1_breadth_first_iterator" prot="private">DO::Tree::BreadthFirstIterator</innerclass>
    <innerclass refid="class_d_o_1_1_tree_1_1_children_iterator" prot="private">DO::Tree::ChildrenIterator</innerclass>
    <innerclass refid="class_d_o_1_1_tree_1_1_depth_first_iterator" prot="private">DO::Tree::DepthFirstIterator</innerclass>
    <innerclass refid="class_d_o_1_1_tree_1_1_leaf_iterator" prot="private">DO::Tree::LeafIterator</innerclass>
    <innerclass refid="class_d_o_1_1_tree_1_1_node" prot="private">DO::Tree::Node</innerclass>
    <innerclass refid="class_d_o_1_1_tree_1_1_node_handle" prot="private">DO::Tree::NodeHandle</innerclass>
    <innerclass refid="class_d_o_1_1_tree_1_1_null_node_handle_exception" prot="private">DO::Tree::NullNodeHandleException</innerclass>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a265a253612b46abed17c61b0a5e5ce30" prot="public" static="no">
        <type>T</type>
        <definition>typedef T value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="48" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a680c78d51cff3fd301666dd75bdbe49d" prot="public" static="no">
        <type>T *</type>
        <definition>typedef T* pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="49" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a53d259f0075b22d7646e373816830e8e" prot="public" static="no">
        <type>const T *</type>
        <definition>typedef const T* const_pointer</definition>
        <argsstring></argsstring>
        <name>const_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="50" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a9b1a63f171d76a7a3995b6858e99f2ea" prot="public" static="no">
        <type>T &amp;</type>
        <definition>typedef T&amp; reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="51" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1af9ba3e25df088c62f7d535b91672cda9" prot="public" static="no">
        <type>const T &amp;</type>
        <definition>typedef const T&amp; const_reference</definition>
        <argsstring></argsstring>
        <name>const_reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="52" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a957b4932a1fe961a3b2f9c3df003afa5" prot="public" static="no">
        <type>Node</type>
        <definition>typedef Node node_type</definition>
        <argsstring></argsstring>
        <name>node_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="54" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a5aaef33bc2a4eadb7938c46e008ece74" prot="public" static="no">
        <type>NodeHandle&lt; false &gt;</type>
        <definition>typedef NodeHandle&lt;false&gt; node_handle</definition>
        <argsstring></argsstring>
        <name>node_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="55" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a63679e305245efb895f61220fae8b308" prot="public" static="no">
        <type>ChildrenIterator&lt; false &gt;</type>
        <definition>typedef ChildrenIterator&lt;false&gt; children_iterator</definition>
        <argsstring></argsstring>
        <name>children_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="56" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a1b68ac2ad80415afa4ab778a852c4880" prot="public" static="no">
        <type>DepthFirstIterator&lt; false &gt;</type>
        <definition>typedef DepthFirstIterator&lt;false&gt; depth_first_iterator</definition>
        <argsstring></argsstring>
        <name>depth_first_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="57" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1ab0764299e60d2534fd17a0e72c3fb546" prot="public" static="no">
        <type>BreadthFirstIterator&lt; false &gt;</type>
        <definition>typedef BreadthFirstIterator&lt;false&gt; breadth_first_iterator</definition>
        <argsstring></argsstring>
        <name>breadth_first_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="58" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1adbbdf19f38b14d4da76d1614be080d00" prot="public" static="no">
        <type>LeafIterator&lt; false &gt;</type>
        <definition>typedef LeafIterator&lt;false&gt; leaf_iterator</definition>
        <argsstring></argsstring>
        <name>leaf_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="59" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="59" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1ae753899577d159fa4affc363db9732fa" prot="public" static="no">
        <type>NodeHandle&lt; true &gt;</type>
        <definition>typedef NodeHandle&lt;true&gt; const_node_handle</definition>
        <argsstring></argsstring>
        <name>const_node_handle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="61" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1ae66bc4ac2dc4f6a2911f3c681a87edd6" prot="public" static="no">
        <type>ChildrenIterator&lt; true &gt;</type>
        <definition>typedef ChildrenIterator&lt;true&gt; const_children_iterator</definition>
        <argsstring></argsstring>
        <name>const_children_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="62" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a988b24ed2ea871f299c7b57b793d8284" prot="public" static="no">
        <type>DepthFirstIterator&lt; true &gt;</type>
        <definition>typedef DepthFirstIterator&lt;true&gt; const_depth_first_iterator</definition>
        <argsstring></argsstring>
        <name>const_depth_first_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="63" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1abf6d39fccb2d13ee71f1b66dbafbd851" prot="public" static="no">
        <type>BreadthFirstIterator&lt; true &gt;</type>
        <definition>typedef BreadthFirstIterator&lt;true&gt; const_breadth_first_iterator</definition>
        <argsstring></argsstring>
        <name>const_breadth_first_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="64" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1a61229ff3e7defea14d8fb68f94cc9ae6" prot="public" static="no">
        <type>LeafIterator&lt; true &gt;</type>
        <definition>typedef LeafIterator&lt;true&gt; const_leaf_iterator</definition>
        <argsstring></argsstring>
        <name>const_leaf_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="65" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_d_o_1_1_tree_1a8628336598f757edc17b747bdef0776c" prot="private" static="no" mutable="no">
        <type>Node *</type>
        <definition>Node* _root_node_ptr</definition>
        <argsstring></argsstring>
        <name>_root_node_ptr</name>
        <briefdescription>
<para>Root node of the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="793" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="793" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_o_1_1_tree_1a3dee5770ede29888f2c0136bbd7f5a95" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Tree</definition>
        <argsstring>()</argsstring>
        <name>Tree</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="70" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1ab2eeead563db79ec963561503f3db441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Tree</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>Tree</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Constructor with root vertex. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="74" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="73" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a9603ba799d51fe7b2e8d2ac78abfa535" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Tree</definition>
        <argsstring>(const Tree &amp;t)</argsstring>
        <name>Tree</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="79" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a4d2d4eaa9ac9d347549728060df29842" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>~Tree</definition>
        <argsstring>()</argsstring>
        <name>~Tree</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="83" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="82" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a54e71c610e133a9fb85c1b156d94da42" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref> &amp;</type>
        <definition>Tree&amp; operator=</definition>
        <argsstring>(const Tree &amp;t)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Assignment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="87" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="86" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a72e422ad913c00d5443bfe02530394a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const Tree &amp;t) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
<para>Inequality operator. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="146" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="145" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a4ef88b6304d9d660dece87018d740033" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void swap</definition>
        <argsstring>(const Tree &amp;t)</argsstring>
        <name>swap</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Swap function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="150" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="149" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
<para>Clear function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="154" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="153" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1ac6e61de369e994009e36f344f99c15ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool empty</definition>
        <argsstring>() const </argsstring>
        <name>empty</name>
        <briefdescription>
<para>Returns if the tree is empty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="178" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="177" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a37a865cf4e8665ad843cbd3fa7fac805" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void set_root</definition>
        <argsstring>(const T &amp;v)</argsstring>
        <name>set_root</name>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_set" kindref="compound">Set</ref> the root of the tree with value &apos;v&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="182" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="181" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a3b85d61d075fcee2959be9c1b564e23b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>node_handle</type>
        <definition>node_handle insert_sibling_before</definition>
        <argsstring>(node_handle n, const T &amp;v)</argsstring>
        <name>insert_sibling_before</name>
        <param>
          <type>node_handle</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a sibling with value &apos;v&apos; before the specified node and returns the child node handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="191" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="190" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1abe4588e8f434f4ab6fa9654427cc4dda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>node_handle</type>
        <definition>node_handle insert_sibling_after</definition>
        <argsstring>(node_handle n, const T &amp;v)</argsstring>
        <name>insert_sibling_after</name>
        <param>
          <type>node_handle</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Insert a sibling with value &apos;v&apos; after the specified node and returns the child node handle. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="210" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="209" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a120c2a2f64f45604e96c85ca3984aaed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>node_handle</type>
        <definition>node_handle append_child</definition>
        <argsstring>(node_handle n, const T &amp;v)</argsstring>
        <name>append_child</name>
        <param>
          <type>node_handle</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Append child to specified node and returns the child node handle. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="228" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="227" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1aa3b8256209a0a013e04a479b0ed5d0a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>node_handle</type>
        <definition>node_handle prepend_child</definition>
        <argsstring>(node_handle n, const T &amp;v)</argsstring>
        <name>prepend_child</name>
        <param>
          <type>node_handle</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Prepend child to specified node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="238" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="237" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a15908e24c5d1f66b6d96b548291ff5c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void append_child_tree</definition>
        <argsstring>(node_handle node, Tree &amp;tree)</argsstring>
        <name>append_child_tree</name>
        <param>
          <type>node_handle</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Append child tree to specified node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="248" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="247" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a4261f34846d379bad5deee88b905762f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void prepend_child_tree</definition>
        <argsstring>(node_handle node, Tree &amp;tree)</argsstring>
        <name>prepend_child_tree</name>
        <param>
          <type>node_handle</type>
          <declname>node</declname>
        </param>
        <param>
          <type><ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref> &amp;</type>
          <declname>tree</declname>
        </param>
        <briefdescription>
<para>Prepend child tree to specified node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="252" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="251" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1aba6ece339051b6bad21840d986bd0a3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref></type>
        <definition>Tree cut_tree</definition>
        <argsstring>(node_handle node)</argsstring>
        <name>cut_tree</name>
        <param>
          <type>node_handle</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cut the tree at the specified node which becomes the root of the subtree. <xrefsect id="todo_1_todo000004"><xreftitle>Todo</xreftitle><xrefdescription><para>: check if the implementation is correct. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="257" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="256" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a73a3166a18f4d9091d128d7ede38d740" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void delete_subtree</definition>
        <argsstring>(node_handle node)</argsstring>
        <name>delete_subtree</name>
        <param>
          <type>node_handle</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delete the subtree at the specified node being the root of the subtree. <xrefsect id="todo_1_todo000005"><xreftitle>Todo</xreftitle><xrefdescription><para>: check if the implementation is correct. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="267" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="266" bodyend="272"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1acebef34190c5b61c05d2c5e9308c00a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>node_handle</type>
        <definition>node_handle begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns the root of the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="276" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="275" bodyend="276"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a84c3a10b394fa5d0687d032a086c3e96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>node_handle</type>
        <definition>node_handle end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns the last node of the tree. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="279" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="278" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a50e15fc2193067f33398e37e01d8a2ae" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>node_handle</type>
        <definition>node_handle parent_of</definition>
        <argsstring>(node_handle v)</argsstring>
        <name>parent_of</name>
        <param>
          <type>node_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the parent of the input node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="283" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="282" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1ae25e673000362d17c5dbe34e13ed26a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>children_iterator</type>
        <definition>children_iterator children_begin</definition>
        <argsstring>(node_handle v)</argsstring>
        <name>children_begin</name>
        <param>
          <type>node_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the first child iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="290" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="289" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a4bbe761f0929f34567f339615d616bda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>children_iterator</type>
        <definition>children_iterator children_end</definition>
        <argsstring>()</argsstring>
        <name>children_end</name>
        <briefdescription>
<para>Returns the last child iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="293" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="292" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1aacea50afcacf312bf2254b5c6aa515d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>depth_first_iterator</type>
        <definition>depth_first_iterator depth_first_begin</definition>
        <argsstring>()</argsstring>
        <name>depth_first_begin</name>
        <briefdescription>
<para>Returns the first depth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="297" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="296" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1ab20dfe0da9bfd5b4e021b4081813555f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>depth_first_iterator</type>
        <definition>depth_first_iterator depth_first_end</definition>
        <argsstring>()</argsstring>
        <name>depth_first_end</name>
        <briefdescription>
<para>Returns the last depth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="300" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="299" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1aeff3d8457fe71b935b10ce476917928b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>breadth_first_iterator</type>
        <definition>breadth_first_iterator breadth_first_begin</definition>
        <argsstring>()</argsstring>
        <name>breadth_first_begin</name>
        <briefdescription>
<para>Returns the first breadth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="304" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="303" bodyend="304"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a96a5a047c112cbba0d54d746a6073499" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>breadth_first_iterator</type>
        <definition>breadth_first_iterator breadth_first_end</definition>
        <argsstring>()</argsstring>
        <name>breadth_first_end</name>
        <briefdescription>
<para>Returns the last breadth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="307" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="306" bodyend="307"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a3cc80a426bf788cd6c5b94d2084b69cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>leaf_iterator</type>
        <definition>leaf_iterator leaf_begin</definition>
        <argsstring>()</argsstring>
        <name>leaf_begin</name>
        <briefdescription>
<para>Returns the first leaf iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="311" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="310" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1ac8e0c3fa6a007feaa01c7c18d314d145" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>leaf_iterator</type>
        <definition>leaf_iterator leaf_end</definition>
        <argsstring>()</argsstring>
        <name>leaf_end</name>
        <briefdescription>
<para>Returns the last leaf iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="314" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="313" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1af5e8c199fcd6546df1e7b757eb6d2939" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_node_handle</type>
        <definition>const_node_handle begin</definition>
        <argsstring>() const </argsstring>
        <name>begin</name>
        <briefdescription>
<para>Returns the root of the tree (constant accessor). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="318" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="317" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a687d5908d94367fd391ce19fd6d48a39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_node_handle</type>
        <definition>const_node_handle end</definition>
        <argsstring>() const </argsstring>
        <name>end</name>
        <briefdescription>
<para>Returns the last node of the tree (constant access). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="321" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="320" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a8f8eaebcfc844da422dd317ce284a3ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_node_handle</type>
        <definition>const_node_handle parent_of</definition>
        <argsstring>(node_handle v) const </argsstring>
        <name>parent_of</name>
        <param>
          <type>node_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the parent of the input node. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="325" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="324" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a2d8a88ca545846840e8c0715cc3f36fc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_children_iterator</type>
        <definition>const_children_iterator children_begin</definition>
        <argsstring>(const_node_handle v) const </argsstring>
        <name>children_begin</name>
        <param>
          <type>const_node_handle</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Returns the first constant child iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="332" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="331" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a4920faae174fd8fe38f2deef38ee7c6c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_children_iterator</type>
        <definition>const_children_iterator children_end</definition>
        <argsstring>() const </argsstring>
        <name>children_end</name>
        <briefdescription>
<para>Returns the last constant child iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="335" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="334" bodyend="335"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a9eb8970c962399d0408e4e0a2734d75e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_depth_first_iterator</type>
        <definition>const_depth_first_iterator depth_first_begin</definition>
        <argsstring>() const </argsstring>
        <name>depth_first_begin</name>
        <briefdescription>
<para>Returns the first constant depth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="339" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="338" bodyend="339"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a57f445cd71fd4dc556f451dcaac45ad2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_depth_first_iterator</type>
        <definition>const_depth_first_iterator depth_first_end</definition>
        <argsstring>() const </argsstring>
        <name>depth_first_end</name>
        <briefdescription>
<para>Returns the last constant depth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="342" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="341" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1ad097f916ecfaf0eebfb0183c610ddcae" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_breadth_first_iterator</type>
        <definition>const_breadth_first_iterator breadth_first_begin</definition>
        <argsstring>() const </argsstring>
        <name>breadth_first_begin</name>
        <briefdescription>
<para>Returns the first constant breadth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="346" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="345" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1aca0ea756c48799d75381de9ef0cce128" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_breadth_first_iterator</type>
        <definition>const_breadth_first_iterator breadth_first_end</definition>
        <argsstring>() const </argsstring>
        <name>breadth_first_end</name>
        <briefdescription>
<para>Returns the last constant breadth-first iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="349" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="348" bodyend="349"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a8abf8ade23ce8300e97f274e178c2410" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_leaf_iterator</type>
        <definition>const_leaf_iterator leaf_begin</definition>
        <argsstring>() const </argsstring>
        <name>leaf_begin</name>
        <briefdescription>
<para>Returns the first leaf iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="353" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="352" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1a3906bbeeb57d6a406530290e49081eb3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const_leaf_iterator</type>
        <definition>const_leaf_iterator leaf_end</definition>
        <argsstring>() const </argsstring>
        <name>leaf_end</name>
        <briefdescription>
<para>Returns the last leaf iterator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="356" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="355" bodyend="356"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The tree data structure is by definition an arborescence, in graph theory, i.e., an directed graph with a root vertex &apos;u&apos; such that there is a unique path from &apos;u&apos; to any vertex &apos;v&apos; in the tree. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000003"><xreftitle>Todo</xreftitle><xrefdescription><para>: finish testing (cf. methods&apos; description where TODO is present.). </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="36" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="35" bodyend="794"/>
    <listofallmembers>
      <member refid="class_d_o_1_1_tree_1a8628336598f757edc17b747bdef0776c" prot="private" virt="non-virtual"><scope>DO::Tree</scope><name>_root_node_ptr</name></member>
      <member refid="class_d_o_1_1_tree_1a120c2a2f64f45604e96c85ca3984aaed" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>append_child</name></member>
      <member refid="class_d_o_1_1_tree_1a15908e24c5d1f66b6d96b548291ff5c3" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>append_child_tree</name></member>
      <member refid="class_d_o_1_1_tree_1acebef34190c5b61c05d2c5e9308c00a4" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>begin</name></member>
      <member refid="class_d_o_1_1_tree_1af5e8c199fcd6546df1e7b757eb6d2939" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>begin</name></member>
      <member refid="class_d_o_1_1_tree_1aeff3d8457fe71b935b10ce476917928b" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>breadth_first_begin</name></member>
      <member refid="class_d_o_1_1_tree_1ad097f916ecfaf0eebfb0183c610ddcae" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>breadth_first_begin</name></member>
      <member refid="class_d_o_1_1_tree_1a96a5a047c112cbba0d54d746a6073499" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>breadth_first_end</name></member>
      <member refid="class_d_o_1_1_tree_1aca0ea756c48799d75381de9ef0cce128" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>breadth_first_end</name></member>
      <member refid="class_d_o_1_1_tree_1ab0764299e60d2534fd17a0e72c3fb546" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>breadth_first_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1ae25e673000362d17c5dbe34e13ed26a9" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>children_begin</name></member>
      <member refid="class_d_o_1_1_tree_1a2d8a88ca545846840e8c0715cc3f36fc" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>children_begin</name></member>
      <member refid="class_d_o_1_1_tree_1a4bbe761f0929f34567f339615d616bda" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>children_end</name></member>
      <member refid="class_d_o_1_1_tree_1a4920faae174fd8fe38f2deef38ee7c6c" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>children_end</name></member>
      <member refid="class_d_o_1_1_tree_1a63679e305245efb895f61220fae8b308" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>children_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>clear</name></member>
      <member refid="class_d_o_1_1_tree_1abf6d39fccb2d13ee71f1b66dbafbd851" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>const_breadth_first_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1ae66bc4ac2dc4f6a2911f3c681a87edd6" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>const_children_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1a988b24ed2ea871f299c7b57b793d8284" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>const_depth_first_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1a61229ff3e7defea14d8fb68f94cc9ae6" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>const_leaf_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1ae753899577d159fa4affc363db9732fa" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>const_node_handle</name></member>
      <member refid="class_d_o_1_1_tree_1a53d259f0075b22d7646e373816830e8e" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>const_pointer</name></member>
      <member refid="class_d_o_1_1_tree_1af9ba3e25df088c62f7d535b91672cda9" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>const_reference</name></member>
      <member refid="class_d_o_1_1_tree_1aba6ece339051b6bad21840d986bd0a3a" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>cut_tree</name></member>
      <member refid="class_d_o_1_1_tree_1a73a3166a18f4d9091d128d7ede38d740" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>delete_subtree</name></member>
      <member refid="class_d_o_1_1_tree_1aacea50afcacf312bf2254b5c6aa515d4" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>depth_first_begin</name></member>
      <member refid="class_d_o_1_1_tree_1a9eb8970c962399d0408e4e0a2734d75e" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>depth_first_begin</name></member>
      <member refid="class_d_o_1_1_tree_1ab20dfe0da9bfd5b4e021b4081813555f" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>depth_first_end</name></member>
      <member refid="class_d_o_1_1_tree_1a57f445cd71fd4dc556f451dcaac45ad2" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>depth_first_end</name></member>
      <member refid="class_d_o_1_1_tree_1a1b68ac2ad80415afa4ab778a852c4880" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>depth_first_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1ac6e61de369e994009e36f344f99c15ad" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>empty</name></member>
      <member refid="class_d_o_1_1_tree_1a84c3a10b394fa5d0687d032a086c3e96" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>end</name></member>
      <member refid="class_d_o_1_1_tree_1a687d5908d94367fd391ce19fd6d48a39" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>end</name></member>
      <member refid="class_d_o_1_1_tree_1abe4588e8f434f4ab6fa9654427cc4dda" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>insert_sibling_after</name></member>
      <member refid="class_d_o_1_1_tree_1a3b85d61d075fcee2959be9c1b564e23b" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>insert_sibling_before</name></member>
      <member refid="class_d_o_1_1_tree_1a3cc80a426bf788cd6c5b94d2084b69cb" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>leaf_begin</name></member>
      <member refid="class_d_o_1_1_tree_1a8abf8ade23ce8300e97f274e178c2410" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>leaf_begin</name></member>
      <member refid="class_d_o_1_1_tree_1ac8e0c3fa6a007feaa01c7c18d314d145" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>leaf_end</name></member>
      <member refid="class_d_o_1_1_tree_1a3906bbeeb57d6a406530290e49081eb3" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>leaf_end</name></member>
      <member refid="class_d_o_1_1_tree_1adbbdf19f38b14d4da76d1614be080d00" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>leaf_iterator</name></member>
      <member refid="class_d_o_1_1_tree_1a5aaef33bc2a4eadb7938c46e008ece74" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>node_handle</name></member>
      <member refid="class_d_o_1_1_tree_1a957b4932a1fe961a3b2f9c3df003afa5" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>node_type</name></member>
      <member refid="class_d_o_1_1_tree_1a72e422ad913c00d5443bfe02530394a1" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_tree_1a54e71c610e133a9fb85c1b156d94da42" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>operator=</name></member>
      <member refid="class_d_o_1_1_tree_1a50e15fc2193067f33398e37e01d8a2ae" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>parent_of</name></member>
      <member refid="class_d_o_1_1_tree_1a8f8eaebcfc844da422dd317ce284a3ad" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>parent_of</name></member>
      <member refid="class_d_o_1_1_tree_1a680c78d51cff3fd301666dd75bdbe49d" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>pointer</name></member>
      <member refid="class_d_o_1_1_tree_1aa3b8256209a0a013e04a479b0ed5d0a6" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>prepend_child</name></member>
      <member refid="class_d_o_1_1_tree_1a4261f34846d379bad5deee88b905762f" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>prepend_child_tree</name></member>
      <member refid="class_d_o_1_1_tree_1a9b1a63f171d76a7a3995b6858e99f2ea" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>reference</name></member>
      <member refid="class_d_o_1_1_tree_1a37a865cf4e8665ad843cbd3fa7fac805" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>set_root</name></member>
      <member refid="class_d_o_1_1_tree_1a4ef88b6304d9d660dece87018d740033" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>swap</name></member>
      <member refid="class_d_o_1_1_tree_1a3dee5770ede29888f2c0136bbd7f5a95" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>Tree</name></member>
      <member refid="class_d_o_1_1_tree_1ab2eeead563db79ec963561503f3db441" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>Tree</name></member>
      <member refid="class_d_o_1_1_tree_1a9603ba799d51fe7b2e8d2ac78abfa535" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>Tree</name></member>
      <member refid="class_d_o_1_1_tree_1a265a253612b46abed17c61b0a5e5ce30" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>value_type</name></member>
      <member refid="class_d_o_1_1_tree_1a4d2d4eaa9ac9d347549728060df29842" prot="public" virt="non-virtual"><scope>DO::Tree</scope><name>~Tree</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
