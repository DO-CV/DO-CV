<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_multi_array_8hpp" kind="file">
    <compoundname>MultiArray.hpp</compoundname>
    <includes refid="_locator_8hpp" local="yes">Locator.hpp</includes>
    <includes local="no">iostream</includes>
    <includes local="no">numeric</includes>
    <includedby refid="_image_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp</includedby>
    <includedby refid="_core_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</includedby>
    <incdepgraph>
      <node id="229">
        <label>iterator</label>
      </node>
      <node id="222">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp</label>
        <link refid="MultiArray.hpp"/>
        <childnode refid="223" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
        <childnode refid="231" relation="include">
        </childnode>
      </node>
      <node id="231">
        <label>numeric</label>
      </node>
      <node id="227">
        <label>Eigen/Eigen</label>
      </node>
      <node id="223">
        <label>Locator.hpp</label>
        <link refid="_locator_8hpp"/>
        <childnode refid="224" relation="include">
        </childnode>
        <childnode refid="225" relation="include">
        </childnode>
        <childnode refid="226" relation="include">
        </childnode>
        <childnode refid="229" relation="include">
        </childnode>
        <childnode refid="230" relation="include">
        </childnode>
      </node>
      <node id="225">
        <label>Meta.hpp</label>
        <link refid="_meta_8hpp"/>
      </node>
      <node id="224">
        <label>StaticAssert.hpp</label>
        <link refid="_static_assert_8hpp"/>
      </node>
      <node id="228">
        <label>sstream</label>
      </node>
      <node id="226">
        <label>EigenExtension.hpp</label>
        <link refid="_eigen_extension_8hpp"/>
        <childnode refid="227" relation="include">
        </childnode>
        <childnode refid="228" relation="include">
        </childnode>
      </node>
      <node id="230">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="249">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp</label>
        <link refid="_graphics_utilities_8hpp"/>
      </node>
      <node id="243">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree.hpp</label>
        <link refid="_k_d_tree_8hpp_source"/>
      </node>
      <node id="245">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp</label>
        <link refid="_draw_polygon_8hpp_source"/>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="247">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry.hpp</label>
        <link refid="_geometry_8hpp_source"/>
      </node>
      <node id="248">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/DerivedQObjects/GraphicsApplicationImpl.hpp</label>
        <link refid="_graphics_application_impl_8hpp"/>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="232">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp</label>
        <link refid="MultiArray.hpp"/>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="238">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features.hpp</label>
        <link refid="_features_8hpp"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
      </node>
      <node id="233">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="234" relation="include">
        </childnode>
        <childnode refid="235" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing.hpp</label>
        <link refid="_image_drawing_8hpp_source"/>
      </node>
      <node id="239">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors.hpp</label>
        <link refid="_feature_descriptors_8hpp"/>
      </node>
      <node id="240">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors.hpp</label>
        <link refid="_feature_detectors_8hpp"/>
      </node>
      <node id="234">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp</label>
        <link refid="_subimage_8hpp"/>
        <childnode refid="235" relation="include">
        </childnode>
      </node>
      <node id="237">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp</label>
        <link refid="_view_8hpp"/>
      </node>
      <node id="241">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing.hpp</label>
        <link refid="_image_processing_8hpp"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
      </node>
      <node id="235">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics.hpp</label>
        <link refid="_geometry_2_graphics_8hpp_source"/>
        <childnode refid="247" relation="include">
        </childnode>
      </node>
      <node id="236">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/FeatureItem.hpp</label>
        <link refid="_feature_item_8hpp_source"/>
      </node>
      <node id="250">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp</label>
        <link refid="_image_drawing_2_image_i_o_8hpp_source"/>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="244">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics.hpp</label>
        <link refid="_graphics_8hpp"/>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
      </node>
      <node id="242">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree/KDTree.hpp</label>
        <link refid="_k_d_tree_2_k_d_tree_8hpp_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_o_1_1_element_traits" prot="public">DO::ElementTraits</innerclass>
    <innerclass refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4" prot="public">DO::ElementTraits&lt; Matrix&lt; T, M, N &gt; &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4" prot="public">DO::ElementTraits&lt; Array&lt; T, M, N &gt; &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_multi_array" prot="public">DO::MultiArray</innerclass>
    <innerclass refid="struct_d_o_1_1_multi_array_1_1_cast" prot="private">DO::MultiArray::Cast</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
    <briefdescription>
<para>This contains the implementation of the N-dimensional array class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_CORE_MULTIARRAY_HPP</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_CORE_MULTIARRAY_HPP</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_locator_8hpp" kindref="compound" tooltip="Implementation of N-dimensional iterators.">Locator.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;numeric&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="32" refid="struct_d_o_1_1_element_traits" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_element_traits" kindref="compound">ElementTraits</ref></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="34" refid="struct_d_o_1_1_element_traits_1a265a253612b46abed17c61b0a5e5ce30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="struct_d_o_1_1_element_traits_1a265a253612b46abed17c61b0a5e5ce30" kindref="member" tooltip="STL-like typedef.">value_type</ref>;<sp/></highlight></codeline>
<codeline lineno="35" refid="struct_d_o_1_1_element_traits_1a49b489a408a211a90e766329c0732d7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_1a49b489a408a211a90e766329c0732d7b" kindref="member" tooltip="STL-like typedef.">size_type</ref>;<sp/></highlight></codeline>
<codeline lineno="36" refid="struct_d_o_1_1_element_traits_1a680c78d51cff3fd301666dd75bdbe49d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_1a680c78d51cff3fd301666dd75bdbe49d" kindref="member" tooltip="STL-like typedef.">pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="37" refid="struct_d_o_1_1_element_traits_1a53d259f0075b22d7646e373816830e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_1a53d259f0075b22d7646e373816830e8e" kindref="member" tooltip="STL-like typedef.">const_pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="38" refid="struct_d_o_1_1_element_traits_1a9b1a63f171d76a7a3995b6858e99f2ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_1a9b1a63f171d76a7a3995b6858e99f2ea" kindref="member" tooltip="STL-like typedef.">reference</ref>;<sp/></highlight></codeline>
<codeline lineno="39" refid="struct_d_o_1_1_element_traits_1af9ba3e25df088c62f7d535b91672cda9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_1af9ba3e25df088c62f7d535b91672cda9" kindref="member" tooltip="STL-like typedef.">const_reference</ref>;<sp/></highlight></codeline>
<codeline lineno="40" refid="struct_d_o_1_1_element_traits_1a35c955cacac6aacaa1e82874b1628865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_1a35c955cacac6aacaa1e82874b1628865" kindref="member" tooltip="STL-like typedef.">iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="41" refid="struct_d_o_1_1_element_traits_1a2fc97dce62b7053449cc868607540dba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_1a2fc97dce62b7053449cc868607540dba" kindref="member" tooltip="STL-like typedef.">const_iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="42" refid="struct_d_o_1_1_element_traits_1a083611162fed7f6427026ec1d5cd6678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_1a083611162fed7f6427026ec1d5cd6678" kindref="member" tooltip="STL-like typedef.">is_scalar</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="51" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_element_traits" kindref="compound">ElementTraits</ref>&lt;Matrix&lt;T,<sp/><ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref>,<sp/>N&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="53" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a2c1a2bceddef2c534fed633fdc679c17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_square_matrix<sp/>=<sp/>(<ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref><sp/>==<sp/>N);<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_meta_1_1_choose" kindref="compound" tooltip="Choose function.">Meta::Choose</ref>&lt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>is_square_matrix,<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Matrix&lt;T,<sp/>N,<sp/>N&gt;,<sp/></highlight></codeline>
<codeline lineno="57" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Array&lt;T,<sp/>M,<sp/>N&gt;<sp/>&gt;::Type<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" kindref="member" tooltip="STL-like typedef.">value_type</ref>;<sp/></highlight></codeline>
<codeline lineno="58" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a49b489a408a211a90e766329c0732d7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a49b489a408a211a90e766329c0732d7b" kindref="member" tooltip="STL-like typedef.">size_type</ref>;<sp/></highlight></codeline>
<codeline lineno="59" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1ad25b518036b886d8f35a3c059301d007" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1ad25b518036b886d8f35a3c059301d007" kindref="member" tooltip="STL-like typedef.">pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="60" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a13c57dab17e2c903cadfa5e35ba84064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member" tooltip="STL-like typedef.">const_pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="61" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1abe8933d436779a43cb5c1896ff5f2918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" kindref="member" tooltip="STL-like typedef.">value_type</ref>&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1abe8933d436779a43cb5c1896ff5f2918" kindref="member" tooltip="STL-like typedef.">reference</ref>;<sp/></highlight></codeline>
<codeline lineno="62" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1afdb67657e63a66ed3fae7b0c9fd81b48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" kindref="member" tooltip="STL-like typedef.">value_type</ref>&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member" tooltip="STL-like typedef.">const_reference</ref>;<sp/></highlight></codeline>
<codeline lineno="63" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a4b0424da8c99197075d119ba0959bf1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a4b0424da8c99197075d119ba0959bf1e" kindref="member" tooltip="STL-like typedef.">iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="64" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1aad40b6f664e3f2f7ab960886c2f7e325" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a1aa367efebeaa912dd4621408cde4541" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1aad40b6f664e3f2f7ab960886c2f7e325" kindref="member" tooltip="STL-like typedef.">const_iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="65" refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4_1a083611162fed7f6427026ec1d5cd6678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_1a083611162fed7f6427026ec1d5cd6678" kindref="member" tooltip="STL-like typedef.">is_scalar</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="71" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_element_traits" kindref="compound">ElementTraits</ref>&lt;Array&lt;T,<sp/><ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref>,<sp/>N&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="73" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Array&lt;T,<sp/>M,<sp/>N&gt;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" kindref="member" tooltip="STL-like typedef.">value_type</ref>;<sp/></highlight></codeline>
<codeline lineno="74" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a49b489a408a211a90e766329c0732d7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a49b489a408a211a90e766329c0732d7b" kindref="member" tooltip="STL-like typedef.">size_type</ref>;<sp/></highlight></codeline>
<codeline lineno="75" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ad25b518036b886d8f35a3c059301d007" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ad25b518036b886d8f35a3c059301d007" kindref="member" tooltip="STL-like typedef.">pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="76" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a13c57dab17e2c903cadfa5e35ba84064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member" tooltip="STL-like typedef.">const_pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="77" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1abe8933d436779a43cb5c1896ff5f2918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" kindref="member" tooltip="STL-like typedef.">value_type</ref>&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1abe8933d436779a43cb5c1896ff5f2918" kindref="member" tooltip="STL-like typedef.">reference</ref>;<sp/></highlight></codeline>
<codeline lineno="78" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1afdb67657e63a66ed3fae7b0c9fd81b48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" kindref="member" tooltip="STL-like typedef.">value_type</ref>&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member" tooltip="STL-like typedef.">const_reference</ref>;<sp/></highlight></codeline>
<codeline lineno="79" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a4b0424da8c99197075d119ba0959bf1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a4b0424da8c99197075d119ba0959bf1e" kindref="member" tooltip="STL-like typedef.">iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="80" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1aad40b6f664e3f2f7ab960886c2f7e325" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a3856a7f220de4e0ec21c4aa7e7d3ddc8" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1aad40b6f664e3f2f7ab960886c2f7e325" kindref="member" tooltip="STL-like typedef.">const_iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="81" refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a083611162fed7f6427026ec1d5cd6678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_1a083611162fed7f6427026ec1d5cd6678" kindref="member" tooltip="STL-like typedef.">is_scalar</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder<sp/>=<sp/>RowMajor&gt;</highlight></codeline>
<codeline lineno="95" refid="class_d_o_1_1_multi_array" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">MultiArray</ref></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>STL-like<sp/>interface.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, StorageOrder&gt;</ref><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">storage_index</ref>;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">MultiArray</ref><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">self_type</ref>;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>STL-like<sp/>interface.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="class_d_o_1_1_multi_array_1a89a6dcafb6130e3e1bcd6d1285e0dd6f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::size_t<sp/><ref refid="class_d_o_1_1_multi_array_1a89a6dcafb6130e3e1bcd6d1285e0dd6f" kindref="member" tooltip="STL typedef.">size_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103" refid="class_d_o_1_1_multi_array_1ad319fc54a93a2c7058c70e40428ed2e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::ptrdiff_t<sp/><ref refid="class_d_o_1_1_multi_array_1ad319fc54a93a2c7058c70e40428ed2e2" kindref="member" tooltip="STL typedef.">difference_type</ref>;<sp/></highlight></codeline>
<codeline lineno="104" refid="class_d_o_1_1_multi_array_1a265a253612b46abed17c61b0a5e5ce30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_d_o_1_1_multi_array_1a265a253612b46abed17c61b0a5e5ce30" kindref="member" tooltip="STL typedef.">value_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105" refid="class_d_o_1_1_multi_array_1a680c78d51cff3fd301666dd75bdbe49d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="class_d_o_1_1_multi_array_1a680c78d51cff3fd301666dd75bdbe49d" kindref="member" tooltip="STL typedef.">pointer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="106" refid="class_d_o_1_1_multi_array_1a53d259f0075b22d7646e373816830e8e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="class_d_o_1_1_multi_array_1a53d259f0075b22d7646e373816830e8e" kindref="member" tooltip="STL typedef.">const_pointer</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107" refid="class_d_o_1_1_multi_array_1a9b1a63f171d76a7a3995b6858e99f2ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a9b1a63f171d76a7a3995b6858e99f2ea" kindref="member" tooltip="STL typedef.">reference</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108" refid="class_d_o_1_1_multi_array_1af9ba3e25df088c62f7d535b91672cda9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1af9ba3e25df088c62f7d535b91672cda9" kindref="member" tooltip="STL typedef.">const_reference</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109" refid="class_d_o_1_1_multi_array_1a35c955cacac6aacaa1e82874b1628865" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="class_d_o_1_1_multi_array_1a35c955cacac6aacaa1e82874b1628865" kindref="member" tooltip="STL typedef.">iterator</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="110" refid="class_d_o_1_1_multi_array_1a2fc97dce62b7053449cc868607540dba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*<sp/><ref refid="class_d_o_1_1_multi_array_1a2fc97dce62b7053449cc868607540dba" kindref="member" tooltip="STL typedef.">const_iterator</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="113" refid="class_d_o_1_1_multi_array_1af94cd6f98815d838c630d458ffbd5d88" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;int,<sp/>N,<sp/>1&gt;<sp/><ref refid="class_d_o_1_1_multi_array_1af94cd6f98815d838c630d458ffbd5d88" kindref="member" tooltip="Vector type.">coords_type</ref>,<sp/>vector_type;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_d_o_1_1_multi_array_1a598d93e43e894a9acbbaf36d99afeaa2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">RangeIterator&lt;false, T, N, StorageOrder&gt;</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a598d93e43e894a9acbbaf36d99afeaa2" kindref="member" tooltip="N-dimensional iterator.">range_iterator</ref>;</highlight></codeline>
<codeline lineno="118" refid="class_d_o_1_1_multi_array_1aa8ebb791e2ac5be9d07eb78236f6b75e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_subrange_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;SubrangeIterator&amp;#39; class is a heavy object...">SubrangeIterator&lt;false, T, N, StorageOrder&gt;</ref><sp/><ref refid="class_d_o_1_1_multi_array_1aa8ebb791e2ac5be9d07eb78236f6b75e" kindref="member" tooltip="N-dimensional subrange iterator.">subrange_iterator</ref>;</highlight></codeline>
<codeline lineno="120" refid="class_d_o_1_1_multi_array_1ad69c27e7edbb13178e1dc9147c5ce613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">RangeIterator&lt;true, T, N, StorageOrder&gt;</ref><sp/><ref refid="class_d_o_1_1_multi_array_1ad69c27e7edbb13178e1dc9147c5ce613" kindref="member" tooltip="Immutable N-dimensional iterator.">const_range_iterator</ref>;</highlight></codeline>
<codeline lineno="122" refid="class_d_o_1_1_multi_array_1a860b7c52202b3cf2240cfc5cd84e9556" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_subrange_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;SubrangeIterator&amp;#39; class is a heavy object...">SubrangeIterator&lt;true, T, N, StorageOrder&gt;</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a860b7c52202b3cf2240cfc5cd84e9556" kindref="member" tooltip="Immutable N-dimensional subrange iterator.">const_subrange_iterator</ref>;</highlight></codeline>
<codeline lineno="124" refid="class_d_o_1_1_multi_array_1a51ca55d9377565ef193eae7ebbf945db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">CoordsIterator&lt;N&gt;</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a51ca55d9377565ef193eae7ebbf945db" kindref="member" tooltip="Iterator over the coordinates.">coords_iterator</ref>;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Map&lt;const<sp/>Array&lt;typename<sp/>ElementTraits&lt;T&gt;::value_type,<sp/>Dynamic,<sp/>1&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="128" refid="class_d_o_1_1_multi_array_1a4c4550c956b26060ca29852fc7752500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a4c4550c956b26060ca29852fc7752500" kindref="member" tooltip="Immutable matrix view for linear algebra.">const_array_view_type</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Map&lt;Array&lt;typename<sp/>ElementTraits&lt;T&gt;::value_type,<sp/>Dynamic,<sp/>1&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="131" refid="class_d_o_1_1_multi_array_1a9f4b00f1ddd01a394b9e7efc47206238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a9f4b00f1ddd01a394b9e7efc47206238" kindref="member" tooltip="Mutable matrix view for linear algebra.">array_view_type</ref>;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Map&lt;const<sp/>Matrix&lt;typename<sp/>ElementTraits&lt;T&gt;::value_type,</highlight></codeline>
<codeline lineno="134" refid="class_d_o_1_1_multi_array_1a6dcd1d235928f2209e19860122cfe407" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dynamic,<sp/>Dynamic,<sp/>StorageOrder&gt;<sp/>&gt;<sp/><ref refid="class_d_o_1_1_multi_array_1a6dcd1d235928f2209e19860122cfe407" kindref="member" tooltip="Immutable matrix view for linear algebra.">const_matrix_view_type</ref>;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Map&lt;Matrix&lt;typename<sp/>ElementTraits&lt;T&gt;::value_type,</highlight></codeline>
<codeline lineno="137" refid="class_d_o_1_1_multi_array_1a185870835281f858bc66928f6c9e1e52" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Dynamic,<sp/>Dynamic,<sp/>StorageOrder&gt;<sp/>&gt;<sp/><ref refid="class_d_o_1_1_multi_array_1a185870835281f858bc66928f6c9e1e52" kindref="member" tooltip="Mutable matrix view for linear algebra.">matrix_view_type</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>interface<sp/>*/</highlight></codeline>
<codeline lineno="141" refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" kindref="member" tooltip="Default constructor that constructs an empty N-dimensional array.">MultiArray</ref>()</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_(0)</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>end_(0)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sizes_(vector_type::Zero())</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>strides_(vector_type::Zero())</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>is_wrapped_data_(false)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="149" refid="class_d_o_1_1_multi_array_1a94b6d325d4d1647132755287d95f8991" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" kindref="member" tooltip="Default constructor that constructs an empty N-dimensional array.">MultiArray</ref>(<ref refid="class_d_o_1_1_multi_array_1a265a253612b46abed17c61b0a5e5ce30" kindref="member" tooltip="STL typedef.">value_type</ref><sp/>*<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>,</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getOwnership<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_(data)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>end_(data+compute_size(sizes))</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sizes_(sizes),<sp/>strides_(compute_strides(sizes))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>is_wrapped_data_(!getOwnership)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="158" refid="class_d_o_1_1_multi_array_1a12c16e1c2846b8ca00471291ba650988" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" kindref="member" tooltip="Default constructor that constructs an empty N-dimensional array.">MultiArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_(new<sp/>T[compute_size(sizes)])</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>end_(begin_<sp/>+<sp/>compute_size(sizes))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sizes_(sizes),<sp/>strides_(compute_strides(sizes))</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>is_wrapped_data_(false)</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="166" refid="class_d_o_1_1_multi_array_1acbb77f86b0c9386505a84adcd76f66e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" kindref="member" tooltip="Default constructor that constructs an empty N-dimensional array.">MultiArray</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">rows</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">cols</ref>)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_(new<sp/>T[rows*cols])</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>end_(begin_<sp/>+<sp/>rows*cols)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sizes_(rows,<sp/>cols)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>strides_(compute_strides(vector_type(rows,<sp/>cols)))</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>is_wrapped_data_(false)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="175" refid="class_d_o_1_1_multi_array_1a8009a5ab280ef118a93962a538f023db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" kindref="member" tooltip="Default constructor that constructs an empty N-dimensional array.">MultiArray</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">rows</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">cols</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3275d1392d01b26af1c8cd52b0d10745" kindref="member" tooltip="Depth getter.">depth</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_(new<sp/>T[rows*cols*depth])</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>end_(begin_<sp/>+<sp/>rows*cols*depth)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sizes_(rows,<sp/>cols,<sp/>depth)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>strides_(compute_strides(vector_type(rows,<sp/>cols,<sp/>depth)))</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>is_wrapped_data_(false)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="183" refid="class_d_o_1_1_multi_array_1a50b55fece94eb8d5bb64c267a3ab54fc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" kindref="member" tooltip="Default constructor that constructs an empty N-dimensional array.">MultiArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">self_type</ref>&amp;<sp/><ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref>)</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_(new<sp/>T[M.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>()])</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>end_(begin_<sp/>+<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>())</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sizes_(M.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>())</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>strides_(M.<ref refid="class_d_o_1_1_multi_array_1a5be6b48ede748b588c237552cbf3b6b8" kindref="member" tooltip="Strides getter.">strides</ref>())</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>is_wrapped_data_(false)</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>std::copy(M.<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>(),<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>()<sp/>+<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>(),<sp/>begin_);<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="193" refid="class_d_o_1_1_multi_array_1aff00de73e78f6b4e9c3f534bfc4afeb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a596f3b4b4084da422cb3320e165e1d89" kindref="member" tooltip="Default constructor that constructs an empty N-dimensional array.">MultiArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">MultiArray&lt;T2, N, StorageOrder&gt;</ref>&amp;<sp/><ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref>)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>begin_(new<sp/>T[M.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>()])</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>end_(begin_<sp/>+<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>())</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>sizes_(M.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>())</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>strides_(M.<ref refid="class_d_o_1_1_multi_array_1a5be6b48ede748b588c237552cbf3b6b8" kindref="member" tooltip="Strides getter.">strides</ref>())</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>is_wrapped_data_(false)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>std::transform(M.<ref refid="class_d_o_1_1_multi_array_1ad69bd11391be1a1dba5c8202259664f8" kindref="member" tooltip="Mutable beginning iterator.">begin</ref>(),<sp/>M.<ref refid="class_d_o_1_1_multi_array_1acad38d52497a975bfb6f2f6acd76631f" kindref="member" tooltip="Mutable ending iterator.">end</ref>(),<sp/><ref refid="class_d_o_1_1_multi_array_1ad69bd11391be1a1dba5c8202259664f8" kindref="member" tooltip="Mutable beginning iterator.">begin</ref>(),<sp/>Cast());<sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="class_d_o_1_1_multi_array_1ae67638f4b1e3885c9308aac696c195fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1ae67638f4b1e3885c9308aac696c195fa" kindref="member" tooltip="Destructor.">~MultiArray</ref>()</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!is_wrapped_data_<sp/>&amp;&amp;<sp/>begin_)<sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>begin_;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="class_d_o_1_1_multi_array_1a6c4f23db722b5e9bf57ef750c5fd18bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a6c4f23db722b5e9bf57ef750c5fd18bd" kindref="member" tooltip="Assignment operator uses the copy-swap idiom.">operator=</ref>(<ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">self_type</ref><sp/><ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref>)</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" kindref="member" tooltip="Swap arrays.">swap</ref>(M);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="217" refid="class_d_o_1_1_multi_array_1aeaf5648ec46dbd53a8818e3aed129068" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a6c4f23db722b5e9bf57ef750c5fd18bd" kindref="member" tooltip="Assignment operator uses the copy-swap idiom.">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">MultiArray&lt;T2, N, StorageOrder&gt;</ref>&amp;<sp/><ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_wrapped_data_)</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Fatal<sp/>Error:<sp/>using<sp/>the<sp/>assignment<sp/>operator<sp/>on<sp/>wrapped<sp/>data<sp/>is<sp/>not<sp/>allowed!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Terminating<sp/>!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(-1);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Free<sp/>memory.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>begin_;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copy<sp/>everything.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>begin_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[M.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>()];</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizes_<sp/>=<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>();</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_<sp/>=<sp/>begin_<sp/>+<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>();</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strides_<sp/>=<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a5be6b48ede748b588c237552cbf3b6b8" kindref="member" tooltip="Strides getter.">strides</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::transform(M.<ref refid="class_d_o_1_1_multi_array_1ad69bd11391be1a1dba5c8202259664f8" kindref="member" tooltip="Mutable beginning iterator.">begin</ref>(),<sp/>M.<ref refid="class_d_o_1_1_multi_array_1acad38d52497a975bfb6f2f6acd76631f" kindref="member" tooltip="Mutable ending iterator.">end</ref>(),<sp/>begin_,<sp/>Cast());</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a9b1a63f171d76a7a3995b6858e99f2ea" kindref="member" tooltip="STL typedef.">reference</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" kindref="member" tooltip="Mutable referencing operator.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af94cd6f98815d838c630d458ffbd5d88" kindref="member" tooltip="Vector type.">coords_type</ref>&amp;<sp/>c)</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_[offset(c)];<sp/>}</highlight></codeline>
<codeline lineno="240" refid="class_d_o_1_1_multi_array_1a07f8b52897f0d3f5835cef615d3a4ff0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a9b1a63f171d76a7a3995b6858e99f2ea" kindref="member" tooltip="STL typedef.">reference</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" kindref="member" tooltip="Mutable referencing operator.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_[offset(i,<sp/>j)];<sp/>}</highlight></codeline>
<codeline lineno="243" refid="class_d_o_1_1_multi_array_1a39b2df46d5f4fc6ab3f6311e21bbf184" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a9b1a63f171d76a7a3995b6858e99f2ea" kindref="member" tooltip="STL typedef.">reference</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" kindref="member" tooltip="Mutable referencing operator.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_[offset(i,<sp/>j,<sp/>k)];<sp/>}</highlight></codeline>
<codeline lineno="246" refid="class_d_o_1_1_multi_array_1ac4b8c64f6893bd74ecd120d8895b887d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af9ba3e25df088c62f7d535b91672cda9" kindref="member" tooltip="STL typedef.">const_reference</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" kindref="member" tooltip="Mutable referencing operator.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af94cd6f98815d838c630d458ffbd5d88" kindref="member" tooltip="Vector type.">coords_type</ref>&amp;<sp/>c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="247"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_[offset(c)];<sp/>}</highlight></codeline>
<codeline lineno="249" refid="class_d_o_1_1_multi_array_1a775d64bc033de30a55882546aa444731" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af9ba3e25df088c62f7d535b91672cda9" kindref="member" tooltip="STL typedef.">const_reference</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" kindref="member" tooltip="Mutable referencing operator.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="250"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_[offset(i,<sp/>j)];<sp/>}</highlight></codeline>
<codeline lineno="252" refid="class_d_o_1_1_multi_array_1a5f265fc9984db753cbe10b36e438a741" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af9ba3e25df088c62f7d535b91672cda9" kindref="member" tooltip="STL typedef.">const_reference</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" kindref="member" tooltip="Mutable referencing operator.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="253"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_[offset(i,<sp/>j,<sp/>k)];<sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a680c78d51cff3fd301666dd75bdbe49d" kindref="member" tooltip="STL typedef.">pointer</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>()</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_;<sp/>}</highlight></codeline>
<codeline lineno="259" refid="class_d_o_1_1_multi_array_1a794bbc6c3888bcfe88fb961f527c3563" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a53d259f0075b22d7646e373816830e8e" kindref="member" tooltip="STL typedef.">const_pointer</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="260"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_;<sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_d_o_1_1_multi_array_1ad69bd11391be1a1dba5c8202259664f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a35c955cacac6aacaa1e82874b1628865" kindref="member" tooltip="STL typedef.">iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1ad69bd11391be1a1dba5c8202259664f8" kindref="member" tooltip="Mutable beginning iterator.">begin</ref>()</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_;<sp/>}</highlight></codeline>
<codeline lineno="266" refid="class_d_o_1_1_multi_array_1aa4b02d4f1a8500fb07a551069060709f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a2fc97dce62b7053449cc868607540dba" kindref="member" tooltip="STL typedef.">const_iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1ad69bd11391be1a1dba5c8202259664f8" kindref="member" tooltip="Mutable beginning iterator.">begin</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="267"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>begin_;<sp/>}</highlight></codeline>
<codeline lineno="269" refid="class_d_o_1_1_multi_array_1acad38d52497a975bfb6f2f6acd76631f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a35c955cacac6aacaa1e82874b1628865" kindref="member" tooltip="STL typedef.">iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acad38d52497a975bfb6f2f6acd76631f" kindref="member" tooltip="Mutable ending iterator.">end</ref>()</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_;<sp/>}</highlight></codeline>
<codeline lineno="272" refid="class_d_o_1_1_multi_array_1a350132543d80a1c1e5be844e6d2878ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a2fc97dce62b7053449cc868607540dba" kindref="member" tooltip="STL typedef.">const_iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1acad38d52497a975bfb6f2f6acd76631f" kindref="member" tooltip="Mutable ending iterator.">end</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="273"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_;<sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="277"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizes_;<sp/>}</highlight></codeline>
<codeline lineno="279" refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a89a6dcafb6130e3e1bcd6d1285e0dd6f" kindref="member" tooltip="STL typedef.">size_type</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="280"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>end_<sp/>-<sp/>begin_;<sp/>}</highlight></codeline>
<codeline lineno="282" refid="class_d_o_1_1_multi_array_1ab243ad95876992f71bfc9043b9a713bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="283"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizes_[i];<sp/>}</highlight></codeline>
<codeline lineno="285" refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">rows</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="286"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizes_[0];<sp/>}</highlight></codeline>
<codeline lineno="288" refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">cols</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="289"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizes_[1];<sp/>}</highlight></codeline>
<codeline lineno="291" refid="class_d_o_1_1_multi_array_1a3275d1392d01b26af1c8cd52b0d10745" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3275d1392d01b26af1c8cd52b0d10745" kindref="member" tooltip="Depth getter.">depth</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="292"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizes_[2];<sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="class_d_o_1_1_multi_array_1a5be6b48ede748b588c237552cbf3b6b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a5be6b48ede748b588c237552cbf3b6b8" kindref="member" tooltip="Strides getter.">strides</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="296"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strides_;<sp/>}</highlight></codeline>
<codeline lineno="298" refid="class_d_o_1_1_multi_array_1abe61dbf6dda369f1605c7700793791bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1abe61dbf6dda369f1605c7700793791bd" kindref="member" tooltip="Stride along the i-th dimension.">stride</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="299"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strides_[i];<sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="class_d_o_1_1_multi_array_1ab90f193517fda2b4390b14eba239dd5d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">range_iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1ab90f193517fda2b4390b14eba239dd5d" kindref="member" tooltip="Mutable locator.">begin_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af94cd6f98815d838c630d458ffbd5d88" kindref="member" tooltip="Vector type.">coords_type</ref>&amp;<sp/>anchor<sp/>=<sp/>coords_type::Zero())</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>anchor<sp/>is<sp/>within<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">range_iterator</ref><sp/>loc(begin_,<sp/>coords_type::Zero(),<sp/>begin_,<sp/>end_,<sp/>sizes_,<sp/>strides_);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>!=<sp/>coords_type::Zero())</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc<sp/>+=<sp/>anchor;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loc;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a598d93e43e894a9acbbaf36d99afeaa2" kindref="member" tooltip="N-dimensional iterator.">range_iterator</ref><sp/>end_range()</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a598d93e43e894a9acbbaf36d99afeaa2" kindref="member" tooltip="N-dimensional iterator.">range_iterator</ref>(end_,<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>(),<sp/>begin_,<sp/>end_,<sp/>sizes_,<sp/>strides_,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="313" refid="class_d_o_1_1_multi_array_1ad4ccc9303c78df229b72e331d4d1fa63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_subrange_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;SubrangeIterator&amp;#39; class is a heavy object...">subrange_iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1ad4ccc9303c78df229b72e331d4d1fa63" kindref="member" tooltip="Mutable subrange locator.">begin_subrange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>start,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1acad38d52497a975bfb6f2f6acd76631f" kindref="member" tooltip="Mutable ending iterator.">end</ref>)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1aa8ebb791e2ac5be9d07eb78236f6b75e" kindref="member" tooltip="N-dimensional subrange iterator.">subrange_iterator</ref>(</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_,<sp/>start,<sp/>start,<sp/>end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_+offset(start),<sp/>sizes_,<sp/>strides_);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1aa8ebb791e2ac5be9d07eb78236f6b75e" kindref="member" tooltip="N-dimensional subrange iterator.">subrange_iterator</ref><sp/>end_subrange()</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1aa8ebb791e2ac5be9d07eb78236f6b75e" kindref="member" tooltip="N-dimensional subrange iterator.">subrange_iterator</ref>(</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_,<sp/>sizes_,<sp/>sizes_,<sp/>sizes_,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_,<sp/>sizes_,<sp/>strides_);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327" refid="class_d_o_1_1_multi_array_1a5161c07fa6877d2f743ebc615d537efa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">const_range_iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1ab90f193517fda2b4390b14eba239dd5d" kindref="member" tooltip="Mutable locator.">begin_range</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af94cd6f98815d838c630d458ffbd5d88" kindref="member" tooltip="Vector type.">coords_type</ref>&amp;<sp/>anchor<sp/>=<sp/>coords_type::Zero())</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="328"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>anchor<sp/>is<sp/>within<sp/>bounds</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">const_range_iterator</ref><sp/>loc(begin_,<sp/>coords_type::Zero(),<sp/>begin_,<sp/>end_,<sp/>sizes_,<sp/>strides_);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor<sp/>!=<sp/>coords_type::Zero())</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loc<sp/>+=<sp/>anchor;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>loc;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1ad69c27e7edbb13178e1dc9147c5ce613" kindref="member" tooltip="Immutable N-dimensional iterator.">const_range_iterator</ref><sp/>end_range()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="336"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1ad69c27e7edbb13178e1dc9147c5ce613" kindref="member" tooltip="Immutable N-dimensional iterator.">const_range_iterator</ref>(end_,<sp/>sizes_,<sp/>begin_,<sp/>end_,<sp/>sizes_,<sp/>strides_,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="338" refid="class_d_o_1_1_multi_array_1a20329a245ea068ae0caca3226ecddc11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_subrange_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;SubrangeIterator&amp;#39; class is a heavy object...">const_subrange_iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1ad4ccc9303c78df229b72e331d4d1fa63" kindref="member" tooltip="Mutable subrange locator.">begin_subrange</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>start,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1acad38d52497a975bfb6f2f6acd76631f" kindref="member" tooltip="Mutable ending iterator.">end</ref>)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="340"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a860b7c52202b3cf2240cfc5cd84e9556" kindref="member" tooltip="Immutable N-dimensional subrange iterator.">const_subrange_iterator</ref>(</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_,<sp/>start,<sp/>start,<sp/>end,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_+offset(start),<sp/>sizes_,<sp/>strides_);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a860b7c52202b3cf2240cfc5cd84e9556" kindref="member" tooltip="Immutable N-dimensional subrange iterator.">const_subrange_iterator</ref><sp/>end_subrange()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="346"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a860b7c52202b3cf2240cfc5cd84e9556" kindref="member" tooltip="Immutable N-dimensional subrange iterator.">const_subrange_iterator</ref>(</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin_,<sp/>sizes_,<sp/>sizes_,<sp/>sizes_,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_,<sp/>sizes_,<sp/>strides_);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352" refid="class_d_o_1_1_multi_array_1a0bd08eea84159de6ddc3e5279e3b6e2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">coords_iterator</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a0bd08eea84159de6ddc3e5279e3b6e2d" kindref="member" tooltip="Coords iterator.">begin_coords</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="353"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a51ca55d9377565ef193eae7ebbf945db" kindref="member" tooltip="Iterator over the coordinates.">coords_iterator</ref>(coords_type::Zero(),<sp/>(sizes_.array()-1).<ref refid="class_d_o_1_1_multi_array_1a401c62522ef1eaf762863bc2cab8916e" kindref="member" tooltip="Non-mutable matrix view for linear algebra with Eigen 3.">matrix</ref>());<sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a51ca55d9377565ef193eae7ebbf945db" kindref="member" tooltip="Iterator over the coordinates.">coords_iterator</ref><sp/>end_coords()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="355"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a51ca55d9377565ef193eae7ebbf945db" kindref="member" tooltip="Iterator over the coordinates.">coords_iterator</ref>();<sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="358" refid="class_d_o_1_1_multi_array_1a3f049389446e1c60e25f09be5b64f192" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3f049389446e1c60e25f09be5b64f192" kindref="member" tooltip="Resizing method.">resize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(is_wrapped_data_)</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;data<sp/>is<sp/>wrapped!<sp/>Not<sp/>resizing&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!begin_)</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>begin_;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>begin_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>T[compute_size(sizes)];</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>end_<sp/>=<sp/>begin_<sp/>+<sp/>compute_size(sizes);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sizes_<sp/>=<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strides_<sp/>=<sp/>compute_strides(sizes);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376" refid="class_d_o_1_1_multi_array_1a574c89c5254dabd3d20950612732104a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3f049389446e1c60e25f09be5b64f192" kindref="member" tooltip="Resizing method.">resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">rows</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">cols</ref>)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a574c89c5254dabd3d20950612732104a" kindref="member" tooltip="Resizing method.">resize</ref>(vector_type(rows,<sp/>cols));<sp/>}</highlight></codeline>
<codeline lineno="379" refid="class_d_o_1_1_multi_array_1ae519bd2dc457833fb5de167c6da87a2f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3f049389446e1c60e25f09be5b64f192" kindref="member" tooltip="Resizing method.">resize</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">rows</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">cols</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a3275d1392d01b26af1c8cd52b0d10745" kindref="member" tooltip="Depth getter.">depth</ref>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1ae519bd2dc457833fb5de167c6da87a2f" kindref="member" tooltip="Resizing method.">resize</ref>(vector_type(rows,<sp/>cols,<sp/>depth));<sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="383" refid="class_d_o_1_1_multi_array_1a8ede4f48ca36ec46ca4b57e3e2eeb3f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a4c4550c956b26060ca29852fc7752500" kindref="member" tooltip="Immutable matrix view for linear algebra.">const_array_view_type</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a8ede4f48ca36ec46ca4b57e3e2eeb3f7" kindref="member" tooltip="Non-mutable array view for linear algebra with Eigen 3.">array</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="384"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a4c4550c956b26060ca29852fc7752500" kindref="member" tooltip="Immutable matrix view for linear algebra.">const_array_view_type</ref>(<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">typename<sp/><ref refid="struct_d_o_1_1_element_traits_1a53d259f0075b22d7646e373816830e8e" kindref="member" tooltip="STL-like typedef.">ElementTraits&lt;T&gt;::const_pointer</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>()),</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>());<sp/></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="390" refid="class_d_o_1_1_multi_array_1a32bc57ca621cb7ae27ab5aa25ef1c70d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a9f4b00f1ddd01a394b9e7efc47206238" kindref="member" tooltip="Mutable matrix view for linear algebra.">array_view_type</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a8ede4f48ca36ec46ca4b57e3e2eeb3f7" kindref="member" tooltip="Non-mutable array view for linear algebra with Eigen 3.">array</ref>()</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a9f4b00f1ddd01a394b9e7efc47206238" kindref="member" tooltip="Mutable matrix view for linear algebra.">array_view_type</ref>(<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/><ref refid="struct_d_o_1_1_element_traits_1a680c78d51cff3fd301666dd75bdbe49d" kindref="member" tooltip="STL-like typedef.">ElementTraits&lt;T&gt;::pointer</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>()),</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>());<sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397" refid="class_d_o_1_1_multi_array_1a401c62522ef1eaf762863bc2cab8916e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a6dcd1d235928f2209e19860122cfe407" kindref="member" tooltip="Immutable matrix view for linear algebra.">const_matrix_view_type</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a401c62522ef1eaf762863bc2cab8916e" kindref="member" tooltip="Non-mutable matrix view for linear algebra with Eigen 3.">matrix</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="398"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(N<sp/>==<sp/>2,<sp/>MULTIARRAY_MUST_HAVE_TWO_DIMENSIONS);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a6dcd1d235928f2209e19860122cfe407" kindref="member" tooltip="Immutable matrix view for linear algebra.">const_matrix_view_type</ref>(<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/><ref refid="struct_d_o_1_1_element_traits_1a53d259f0075b22d7646e373816830e8e" kindref="member" tooltip="STL-like typedef.">ElementTraits&lt;T&gt;::const_pointer</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>()),</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">rows</ref>(),<sp/><ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">cols</ref>());</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405" refid="class_d_o_1_1_multi_array_1a2661eb3a043e573e6039849f9742975a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a185870835281f858bc66928f6c9e1e52" kindref="member" tooltip="Mutable matrix view for linear algebra.">matrix_view_type</ref><sp/><ref refid="class_d_o_1_1_multi_array_1a401c62522ef1eaf762863bc2cab8916e" kindref="member" tooltip="Non-mutable matrix view for linear algebra with Eigen 3.">matrix</ref>()</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(N<sp/>==<sp/>2,<sp/>MULTIARRAY_MUST_HAVE_TWO_DIMENSIONS);</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a185870835281f858bc66928f6c9e1e52" kindref="member" tooltip="Mutable matrix view for linear algebra.">matrix_view_type</ref>(<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typename<sp/><ref refid="struct_d_o_1_1_element_traits_1a680c78d51cff3fd301666dd75bdbe49d" kindref="member" tooltip="STL-like typedef.">ElementTraits&lt;T&gt;::pointer</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>()),</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">rows</ref>(),<sp/><ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">cols</ref>());</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="class_d_o_1_1_multi_array_1af05ca63ef4968e9da0971052f416df2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af05ca63ef4968e9da0971052f416df2c" kindref="member" tooltip="Debugging methods.">check_sizes_and_strides</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="415"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Multiarray<sp/>size<sp/>=<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>Map&lt;const<sp/>Matrix&lt;int,<sp/>1,<sp/>N&gt;<sp/>&gt;(sizes_.data())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Multiarray<sp/>strides<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>Map&lt;const<sp/>Matrix&lt;int,<sp/>1,<sp/>N&gt;<sp/>&gt;(strides_.data())<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="423" refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" kindref="member" tooltip="Swap arrays.">swap</ref>(<ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">self_type</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::swap;</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" kindref="member" tooltip="Swap arrays.">swap</ref>(begin_,<sp/>other.begin_);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" kindref="member" tooltip="Swap arrays.">swap</ref>(end_,<sp/>other.end_);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" kindref="member" tooltip="Swap arrays.">swap</ref>(sizes_,<sp/>other.sizes_);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" kindref="member" tooltip="Swap arrays.">swap</ref>(strides_,<sp/>other.strides_);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1aec44f1e87d499827231c9087be3bd99b" kindref="member" tooltip="Swap arrays.">swap</ref>(is_wrapped_data_,<sp/>other.is_wrapped_data_);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>helper<sp/>functions<sp/>for<sp/>offset<sp/>computation.<sp/>*/</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>vector_type<sp/>compute_strides(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector_type<sp/><ref refid="class_d_o_1_1_multi_array_1a5be6b48ede748b588c237552cbf3b6b8" kindref="member" tooltip="Strides getter.">strides</ref>;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>storage_index::eval_strides(strides.data(),<sp/>sizes.data());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1a5be6b48ede748b588c237552cbf3b6b8" kindref="member" tooltip="Strides getter.">strides</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compute_size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>sizes)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="446"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::accumulate(sizes.data(),<sp/>sizes.data()+N,</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>std::multiplies&lt;int&gt;());</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array_1af94cd6f98815d838c630d458ffbd5d88" kindref="member" tooltip="Vector type.">coords_type</ref>&amp;<sp/>c)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="452"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Complexities<sp/>are<sp/>comparable:<sp/>no<sp/>significant<sp/>performance<sp/>discrepancy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Both<sp/>exploit<sp/>loop<sp/>unrolling.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//return<sp/>Offset2&lt;N&gt;::eval(c.data(),<sp/>strides_.data());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_index::eval(c.data(),<sp/>sizes_.data());</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="460"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_index::eval(i,<sp/>j,<sp/>sizes_[0],<sp/>sizes_[1]);<sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="463"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>storage_index::eval(i,<sp/>j,<sp/>k,<sp/>sizes_[0],<sp/>sizes_[1],<sp/>sizes_[2]);<sp/>}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Cast</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_d_o_1_1_multi_array_1acde7384c0a8f7d0d69bc9ec7d57967c3" kindref="member" tooltip="Mutable referencing operator.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>U&amp;<sp/><ref refid="group___channel_accessors_1ga056f2dcf2b4d1976e50bf20547617584" kindref="member" tooltip="Mutable channel accessor.">u</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">T</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<ref refid="group___channel_accessors_1ga056f2dcf2b4d1976e50bf20547617584" kindref="member" tooltip="Mutable channel accessor.">u</ref>);<sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>data<sp/>members.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a265a253612b46abed17c61b0a5e5ce30" kindref="member" tooltip="STL typedef.">value_type</ref><sp/>*begin_;<sp/></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_multi_array_1a265a253612b46abed17c61b0a5e5ce30" kindref="member" tooltip="STL typedef.">value_type</ref><sp/>*end_;<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_type<sp/>sizes_;<sp/></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_type<sp/>strides_;<sp/></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight></codeline>
<codeline lineno="478"></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_wrapped_data_;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder&gt;</highlight></codeline>
<codeline lineno="484" refid="group___multi_array_1ga9223155c64483239f48caab75fc0557d" refkind="member"><highlight class="normal"><sp/><sp/>std::ostream&amp;<sp/><ref refid="group___multi_array_1ga9223155c64483239f48caab75fc0557d" kindref="member" tooltip="output stream operator">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">MultiArray&lt;T,N,StorageOrder&gt;</ref>&amp;<sp/><ref refid="struct_d_o_1_1_m" kindref="compound" tooltip="Magenta channel name (CMYK).">M</ref>)</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>M.<ref refid="class_d_o_1_1_multi_array_1a8ede4f48ca36ec46ca4b57e3e2eeb3f7" kindref="member" tooltip="Non-mutable array view for linear algebra with Eigen 3.">array</ref>()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>os;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal">}</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_CORE_MULTIARRAY_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp"/>
  </compounddef>
</doxygen>
