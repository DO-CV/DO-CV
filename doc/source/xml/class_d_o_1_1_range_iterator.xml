<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_d_o_1_1_range_iterator" kind="class" prot="public">
    <compoundname>DO::RangeIterator</compoundname>
    <basecompoundref refid="class_d_o_1_1_range_iterator_base" prot="public" virt="non-virtual">DO::RangeIteratorBase&lt; IsConst, T, N, StorageOrder &gt;</basecompoundref>
    <includes refid="_locator_8hpp" local="no">Locator.hpp</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>int</type>
        <declname>StorageOrder</declname>
        <defname>StorageOrder</defname>
        <defval>ColMajor</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1ae0fad1d0505b8ef2c9c121853fe62d76" prot="private" static="no">
        <type><ref refid="struct_d_o_1_1_offset" kindref="compound">Offset</ref>&lt; N, StorageOrder &gt;</type>
        <definition>typedef Offset&lt;N, StorageOrder&gt; offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1026" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1026" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1ab82e2eaecc5d35ce614e17953cd9b211" prot="private" static="no">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">RangeIteratorBase</ref>&lt; IsConst, T, N, StorageOrder &gt;</type>
        <definition>typedef RangeIteratorBase&lt;IsConst, T, N, StorageOrder&gt; base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1027" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1027" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1afabdc9b5f48b286e2d7676557d2b66ed" prot="public" static="no">
        <type>base_type::value_type</type>
        <definition>typedef base_type::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1035" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1035" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1a7f1b8fde63313dfc323ad4f7cb81b188" prot="public" static="no">
        <type>base_type::difference_type</type>
        <definition>typedef base_type::difference_type difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1035" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1035" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1a68ecfc7edab9c677fab5affc459305f2" prot="public" static="no">
        <type>base_type::pointer</type>
        <definition>typedef base_type::pointer pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1035" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1035" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1aa5c002ab42a75cdabd182cdde72b474f" prot="public" static="no">
        <type>base_type::reference</type>
        <definition>typedef base_type::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1035" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1035" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1a4ac840b4eee6b513081e58a865f59c88" prot="public" static="no">
        <type>base_type::iterator_category</type>
        <definition>typedef base_type::iterator_category iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1035" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1035" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1ac7678145ef96277c34f6516df859937c" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_range_iterator" kindref="compound">RangeIterator</ref></type>
        <definition>typedef RangeIterator self_type</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1036" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1036" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1af94cd6f98815d838c630d458ffbd5d88" prot="public" static="no">
        <type>Matrix&lt; int, N, 1 &gt;</type>
        <definition>typedef Matrix&lt;int, N, 1&gt; coords_type</definition>
        <argsstring></argsstring>
        <name>coords_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1037" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1037" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_1aacf98e49e90f9aeead0ff8885fae3ac7" prot="public" static="no">
        <type>Matrix&lt; int, N, 1 &gt;</type>
        <definition>typedef Matrix&lt;int, N, 1&gt; vector_type</definition>
        <argsstring></argsstring>
        <name>vector_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1037" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1037" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_d_o_1_1_range_iterator_1a4af7b5f5ab4f7272914132ada9beace1" prot="protected" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer first_</definition>
        <argsstring></argsstring>
        <name>first_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1118" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_o_1_1_range_iterator_1ac56be895ad05f501af8808cfa6d9850f" prot="protected" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer last_</definition>
        <argsstring></argsstring>
        <name>last_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1118" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1118" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1aeb132d90693dc65a1092d0afcaea9072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RangeIterator</definition>
        <argsstring>(pointer pos, const coords_type &amp;coords, pointer first, pointer last, const vector_type &amp;sizes, const vector_type &amp;strides, bool stop=false)</argsstring>
        <name>RangeIterator</name>
        <param>
          <type>pointer</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const coords_type &amp;</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>pointer</type>
          <declname>first</declname>
        </param>
        <param>
          <type>pointer</type>
          <declname>last</declname>
        </param>
        <param>
          <type>const vector_type &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const vector_type &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stop</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1048" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1041" bodyend="1048"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1a0b4e860c0d327d9044416df1c73709ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RangeIterator</definition>
        <argsstring>(const self_type &amp;l)</argsstring>
        <name>RangeIterator</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1053" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1050" bodyend="1053"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1a68c6d6abdde9fef27d6a4f2904212559" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
        <definition>self_type&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
<para>Prefix increment operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1058" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1057" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
        <definition>self_type&amp; operator--</definition>
        <argsstring>()</argsstring>
        <name>operator--</name>
        <briefdescription>
<para>Prefix decrement operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1065" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1064" bodyend="1069"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1a39f7c37604fd9845ff487b36b6f88602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref></type>
        <definition>self_type operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Postfix increment operator (slow: avoid using it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1072" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1071" bodyend="1072"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1ac8142815f977b8411faf27f7b8d804b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref></type>
        <definition>self_type operator--</definition>
        <argsstring>(int)</argsstring>
        <name>operator--</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
<para>Postfix decrement operator (slow: avoid using it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1075" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1074" bodyend="1075"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1a6c0808c388428f119495e5ba1d9fbbed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
        <definition>self_type&amp; operator+=</definition>
        <argsstring>(const vector_type &amp;t)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const vector_type &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Arithmetic operator (slow: avoid using it). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1078" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1077" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1afced994f988f5373b78393cab267065a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
        <definition>self_type&amp; operator-=</definition>
        <argsstring>(const vector_type &amp;t)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const vector_type &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Arithmetic operator (slow: avoid using it) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1090" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1089" bodyend="1099"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1ae196a47a56693228dffc1830cebac9ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reset_anchor</definition>
        <argsstring>(const coords_type &amp;c=coords_type::Zero())</argsstring>
        <name>reset_anchor</name>
        <param>
          <type>const coords_type &amp;</type>
          <declname>c</declname>
          <defval>coords_type::Zero()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1103" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1102" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1a3fefb700e6efe9c377efc0490e55bdd9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reset_anchor</definition>
        <argsstring>(int x, int y)</argsstring>
        <name>reset_anchor</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1113" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1112" bodyend="1113"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_1a4fe2e7200a747dcfed93cb504b227f9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void reset_anchor</definition>
        <argsstring>(int x, int y, int z)</argsstring>
        <name>reset_anchor</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1115" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1114" bodyend="1115"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>N-dimensional iterator class. In any case the &apos;<ref refid="class_d_o_1_1_range_iterator" kindref="compound">RangeIterator</ref>&apos; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="493">
        <label>RangeIteratorBase&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_range_iterator_base"/>
        <childnode refid="494" relation="public-inheritance">
        </childnode>
      </node>
      <node id="492">
        <label>RangeIterator&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_range_iterator"/>
        <childnode refid="493" relation="public-inheritance">
        </childnode>
      </node>
      <node id="494">
        <label>iterator&lt;std::random_access_iterator_tag, T, std::ptrdiff_t, Meta::Choose&lt; IsConst , const T *, T *&gt;::Type, Meta::Choose&lt; IsConst , const T&amp;, T&amp;&gt;::Type&gt;</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="496">
        <label>RangeIteratorBase&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_range_iterator_base"/>
        <childnode refid="497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="495">
        <label>RangeIterator&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_range_iterator"/>
        <childnode refid="496" relation="public-inheritance">
        </childnode>
      </node>
      <node id="497">
        <label>iterator&lt;std::random_access_iterator_tag, T, std::ptrdiff_t, Meta::Choose&lt; IsConst , const T *, T *&gt;::Type, Meta::Choose&lt; IsConst , const T&amp;, T&amp;&gt;::Type&gt;</label>
      </node>
    </collaborationgraph>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1025" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1024" bodyend="1119"/>
    <listofallmembers>
      <member refid="class_d_o_1_1_range_iterator_base_1a9c808e11699e1a2d9f806f3bdd829ae7" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>axis</name></member>
      <member refid="class_d_o_1_1_range_iterator_1ab82e2eaecc5d35ce614e17953cd9b211" prot="private" virt="non-virtual"><scope>DO::RangeIterator</scope><name>base_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a4f69d9df692bff019419ca9b3b656c7f" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>check</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aad7f0d952b12caba65ea4fa3043d2411" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>check_strides</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>coords</name></member>
      <member refid="class_d_o_1_1_range_iterator_1af94cd6f98815d838c630d458ffbd5d88" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>coords_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" prot="protected" virt="non-virtual"><scope>DO::RangeIterator</scope><name>cur_coords_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" prot="protected" virt="non-virtual"><scope>DO::RangeIterator</scope><name>cur_pos_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a4fba766bcdf579e201e6ccc83e64f790" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>delta</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1adbb11983bbd38288c38b34f3ba66ed5a" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>delta</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a7f1b8fde63313dfc323ad4f7cb81b188" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>difference_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a4af7b5f5ab4f7272914132ada9beace1" prot="protected" virt="non-virtual"><scope>DO::RangeIterator</scope><name>first_</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a4ac840b4eee6b513081e58a865f59c88" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>iterator_category</name></member>
      <member refid="class_d_o_1_1_range_iterator_1ac56be895ad05f501af8808cfa6d9850f" prot="protected" virt="non-virtual"><scope>DO::RangeIterator</scope><name>last_</name></member>
      <member refid="class_d_o_1_1_range_iterator_1ae0fad1d0505b8ef2c9c121853fe62d76" prot="private" virt="non-virtual"><scope>DO::RangeIterator</scope><name>offset</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1afc84f4470aad70894501ebf4900b374f" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1ac966afbaec9c16d1cc1bb6819810ab10" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a6b17c884f5a18c847944e567d71ad97e" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a5755d4768b1c9721e052999ee4f7aa11" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1afa077c4f1e1d6c36024842404b8574bd" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aa149c2249879e7727f33688b76bf2c99" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator*</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a68c6d6abdde9fef27d6a4f2904212559" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator++</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a39f7c37604fd9845ff487b36b6f88602" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator++</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a6c0808c388428f119495e5ba1d9fbbed" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator+=</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator--</name></member>
      <member refid="class_d_o_1_1_range_iterator_1ac8142815f977b8411faf27f7b8d804b3" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator--</name></member>
      <member refid="class_d_o_1_1_range_iterator_1afced994f988f5373b78393cab267065a" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator-=</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator-&gt;</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1ad3e7caef9082dd2b3f65ea3867336476" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a68ecfc7edab9c677fab5affc459305f2" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>pointer</name></member>
      <member refid="class_d_o_1_1_range_iterator_1aeb132d90693dc65a1092d0afcaea9072" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>RangeIterator</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a0b4e860c0d327d9044416df1c73709ef" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>RangeIterator</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aceb239ee1378f3ce3f078ecfb07d0989" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>RangeIteratorBase</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a8e4ae9a334bff2158857557c1d26b390" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>RangeIteratorBase</name></member>
      <member refid="class_d_o_1_1_range_iterator_1aa5c002ab42a75cdabd182cdde72b474f" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>reference</name></member>
      <member refid="class_d_o_1_1_range_iterator_1ae196a47a56693228dffc1830cebac9ee" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>reset_anchor</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a3fefb700e6efe9c377efc0490e55bdd9" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>reset_anchor</name></member>
      <member refid="class_d_o_1_1_range_iterator_1a4fe2e7200a747dcfed93cb504b227f9c" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>reset_anchor</name></member>
      <member refid="class_d_o_1_1_range_iterator_1ac7678145ef96277c34f6516df859937c" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>self_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1ab243ad95876992f71bfc9043b9a713bd" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>size</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>sizes</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" prot="protected" virt="non-virtual"><scope>DO::RangeIterator</scope><name>sizes_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1adc52b9a89f713950bde219e658905261" prot="protected" virt="non-virtual"><scope>DO::RangeIterator</scope><name>stop_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" prot="protected" virt="non-virtual"><scope>DO::RangeIterator</scope><name>strides_</name></member>
      <member refid="class_d_o_1_1_range_iterator_1afabdc9b5f48b286e2d7676557d2b66ed" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>value_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_1aacf98e49e90f9aeead0ff8885fae3ac7" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>vector_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a73957d210565fc1dcf018c748cc7942c" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>x</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a111124f64347b08446fa9e42742afab7" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>x_iterator</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1af33cd0d6e05af68f0f5d58c905493f7c" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>y</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a36a0bd2bff9cd50874741e23b1d1003f" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>y_iterator</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a67d32d4fcfd807176852b6dfbaa11f74" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>z</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a194e30682c3df76f852e97b4096f6dc6" prot="public" virt="non-virtual"><scope>DO::RangeIterator</scope><name>z_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
