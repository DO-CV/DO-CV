<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_image_processing_2_orientation_8hpp" kind="file">
    <compoundname>Orientation.hpp</compoundname>
    <includedby refid="_image_processing_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing.hpp</includedby>
    <invincdepgraph>
      <node id="466">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Orientation.hpp</label>
        <link refid="ImageProcessing/Orientation.hpp"/>
        <childnode refid="467" relation="include">
        </childnode>
      </node>
      <node id="468">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors.hpp</label>
        <link refid="_feature_descriptors_8hpp"/>
      </node>
      <node id="469">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors.hpp</label>
        <link refid="_feature_detectors_8hpp"/>
      </node>
      <node id="467">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing.hpp</label>
        <link refid="_image_processing_8hpp"/>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_o_1_1_orientation" prot="public">DO::Orientation</innerclass>
    <innerclass refid="struct_d_o_1_1_orientation_3_01_t_00_012_01_4" prot="public">DO::Orientation&lt; T, 2 &gt;</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_IMAGEPROCESSING_ORIENTATION_HPP</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_IMAGEPROCESSING_ORIENTATION_HPP</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="36" refid="group___differential_1ga1e0840d5585c59e1b1b86175686780c2" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___differential_1ga1e0840d5585c59e1b1b86175686780c2" kindref="member" tooltip="Computes an orientation field from a 2D vector field.">orientation</ref>(<ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T&gt;</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref>&lt;Matrix&lt;T,2,1&gt;<sp/>&gt;&amp;<sp/>src)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>()<sp/>!=<sp/>src.sizes())</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="class_d_o_1_1_multi_array_1a3f049389446e1c60e25f09be5b64f192" kindref="member" tooltip="Resizing method.">resize</ref>(src.sizes());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;Matrix&lt;T,2,1&gt;</ref><sp/>&gt;::const_iterator<sp/>InputIterator;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;T&gt;::iterator</ref><sp/>OutputIterator;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>InputIterator<sp/>src_it(src.begin());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>InputIterator<sp/>src_it_end(src.end());</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputIterator<sp/>dst_it(dst.<ref refid="class_d_o_1_1_multi_array_1ad69bd11391be1a1dba5c8202259664f8" kindref="member" tooltip="Mutable beginning iterator.">begin</ref>());</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>src_it<sp/>!=<sp/>src_it_end;<sp/>++src_it,<sp/>++dst_it)</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dst_it<sp/>=<sp/>std::atan2(src_it-&gt;y(),<sp/>src_it-&gt;x());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="62" refid="group___differential_1ga1726772490c0aaf8cbf03007b413fc25" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T&gt;</ref><sp/><ref refid="group___differential_1ga1e0840d5585c59e1b1b86175686780c2" kindref="member" tooltip="Computes an orientation field from a 2D vector field.">orientation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref>&lt;Matrix&lt;T,2,1&gt;<sp/>&gt;&amp;<sp/>src)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T&gt;</ref><sp/>ori;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___differential_1ga1e0840d5585c59e1b1b86175686780c2" kindref="member" tooltip="Computes an orientation field from a 2D vector field.">orientation</ref>(ori,<sp/>src);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ori;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="struct_d_o_1_1_orientation" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_orientation" kindref="compound" tooltip="Helper class to use Image&amp;lt;T,N&amp;gt;::compute&amp;lt;Orientation&amp;gt;()">Orientation</ref>;</highlight></codeline>
<codeline lineno="72" refid="struct_d_o_1_1_orientation_3_01_t_00_012_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_orientation" kindref="compound" tooltip="Helper class to use Image&amp;lt;T,N&amp;gt;::compute&amp;lt;Orientation&amp;gt;()">Orientation</ref>&lt;T,2&gt;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::Scalar<sp/>Scalar;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;Scalar&gt;</ref><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">ReturnType</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_orientation" kindref="compound" tooltip="Helper class to use Image&amp;lt;T,N&amp;gt;::compute&amp;lt;Orientation&amp;gt;()">Orientation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T&gt;</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>src_(src)<sp/>{}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;Scalar&gt;</ref><sp/>operator()()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="79"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___differential_1ga1e0840d5585c59e1b1b86175686780c2" kindref="member" tooltip="Computes an orientation field from a 2D vector field.">orientation</ref>(src_);<sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T&gt;</ref>&amp;<sp/>src_;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>DO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_IMAGEPROCESSING_ORIENTATION_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Orientation.hpp"/>
  </compounddef>
</doxygen>
