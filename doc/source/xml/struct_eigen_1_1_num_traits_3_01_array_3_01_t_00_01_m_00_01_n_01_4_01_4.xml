<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4" kind="struct" prot="public">
    <compoundname>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</compoundname>
    <includes refid="_eigen_extension_8hpp" local="no">EigenExtension.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>int</type>
        <declname>M</declname>
        <defname>M</defname>
      </param>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="enum" id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388" prot="public" static="no">
        <name>@10</name>
        <enumvalue id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a66d6dc5b929fc072f7dce7fdab0ee378" prot="public">
          <name>IsComplex</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a487b1b7ce5ea1cb7f99635a826256596" prot="public">
          <name>IsInteger</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a1088f425e8c7750fd4fbcd843ef0d497" prot="public">
          <name>IsSigned</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a076ee79941a434ab0e56732208246979" prot="public">
          <name>RequireInitialization</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a5a1fb41592894b713f370e40e4967339" prot="public">
          <name>ReadCost</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a879f6b9e117daf216dce0c0fb6f377c8" prot="public">
          <name>AddCost</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a93abfd40f941a64a071fdff2a4c32a28" prot="public">
          <name>MulCost</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="60" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ac8c09a8007131b0360928599f9060e9e" prot="public" static="no">
        <type>Array&lt; T, M, N &gt;</type>
        <definition>typedef Array&lt;T, M, N&gt; Real</definition>
        <argsstring></argsstring>
        <name>Real</name>
        <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="56" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ab801e8b840f4a4024d7b96d506993ac2" prot="public" static="no">
        <type>Array&lt; T, M, N &gt;</type>
        <definition>typedef Array&lt;T, M, N&gt; NonInteger</definition>
        <argsstring></argsstring>
        <name>NonInteger</name>
        <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="57" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ae5988a13ff54e94be1f4c785b30ed82b" prot="public" static="no">
        <type>Array&lt; T, M, N &gt;</type>
        <definition>typedef Array&lt;T, M, N&gt; Nested</definition>
        <argsstring></argsstring>
        <name>Nested</name>
        <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="58" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a34a0f20cd593faa04bf2c821272ab5c1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ac8c09a8007131b0360928599f9060e9e" kindref="member">Real</ref></type>
        <definition>static Real epsilon</definition>
        <argsstring>()</argsstring>
        <name>epsilon</name>
        <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="72" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="71" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a60607af8d805c2d0c7963e89128070fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ac8c09a8007131b0360928599f9060e9e" kindref="member">Real</ref></type>
        <definition>static Real dummy_precision</definition>
        <argsstring>()</argsstring>
        <name>dummy_precision</name>
        <briefdescription>
<para><ref refid="namespace_eigen" kindref="compound">Eigen</ref> internals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="76" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="75" bodyend="76"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>NumTraits template class specialization in case the scalar type is actually an array. For example, when an Array&lt;Matrix2d, 2, 2&gt; type is instantiated, multiplication and addition operations are properly defined. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="55" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="54" bodyend="77"/>
    <listofallmembers>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a879f6b9e117daf216dce0c0fb6f377c8" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>AddCost</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a60607af8d805c2d0c7963e89128070fc" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>dummy_precision</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a34a0f20cd593faa04bf2c821272ab5c1" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>epsilon</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a66d6dc5b929fc072f7dce7fdab0ee378" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>IsComplex</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a487b1b7ce5ea1cb7f99635a826256596" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>IsInteger</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a1088f425e8c7750fd4fbcd843ef0d497" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>IsSigned</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a93abfd40f941a64a071fdff2a4c32a28" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>MulCost</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ae5988a13ff54e94be1f4c785b30ed82b" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>Nested</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ab801e8b840f4a4024d7b96d506993ac2" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>NonInteger</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a5a1fb41592894b713f370e40e4967339" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>ReadCost</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1ac8c09a8007131b0360928599f9060e9e" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>Real</name></member>
      <member refid="struct_eigen_1_1_num_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4_1a385c44f6fb256e5716a2302a5b940388a076ee79941a434ab0e56732208246979" prot="public" virt="non-virtual"><scope>Eigen::NumTraits&lt; Array&lt; T, M, N &gt; &gt;</scope><name>RequireInitialization</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
