<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_static_assert_8hpp" kind="file">
    <compoundname>StaticAssert.hpp</compoundname>
    <includedby refid="_color_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp</includedby>
    <includedby refid="_locator_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp</includedby>
    <includedby refid="_core_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</includedby>
    <includedby refid="_geometry_2_tools_2_utilities_8hpp" local="no">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp</includedby>
    <invincdepgraph>
      <node id="286">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp</label>
        <link refid="_graphics_utilities_8hpp"/>
      </node>
      <node id="280">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree.hpp</label>
        <link refid="_k_d_tree_8hpp_source"/>
      </node>
      <node id="282">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp</label>
        <link refid="_draw_polygon_8hpp_source"/>
        <childnode refid="283" relation="include">
        </childnode>
      </node>
      <node id="284">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry.hpp</label>
        <link refid="_geometry_8hpp_source"/>
      </node>
      <node id="296">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools.hpp</label>
        <link refid="_tools_8hpp_source"/>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="285">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/DerivedQObjects/GraphicsApplicationImpl.hpp</label>
        <link refid="_graphics_application_impl_8hpp"/>
        <childnode refid="286" relation="include">
        </childnode>
      </node>
      <node id="290">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp</label>
        <link refid="_multi_array_8hpp"/>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
      </node>
      <node id="275">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features.hpp</label>
        <link refid="_features_8hpp"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="294">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Polynomial.hpp</label>
        <link refid="_polynomial_8hpp_source"/>
        <childnode refid="295" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
      </node>
      <node id="270">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="271" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="281" relation="include">
        </childnode>
        <childnode refid="287" relation="include">
        </childnode>
      </node>
      <node id="288">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing.hpp</label>
        <link refid="_image_drawing_8hpp_source"/>
      </node>
      <node id="289">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp</label>
        <link refid="_locator_8hpp"/>
        <childnode refid="290" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
      </node>
      <node id="276">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors.hpp</label>
        <link refid="_feature_descriptors_8hpp"/>
      </node>
      <node id="277">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors.hpp</label>
        <link refid="_feature_detectors_8hpp"/>
      </node>
      <node id="271">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp</label>
        <link refid="_subimage_8hpp"/>
        <childnode refid="272" relation="include">
        </childnode>
      </node>
      <node id="274">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp</label>
        <link refid="_view_8hpp"/>
      </node>
      <node id="268">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/StaticAssert.hpp</label>
        <link refid="StaticAssert.hpp"/>
        <childnode refid="269" relation="include">
        </childnode>
        <childnode refid="289" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
        <childnode refid="291" relation="include">
        </childnode>
      </node>
      <node id="292">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/SutherlandHodgman.hpp</label>
        <link refid="_sutherland_hodgman_8hpp_source"/>
        <childnode refid="293" relation="include">
        </childnode>
      </node>
      <node id="278">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing.hpp</label>
        <link refid="_image_processing_8hpp"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
      </node>
      <node id="272">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="273" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="275" relation="include">
        </childnode>
        <childnode refid="278" relation="include">
        </childnode>
        <childnode refid="279" relation="include">
        </childnode>
      </node>
      <node id="295">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/PolynomialRoots.hpp</label>
        <link refid="_polynomial_roots_8hpp_source"/>
        <childnode refid="296" relation="include">
        </childnode>
      </node>
      <node id="293">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms.hpp</label>
        <link refid="_algorithms_8hpp_source"/>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="269">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp</label>
        <link refid="_color_8hpp"/>
        <childnode refid="270" relation="include">
        </childnode>
        <childnode refid="272" relation="include">
        </childnode>
      </node>
      <node id="291">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp</label>
        <link refid="_geometry_2_tools_2_utilities_8hpp_source"/>
        <childnode refid="292" relation="include">
        </childnode>
        <childnode refid="294" relation="include">
        </childnode>
        <childnode refid="296" relation="include">
        </childnode>
      </node>
      <node id="283">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics.hpp</label>
        <link refid="_geometry_2_graphics_8hpp_source"/>
        <childnode refid="284" relation="include">
        </childnode>
      </node>
      <node id="273">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/FeatureItem.hpp</label>
        <link refid="_feature_item_8hpp_source"/>
      </node>
      <node id="287">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp</label>
        <link refid="_image_drawing_2_image_i_o_8hpp_source"/>
        <childnode refid="288" relation="include">
        </childnode>
      </node>
      <node id="281">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics.hpp</label>
        <link refid="_graphics_8hpp"/>
        <childnode refid="276" relation="include">
        </childnode>
        <childnode refid="277" relation="include">
        </childnode>
        <childnode refid="274" relation="include">
        </childnode>
        <childnode refid="282" relation="include">
        </childnode>
        <childnode refid="285" relation="include">
        </childnode>
      </node>
      <node id="279">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree/KDTree.hpp</label>
        <link refid="_k_d_tree_2_k_d_tree_8hpp_source"/>
        <childnode refid="280" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_o_1_1_meta_1_1_static_assertion" prot="public">DO::Meta::StaticAssertion</innerclass>
    <innerclass refid="struct_d_o_1_1_meta_1_1_static_assertion_3_01true_01_4" prot="public">DO::Meta::StaticAssertion&lt; true &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_meta_1_1_static_assertion_test" prot="public">DO::Meta::StaticAssertionTest</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
    <innernamespace refid="namespace_d_o_1_1_meta">DO::Meta</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" prot="public" static="no">
        <name>CAT</name>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>CAT1(arg1, arg2)</initializer>
        <briefdescription>
<para>Concatenation macro used for the implementation of DO_STATIC_ASSERT. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/StaticAssert.hpp" line="20" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/StaticAssert.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" prot="public" static="no">
        <name>DO_STATIC_ASSERT</name>
        <param><defname>expression</defname></param>
        <param><defname>message</defname></param>
        <initializer>struct <ref refid="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" kindref="member">CAT</ref>(__static_assertion_at_line_, __LINE__)                           \
{                                                                           \
  <ref refid="struct_d_o_1_1_meta_1_1_static_assertion" kindref="compound">DO::Meta::StaticAssertion</ref>&lt;static_cast&lt;bool&gt;((expression))&gt;                \
    <ref refid="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" kindref="member">CAT</ref>(<ref refid="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" kindref="member">CAT</ref>(<ref refid="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" kindref="member">CAT</ref>(STATIC_ASSERTION_FAILED_AT_LINE_, __LINE__), _), message);  \
};                                                                          \
typedef <ref refid="struct_d_o_1_1_meta_1_1_static_assertion_test" kindref="compound">DO::Meta::StaticAssertionTest</ref>&lt;                                      \
  sizeof(<ref refid="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" kindref="member">CAT</ref>(__static_assertion_at_line_, __LINE__))  &gt;                     \
    <ref refid="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" kindref="member">CAT</ref>(__static_assertion_test_at_line_, __LINE__)</initializer>
        <briefdescription>
<para>Static assertion macro. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>expression</parametername>
</parameternamelist>
<parameterdescription>
<para>a boolean expression </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>some error message</para></parameterdescription>
</parameteritem>
</parameterlist>
Usage:</para><para><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member">DO_STATIC_ASSERT(expression, message)</ref>;</para><para>When the static assertion test fails, a compiler error message that somehow contains the &quot;STATIC_ASSERTION_FAILED_AT_LINE_xxx_message&quot; is generated.</para><para>WARNING: message has to be a valid C++ identifier, that is to say it must not contain space characters, cannot start with a digit, etc.</para><para><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member">DO_STATIC_ASSERT(true, this_message_will_never_be_displayed)</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/StaticAssert.hpp" line="54" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/StaticAssert.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation from: <ulink url="http://stackoverflow.com/questions/1980012/boost-static-assert-without-boost">http://stackoverflow.com/questions/1980012/boost-static-assert-without-boost</ulink>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_CORE_STATICASSERT_HPP</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_CORE_STATICASSERT_HPP</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="18"></codeline>
<codeline lineno="20" refid="_static_assert_8hpp_1a94af0bf1263c669c40b41161203c57fc" refkind="member"><highlight class="preprocessor">#define<sp/>CAT(arg1,<sp/>arg2)<sp/><sp/><sp/>CAT1(arg1,<sp/>arg2)</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifndef<sp/>DOXYGEN_SHOULD_SKIP_THIS</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CAT1(arg1,<sp/>arg2)<sp/><sp/>CAT2(arg1,<sp/>arg2)</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CAT2(arg1,<sp/>arg2)<sp/><sp/>arg1##arg2</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="46" refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" refkind="member"><highlight class="preprocessor">#define<sp/>DO_STATIC_ASSERT(expression,<sp/>message)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="47"><highlight class="preprocessor">struct<sp/>CAT(__static_assertion_at_line_,<sp/>__LINE__)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor">{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor"><sp/><sp/>DO::Meta::StaticAssertion&lt;static_cast&lt;bool&gt;((expression))&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>CAT(CAT(CAT(STATIC_ASSERTION_FAILED_AT_LINE_,<sp/>__LINE__),<sp/>_),<sp/>message);<sp/><sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor">};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor">typedef<sp/>DO::Meta::StaticAssertionTest&lt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/>sizeof(CAT(__static_assertion_at_line_,<sp/>__LINE__))<sp/><sp/>&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>CAT(__static_assertion_test_at_line_,<sp/>__LINE__)</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note<sp/>that<sp/>we<sp/>wrap<sp/>the<sp/>non<sp/>existing<sp/>type<sp/>inside<sp/>a<sp/>struct<sp/>to<sp/>avoid<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//<sp/>messages<sp/>about<sp/>unused<sp/>variables<sp/>when<sp/>static<sp/>assertions<sp/>are<sp/>used<sp/>at<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>scope</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>use<sp/>of<sp/>sizeof<sp/>makes<sp/>sure<sp/>the<sp/>assertion<sp/>error<sp/>is<sp/>not<sp/>ignored<sp/>by<sp/>SFINAE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Meta<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="struct_d_o_1_1_meta_1_1_static_assertion" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_meta_1_1_static_assertion" kindref="compound" tooltip="Used for the implementation of DO_STATIC_ASSERT.">StaticAssertion</ref>;</highlight></codeline>
<codeline lineno="67" refid="struct_d_o_1_1_meta_1_1_static_assertion_3_01true_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_meta_1_1_static_assertion" kindref="compound" tooltip="Used for the implementation of DO_STATIC_ASSERT.">StaticAssertion</ref>&lt;true&gt;<sp/>{};</highlight></codeline>
<codeline lineno="69" refid="struct_d_o_1_1_meta_1_1_static_assertion_test" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_meta_1_1_static_assertion_test" kindref="compound" tooltip="Used for the implementation of DO_STATIC_ASSERT.">StaticAssertionTest</ref><sp/>{};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>Meta<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>DO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_CORE_STATICASSERT_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/StaticAssert.hpp"/>
  </compounddef>
</doxygen>
