<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_matrix_based_object_8hpp" kind="file">
    <compoundname>MatrixBasedObject.hpp</compoundname>
    <includes refid="_eigen_extension_8hpp" local="no">DO/Core/EigenExtension.hpp</includes>
    <includedby refid="_conic_8hpp" local="no">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Conic.hpp</includedby>
    <incdepgraph>
      <node id="1187">
        <label>Eigen/Eigen</label>
      </node>
      <node id="1188">
        <label>sstream</label>
      </node>
      <node id="1186">
        <label>DO/Core/EigenExtension.hpp</label>
        <link refid="_eigen_extension_8hpp"/>
        <childnode refid="1187" relation="include">
        </childnode>
        <childnode refid="1188" relation="include">
        </childnode>
      </node>
      <node id="1185">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/MatrixBasedObject.hpp</label>
        <link refid="MatrixBasedObject.hpp"/>
        <childnode refid="1186" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1192">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry.hpp</label>
        <link refid="_geometry_8hpp_source"/>
      </node>
      <node id="1191">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools.hpp</label>
        <link refid="_tools_8hpp_source"/>
        <childnode refid="1192" relation="include">
        </childnode>
      </node>
      <node id="1190">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Conic.hpp</label>
        <link refid="_conic_8hpp_source"/>
        <childnode refid="1191" relation="include">
        </childnode>
      </node>
      <node id="1189">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/MatrixBasedObject.hpp</label>
        <link refid="MatrixBasedObject.hpp"/>
        <childnode refid="1190" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_d_o_1_1_projective_1_1_matrix_based_object" prot="public">DO::Projective::MatrixBasedObject</innerclass>
    <innerclass refid="class_d_o_1_1_projective_1_1_homography" prot="public">DO::Projective::Homography</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
    <innernamespace refid="namespace_d_o_1_1_projective">DO::Projective</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2014<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_eigen_extension_8hpp" kindref="compound" tooltip="Eigen matrices and vector typedefs.">DO/Core/EigenExtension.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Projective<sp/>{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="20" refid="class_d_o_1_1_projective_1_1_matrix_based_object" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{<sp/>Dimension<sp/>=<sp/>N<sp/>};</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;T,<sp/>N+1,<sp/>N+1&gt;<sp/>Mat;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;T,<sp/>N+1,<sp/>1&gt;<sp/>HVec;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>projective<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;T,<sp/>N<sp/><sp/>,<sp/>1&gt;<sp/>Vec;<sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>Euclidean<sp/>space</highlight></codeline>
<codeline lineno="28" refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a4f6656518eb5234e883064b57e9f28b7" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a4f6656518eb5234e883064b57e9f28b7" kindref="member" tooltip="Common constructors.">MatrixBasedObject</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a4f6656518eb5234e883064b57e9f28b7" kindref="member" tooltip="Common constructors.">MatrixBasedObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref>&amp;<sp/>other)<sp/>{<sp/>copy(other);<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a4f6656518eb5234e883064b57e9f28b7" kindref="member" tooltip="Common constructors.">MatrixBasedObject</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>data)<sp/>:<sp/>mat_(data)<sp/>{}</highlight></codeline>
<codeline lineno="32" refid="class_d_o_1_1_projective_1_1_matrix_based_object_1aa24ee40fcefa664912de21bb09a6bd17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref>&amp;<sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1aa24ee40fcefa664912de21bb09a6bd17" kindref="member" tooltip="Assignment operator.">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>copy(other);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="35" refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a3edf7532ac66a15d00405992b51a5843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Mat&amp;<sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a3edf7532ac66a15d00405992b51a5843" kindref="member" tooltip="Matrix accessor.">matrix</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_;<sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a3edf7532ac66a15d00405992b51a5843" kindref="member" tooltip="Matrix accessor.">matrix</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_;<sp/>}</highlight></codeline>
<codeline lineno="38" refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a8c8ceabc696d63c5c1949706e5f949af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T&amp;<sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a8c8ceabc696d63c5c1949706e5f949af" kindref="member" tooltip="Coefficient accessor.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_(i,j);<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a8c8ceabc696d63c5c1949706e5f949af" kindref="member" tooltip="Coefficient accessor.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="41"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_(i,j);<sp/>}</highlight></codeline>
<codeline lineno="43" refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a8b19ca72f93990e6beee12533d6c0c21" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a8b19ca72f93990e6beee12533d6c0c21" kindref="member" tooltip="Comparison operator.">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="44"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mat_<sp/>==<sp/>other.mat_;<sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref>&amp;<sp/>other)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="46"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!<ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1aa24ee40fcefa664912de21bb09a6bd17" kindref="member" tooltip="Assignment operator.">operator=</ref>(other);<sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copy(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object_1a4f6656518eb5234e883064b57e9f28b7" kindref="member" tooltip="Common constructors.">MatrixBasedObject</ref>&amp;<sp/>other)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>mat_<sp/>=<sp/>other.mat_;<sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>Mat<sp/>mat_;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="56" refid="class_d_o_1_1_projective_1_1_homography" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_projective_1_1_homography" kindref="compound">Homography</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref>&lt;T,N&gt;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject&lt;T,N&gt;</ref><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">Base</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Base::mat_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Base::Dimension;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::Mat<sp/><sp/>Mat;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::HVec<sp/>HVec;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::Vec<sp/><sp/>Vec;</highlight></codeline>
<codeline lineno="66" refid="class_d_o_1_1_projective_1_1_homography_1a90c476da9dbafcd99029d456c6e2a986" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_homography_1a90c476da9dbafcd99029d456c6e2a986" kindref="member" tooltip="Common constructors.">Homography</ref>()<sp/>:<sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">Base</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_homography_1a90c476da9dbafcd99029d456c6e2a986" kindref="member" tooltip="Common constructors.">Homography</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Base&amp;<sp/>other)<sp/>:<sp/>Base(other)<sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_homography_1a90c476da9dbafcd99029d456c6e2a986" kindref="member" tooltip="Common constructors.">Homography</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>data)<sp/>:<sp/>Base(data)<sp/>{}</highlight></codeline>
<codeline lineno="70" refid="class_d_o_1_1_projective_1_1_homography_1ac246b2b30ffc1c4051a06f11c44f61dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_d_o_1_1_projective_1_1_homography_1ac246b2b30ffc1c4051a06f11c44f61dc" kindref="member" tooltip="Evaluation at point &amp;#39;x&amp;#39;.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HVec&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="71"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.transpose()*mat_*x;<sp/>}</highlight></codeline>
<codeline lineno="73" refid="class_d_o_1_1_projective_1_1_homography_1a9ee277790cf90d5be80d3db3e042e770" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_d_o_1_1_projective_1_1_homography_1ac246b2b30ffc1c4051a06f11c44f61dc" kindref="member" tooltip="Evaluation at point &amp;#39;x&amp;#39;.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vec&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="74"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)((HVec()<sp/>&lt;&lt;<sp/>x,<sp/>1).finished());<sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>Projective<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>DO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/MatrixBasedObject.hpp"/>
  </compounddef>
</doxygen>
