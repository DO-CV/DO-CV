<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_k_d_tree_2_k_d_tree_8hpp" kind="file">
    <compoundname>KDTree.hpp</compoundname>
    <includes refid="_core_8hpp" local="no">DO/Core.hpp</includes>
    <includes local="no">flann/flann.hpp</includes>
    <includedby refid="_k_d_tree_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree.hpp</includedby>
    <incdepgraph>
      <node id="1699">
        <label>Defines.hpp</label>
        <link refid="_defines_8hpp_source"/>
      </node>
      <node id="1716">
        <label>queue</label>
      </node>
      <node id="1706">
        <label>iterator</label>
      </node>
      <node id="1725">
        <label>flann/flann.hpp</label>
      </node>
      <node id="1708">
        <label>Core/MultiArray.hpp</label>
        <link refid="_multi_array_8hpp"/>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1707" relation="include">
        </childnode>
        <childnode refid="1709" relation="include">
        </childnode>
      </node>
      <node id="1722">
        <label>Core/StdVectorHelpers.hpp</label>
        <link refid="_std_vector_helpers_8hpp"/>
        <childnode refid="1723" relation="include">
        </childnode>
      </node>
      <node id="1709">
        <label>numeric</label>
      </node>
      <node id="1703">
        <label>Eigen/Eigen</label>
      </node>
      <node id="1721">
        <label>string</label>
      </node>
      <node id="1711">
        <label>map</label>
      </node>
      <node id="1713">
        <label>Core/Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
      </node>
      <node id="1715">
        <label>Core/Tree.hpp</label>
        <link refid="_tree_8hpp"/>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1716" relation="include">
        </childnode>
        <childnode refid="1717" relation="include">
        </childnode>
        <childnode refid="1718" relation="include">
        </childnode>
      </node>
      <node id="1720">
        <label>Core/Stringify.hpp</label>
        <link refid="_stringify_8hpp"/>
        <childnode refid="1704" relation="include">
        </childnode>
        <childnode refid="1721" relation="include">
        </childnode>
      </node>
      <node id="1718">
        <label>fstream</label>
      </node>
      <node id="1705">
        <label>Core/Locator.hpp</label>
        <link refid="_locator_8hpp"/>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
        <childnode refid="1706" relation="include">
        </childnode>
        <childnode refid="1707" relation="include">
        </childnode>
      </node>
      <node id="1719">
        <label>Core/Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1707" relation="include">
        </childnode>
      </node>
      <node id="1724">
        <label>Core/DebugUtilities.hpp</label>
        <link refid="_debug_utilities_8hpp"/>
        <childnode refid="1707" relation="include">
        </childnode>
      </node>
      <node id="1714">
        <label>Core/Subimage.hpp</label>
        <link refid="_subimage_8hpp"/>
        <childnode refid="1713" relation="include">
        </childnode>
      </node>
      <node id="1700">
        <label>Core/Meta.hpp</label>
        <link refid="_meta_8hpp"/>
      </node>
      <node id="1723">
        <label>vector</label>
      </node>
      <node id="1717">
        <label>stack</label>
      </node>
      <node id="1701">
        <label>Core/StaticAssert.hpp</label>
        <link refid="_static_assert_8hpp"/>
      </node>
      <node id="1704">
        <label>sstream</label>
      </node>
      <node id="1702">
        <label>Core/EigenExtension.hpp</label>
        <link refid="_eigen_extension_8hpp"/>
        <childnode refid="1703" relation="include">
        </childnode>
        <childnode refid="1704" relation="include">
        </childnode>
      </node>
      <node id="1698">
        <label>DO/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="1699" relation="include">
        </childnode>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
        <childnode refid="1705" relation="include">
        </childnode>
        <childnode refid="1708" relation="include">
        </childnode>
        <childnode refid="1710" relation="include">
        </childnode>
        <childnode refid="1712" relation="include">
        </childnode>
        <childnode refid="1713" relation="include">
        </childnode>
        <childnode refid="1714" relation="include">
        </childnode>
        <childnode refid="1715" relation="include">
        </childnode>
        <childnode refid="1719" relation="include">
        </childnode>
        <childnode refid="1720" relation="include">
        </childnode>
        <childnode refid="1722" relation="include">
        </childnode>
        <childnode refid="1724" relation="include">
        </childnode>
      </node>
      <node id="1707">
        <label>iostream</label>
      </node>
      <node id="1710">
        <label>Core/SparseMultiArray.hpp</label>
        <link refid="_sparse_multi_array_8hpp"/>
        <childnode refid="1702" relation="include">
        </childnode>
        <childnode refid="1711" relation="include">
        </childnode>
      </node>
      <node id="1712">
        <label>Core/Color.hpp</label>
        <link refid="_color_8hpp"/>
        <childnode refid="1700" relation="include">
        </childnode>
        <childnode refid="1701" relation="include">
        </childnode>
        <childnode refid="1702" relation="include">
        </childnode>
      </node>
      <node id="1697">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree/KDTree.hpp</label>
        <link refid="KDTree/KDTree.hpp"/>
        <childnode refid="1698" relation="include">
        </childnode>
        <childnode refid="1725" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1727">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree.hpp</label>
        <link refid="_k_d_tree_8hpp_source"/>
      </node>
      <node id="1726">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree/KDTree.hpp</label>
        <link refid="KDTree/KDTree.hpp"/>
        <childnode refid="1727" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_d_o_1_1_k_d_tree" prot="public">DO::KDTree</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_KDTREE_KDTREE_HPP</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_KDTREE_KDTREE_HPP</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>DISCLAIMER<sp/>REGARDING<sp/>FLANN<sp/>1.8.4:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I<sp/>have<sp/>disabled<sp/>compiler<sp/>warnings<sp/>for<sp/>MSVC<sp/>in<sp/>the<sp/>CMakeLists.txt<sp/>of<sp/>FLANN.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>still<sp/>a<sp/>disturbing<sp/>compiler<sp/>warning<sp/>with<sp/>MSVC:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>FLANN<sp/>1.8.4<sp/>will<sp/>issue<sp/>compiler<sp/>warning<sp/>because<sp/>of<sp/>a<sp/>reimplemented</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>new*(...)<sp/>and<sp/>the<sp/>corresponding<sp/>operator<sp/>delete<sp/>[]<sp/>is<sp/>not<sp/>implemented.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>I<sp/>seriously<sp/>hope<sp/>there<sp/>won&apos;t<sp/>be<sp/>memory-leak<sp/>as<sp/>argued<sp/>in<sp/>the<sp/>changelog...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>serialization<sp/>functions<sp/>in<sp/>FLANN<sp/>1.8.4<sp/>do<sp/>not<sp/>compile<sp/>as<sp/>well...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_core_8hpp" kindref="compound" tooltip="Master header file of the Core module.">DO/Core.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;flann/flann.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>data<sp/>structure<sp/>will<sp/>likely<sp/>evolve<sp/>again<sp/>in<sp/>order<sp/>to<sp/>be<sp/>fully<sp/>&quot;templated&quot;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Still,<sp/>it<sp/>is<sp/>enough<sp/>as<sp/>it<sp/>does<sp/>what<sp/>I<sp/>need<sp/>to<sp/>do.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See<sp/>if<sp/>the<sp/>compile<sp/>time<sp/>of<sp/>template<sp/>instantiation<sp/>is<sp/>not<sp/>a<sp/>burden<sp/>for<sp/>a<sp/>quick</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>prototyping<sp/>in<sp/>practice.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="class_d_o_1_1_k_d_tree" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_k_d_tree" kindref="compound">KDTree</ref></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_k_d_tree" kindref="compound">KDTree</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXd&amp;<sp/>colMajorColStackedDataMatrix,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flann::KDTreeIndexParams&amp;<sp/>indexParams<sp/>=<sp/>flann::KDTreeIndexParams(1),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>flann::SearchParams&amp;<sp/>searchParams<sp/>=<sp/>flann::SearchParams(-1));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="class_d_o_1_1_k_d_tree" kindref="compound">KDTree</ref>();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxCols&gt;</highlight></codeline>
<codeline lineno="56" refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix&lt;double,<sp/>N,<sp/>1,<sp/>Options,<sp/>MaxRows,<sp/>MaxCols&gt;&amp;<sp/>query,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>indices,<sp/>std::vector&lt;double&gt;&amp;<sp/>sqDists,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.cols<sp/>!=<sp/>query.size())</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Dimension<sp/>of<sp/>query<sp/>vector<sp/>do<sp/>not<sp/>match<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension<sp/>of<sp/>input<sp/>feature<sp/>space!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove1NN)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(query.data(),<sp/>k+1,<sp/>indices,<sp/>sqDists);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.erase(indices.begin());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqDists.erase(sqDists.begin());</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(query.data(),<sp/>k,<sp/>indices,<sp/>sqDists);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxCols&gt;</highlight></codeline>
<codeline lineno="75" refid="class_d_o_1_1_k_d_tree_1a11d7bdc9d8b1b123937f94a3ddef756b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix&lt;double,<sp/>N,<sp/>1,<sp/>Options,<sp/>MaxRows,<sp/>MaxCols&gt;&amp;<sp/>query,</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,<sp/>std::vector&lt;int&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.cols<sp/>!=<sp/>query.size())</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Dimension<sp/>of<sp/>query<sp/>vector<sp/>do<sp/>not<sp/>match<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension<sp/>of<sp/>input<sp/>feature<sp/>space!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>sqDists;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove1NN)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(query.data(),<sp/>k+1,<sp/>indices,<sp/>sqDists);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.erase(indices.begin());</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqDists.erase(sqDists.begin());</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(query.data(),<sp/>k,<sp/>indices,<sp/>sqDists);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXd&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;&amp;<sp/>sqDists,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXd&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>indices,<sp/>std::vector&lt;double&gt;&amp;<sp/>sqDists);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,<sp/>std::vector&lt;int&gt;&amp;<sp/>indices);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;&amp;<sp/>sqDists);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxCols&gt;</highlight></codeline>
<codeline lineno="116" refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix&lt;double,<sp/>N,<sp/>1,<sp/>Options,<sp/>MaxRows,<sp/>MaxCols&gt;&amp;<sp/>query,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>indices,<sp/>std::vector&lt;double&gt;&amp;<sp/>sqDists,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.cols<sp/>!=<sp/>query.size())</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Dimension<sp/>of<sp/>query<sp/>vector<sp/>do<sp/>not<sp/>match<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension<sp/>of<sp/>input<sp/>feature<sp/>space!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(query.data(),<sp/>sqSearchRadius,<sp/>indices,<sp/>sqDists);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove1NN)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.erase(indices.begin());</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqDists.erase(sqDists.begin());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices.size();<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Options,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxRows,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>MaxCols&gt;</highlight></codeline>
<codeline lineno="134" refid="class_d_o_1_1_k_d_tree_1a6e2663447313ea234eaceae90af3d452" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Matrix&lt;double,<sp/>N,<sp/>1,<sp/>Options,<sp/>MaxRows,<sp/>MaxCols&gt;&amp;<sp/>query,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,<sp/>std::vector&lt;int&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(data_.cols<sp/>!=<sp/>query.size())</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(</highlight><highlight class="stringliteral">&quot;Dimension<sp/>of<sp/>query<sp/>vector<sp/>do<sp/>not<sp/>match<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dimension<sp/>of<sp/>input<sp/>feature<sp/>space!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>sqDists;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(query.data(),<sp/>sqSearchRadius,<sp/>indices,<sp/>sqDists);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(remove1NN)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indices.erase(indices.begin());</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sqDists.erase(sqDists.begin());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>indices.size();</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXd&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;&amp;<sp/>sqDists,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>MatrixXd&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>remove1NN);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>indices,<sp/>std::vector&lt;double&gt;&amp;<sp/>sqDists);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,<sp/>std::vector&lt;int&gt;&amp;<sp/>indices);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;double&gt;<sp/>&gt;&amp;<sp/>sqDists);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;size_t&gt;&amp;<sp/>queries,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;std::vector&lt;int&gt;<sp/>&gt;&amp;<sp/>indices);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1aff5b51190734bbf0ae15f58d370a8d55" kindref="member" tooltip="Basic k-NN search wrapped function.">knnSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*query,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>indices,<sp/>std::vector&lt;double&gt;&amp;<sp/>sqDists);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_k_d_tree_1a4300321abdb8f70c0f6b258cff7b5110" kindref="member" tooltip="Basic radius search wrapped function.">radiusSearch</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*query,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>sqSearchRadius,</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>indices,<sp/>std::vector&lt;double&gt;&amp;<sp/>sqDists);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wrapped_data_;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>flann::Matrix&lt;double&gt;<sp/>data_;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>flann::Index&lt;flann::L2&lt;double&gt;<sp/>&gt;<sp/>index_;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>flann::KDTreeIndexParams<sp/>index_params_;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>flann::SearchParams<sp/>search_params_;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_KDTREE_KDTREE_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree/KDTree.hpp"/>
  </compounddef>
</doxygen>
