<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="group___extremum_refinement" kind="group">
    <compoundname>ExtremumRefinement</compoundname>
    <title>Extremum Localization Refinement</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___extremum_refinement_1gadb49f79daf3b221e16bc44e68377e14b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::onEdge</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, int x, int y, float edgeRatio=10.f)</argsstring>
        <name>onEdge</name>
        <param>
          <type>const Image&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>edgeRatio</declname>
          <defval>10.f</defval>
        </param>
        <briefdescription>
<para>Test based on Harris-Stephens&apos; idea on corner detection. Basically the <ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix <formula id="30">$\mathbf{H}$</formula> is estimated by finite differentiation. </para>        </briefdescription>
        <detaileddescription>
<para><formula id="50">$(x,y)$</formula> is on an edge if the <ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix <formula id="30">$\mathbf{H}$</formula> satisfies the following criterion <formula id="53">$ \frac{\mathrm{det}(\mathbf{H})}{\mathrm{tr}(\mathbf{H})} &gt; \frac{(r+1)^2}{r} $</formula>, where <formula id="32">$r$</formula> is the ratio between the eigenvalues of <formula id="30">$\mathbf{H}$</formula> and corresponds to the variable <bold>edgeRatio</bold>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="39"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1ga2f13bba1b141af45dbf3e71aed91016c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::refineExtremum</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;I, int x, int y, int s, int o, int type, Point3f &amp;pos, float &amp;val, int borderSz=1, int numIter=5)</argsstring>
        <name>refineExtremum</name>
        <param>
          <type>const ImagePyramid&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>Point3f &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>borderSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>numIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Extremum position refinement in scale-space based on Newton&apos;s method. (cf. [Lowe, IJCV 2004] and [Brown and Lowe, BMVC 2002]). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>the input gaussian pyramid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>integral x-coordinate of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>integral y-coordinate of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>scale index of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">o</parametername>
</parameternamelist>
<parameterdescription>
<para>octave index of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">imgPaddingSz</parametername>
</parameternamelist>
<parameterdescription>
<para>This variable indicates the minimum border size of the image. DoG extrema that ends being located the border are not refined anymore. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numIter</parametername>
</parameternamelist>
<parameterdescription>
<para>This variable controls the number of iterations to refine the localization of DoG extrema in scale-space. The refinement process is based on the function <bold><ref refid="group___extremum_refinement_1ga2f13bba1b141af45dbf3e71aed91016c" kindref="member">DO::refineExtremum()</ref></bold>.</para></parameterdescription>
</parameteritem>
</parameterlist>
Let <formula id="54">$D : \mathbf{R}^3 \mapsto \mathbf{R}$</formula> be the difference of gaussian function and <formula id="6">$(x,y,\sigma)$</formula> be the approximate position of a local extremum of <formula id="55">$D$</formula>.</para><para>If <formula id="6">$(x,y,\sigma)$</formula> is the current guess of the local extremum, the refinement procedure seeks to minimize the following objective function iteratively: <formula id="56">\begin{eqnarray*} \mathrm{minimize}_{\mathbf{h}} D(\mathbf{x}) + D&apos;(\mathbf{x})^T \mathbf{h} + 1/2 \mathbf{h}^T D&apos;&apos;(\mathbf{x}) \mathbf{h}^T . \end{eqnarray*}</formula> In practice the gradient vector <formula id="57">$D&apos;(\mathbf{x})$</formula> and hessian matrix <formula id="58">$D&apos;&apos;(\mathbf{x})$</formula> are approximated by finite difference and one must check that the hessian matrix <formula id="58">$D&apos;&apos;(\mathbf{x})$</formula> is indeed <bold>positive-definite</bold>.</para><para>Likewise, if <formula id="59">$\mathbf{x}$</formula> is a minimum, then one must check that <formula id="58">$D&apos;&apos;(\mathbf{x})$</formula> is <bold>negative-definite</bold>.</para><para>Otherwise, we cannot refine the position of the extremum. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="83"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1gab6da4ded8646087ff6e1cf58157d6cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::refineExtremum</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, int x, int y, int type, Point2f &amp;pos, float &amp;val, int borderSz=1, int numIter=5)</argsstring>
        <name>refineExtremum</name>
        <param>
          <type>const Image&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>Point2f &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>borderSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>numIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>This function refines the coordinates using the interpolation method in [Lowe, IJCV 2004] and [Brown and Lowe, BMVC 2002]. </para>        </briefdescription>
        <detaileddescription>
<para>It refines the spatial coordinates <formula id="50">$(x,y)$</formula>. However, there is no scale refinement here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="93"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1ga4e83483885aa6a6547d0979be3e0a5da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; OERegion &gt;</type>
        <definition>std::vector&lt;OERegion&gt; DO::localScaleSpaceExtrema</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;I, int s, int o, float extremumThres=0.03f, float edgeRatioThres=10.f, int imgPaddingSz=1, int refineIter=5)</argsstring>
        <name>localScaleSpaceExtrema</name>
        <param>
          <type>const ImagePyramid&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>float</type>
          <declname>extremumThres</declname>
          <defval>0.03f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>edgeRatioThres</declname>
          <defval>10.f</defval>
        </param>
        <param>
          <type>int</type>
          <declname>imgPaddingSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>refineIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Localizes all local extrema in scale-space at scale <formula id="60">$\sigma = 2^{s/S+o}$</formula>. Note that the default parameters are suited for the DoG extrema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="104"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1gabc46898f322e4612b3b5a13fda0b87c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::selectLaplaceScale</definition>
        <argsstring>(float &amp;scale, int x, int y, int s, int o, const ImagePyramid&lt; float &gt; &amp;gaussPyramid, int numScales=10)</argsstring>
        <name>selectLaplaceScale</name>
        <param>
          <type>float &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const ImagePyramid&lt; float &gt; &amp;</type>
          <declname>gaussPyramid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numScales</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scale selection based on the normalized <ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> of Gaussians for the simplified Harris-Laplace and Hessian-Laplace interest points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="113"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1ga7757b0f353fb42a7cc585486083a8d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; OERegion &gt;</type>
        <definition>std::vector&lt;OERegion&gt; DO::laplaceMaxima</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;function, const ImagePyramid&lt; float &gt; &amp;gaussPyramid, int s, int o, float extremumThres=1e-6f, float imgPaddingSz=1, float numScales=10, int refineIter=5)</argsstring>
        <name>laplaceMaxima</name>
        <param>
          <type>const ImagePyramid&lt; float &gt; &amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const ImagePyramid&lt; float &gt; &amp;</type>
          <declname>gaussPyramid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>float</type>
          <declname>extremumThres</declname>
          <defval>1e-6f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>imgPaddingSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>float</type>
          <declname>numScales</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>int</type>
          <declname>refineIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Localizes local maxima in space only and tries to assign a characteristic scale to each local maximum from the normalized <ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> of Gaussians operator. </para>        </briefdescription>
        <detaileddescription>
<para>This is mainly intended for Harris-Laplace and Hessian-Laplace interest points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="129"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
