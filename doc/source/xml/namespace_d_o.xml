<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="namespace_d_o" kind="namespace">
    <compoundname>DO</compoundname>
    <innerclass refid="struct_d_o_1_1_r" prot="public">DO::R</innerclass>
    <innerclass refid="struct_d_o_1_1_g" prot="public">DO::G</innerclass>
    <innerclass refid="struct_d_o_1_1_b" prot="public">DO::B</innerclass>
    <innerclass refid="struct_d_o_1_1_a" prot="public">DO::A</innerclass>
    <innerclass refid="struct_d_o_1_1_c" prot="public">DO::C</innerclass>
    <innerclass refid="struct_d_o_1_1_m" prot="public">DO::M</innerclass>
    <innerclass refid="struct_d_o_1_1_y" prot="public">DO::Y</innerclass>
    <innerclass refid="struct_d_o_1_1_k" prot="public">DO::K</innerclass>
    <innerclass refid="struct_d_o_1_1_u" prot="public">DO::U</innerclass>
    <innerclass refid="struct_d_o_1_1_v" prot="public">DO::V</innerclass>
    <innerclass refid="struct_d_o_1_1_h" prot="public">DO::H</innerclass>
    <innerclass refid="struct_d_o_1_1_s" prot="public">DO::S</innerclass>
    <innerclass refid="struct_d_o_1_1_gray" prot="public">DO::Gray</innerclass>
    <innerclass refid="class_d_o_1_1_color" prot="public">DO::Color</innerclass>
    <innerclass refid="struct_d_o_1_1_channel_traits" prot="public">DO::ChannelTraits</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits" prot="public">DO::ColorTraits</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01_matrix_3_01_channel_type___00_01_m_00_01_n_01_4_01_4" prot="public">DO::ColorTraits&lt; Matrix&lt; ChannelType_, M, N &gt; &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01unsigned_01char_01_4" prot="public">DO::ColorTraits&lt; unsigned char &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01unsigned_01short_01_4" prot="public">DO::ColorTraits&lt; unsigned short &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01unsigned_01int_01_4" prot="public">DO::ColorTraits&lt; unsigned int &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01char_01_4" prot="public">DO::ColorTraits&lt; char &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01short_01_4" prot="public">DO::ColorTraits&lt; short &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01int_01_4" prot="public">DO::ColorTraits&lt; int &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01float_01_4" prot="public">DO::ColorTraits&lt; float &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_traits_3_01double_01_4" prot="public">DO::ColorTraits&lt; double &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_lexicographical_order" prot="public">DO::LexicographicalOrder</innerclass>
    <innerclass refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4" prot="public">DO::ElementTraits&lt; Color&lt; T, Layout &gt; &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_image" prot="public">DO::Image</innerclass>
    <innerclass refid="struct_d_o_1_1_convert_image" prot="public">DO::ConvertImage</innerclass>
    <innerclass refid="struct_d_o_1_1_convert_image_3_01_t_00_01_t_00_01_n_01_4" prot="public">DO::ConvertImage&lt; T, T, N &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_rescale" prot="public">DO::ColorRescale</innerclass>
    <innerclass refid="struct_d_o_1_1_offset" prot="public">DO::Offset</innerclass>
    <innerclass refid="struct_d_o_1_1_offset2" prot="public">DO::Offset2</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4" prot="public">DO::Offset&lt; N, RowMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4" prot="public">DO::Offset&lt; 1, RowMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4" prot="public">DO::Offset&lt; N, ColMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4" prot="public">DO::Offset&lt; 1, ColMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset2_3_011_01_4" prot="public">DO::Offset2&lt; 1 &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_axis_iterator" prot="public">DO::AxisIterator</innerclass>
    <innerclass refid="class_d_o_1_1_range_iterator_base" prot="public">DO::RangeIteratorBase</innerclass>
    <innerclass refid="class_d_o_1_1_range_iterator" prot="public">DO::RangeIterator</innerclass>
    <innerclass refid="class_d_o_1_1_subrange_iterator" prot="public">DO::SubrangeIterator</innerclass>
    <innerclass refid="class_d_o_1_1_coords_iterator" prot="public">DO::CoordsIterator</innerclass>
    <innerclass refid="struct_d_o_1_1_element_traits" prot="public">DO::ElementTraits</innerclass>
    <innerclass refid="struct_d_o_1_1_element_traits_3_01_matrix_3_01_t_00_01_m_00_01_n_01_4_01_4" prot="public">DO::ElementTraits&lt; Matrix&lt; T, M, N &gt; &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_element_traits_3_01_array_3_01_t_00_01_m_00_01_n_01_4_01_4" prot="public">DO::ElementTraits&lt; Array&lt; T, M, N &gt; &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_multi_array" prot="public">DO::MultiArray</innerclass>
    <innerclass refid="class_d_o_1_1_sparse_multi_array" prot="public">DO::SparseMultiArray</innerclass>
    <innerclass refid="class_d_o_1_1_timer" prot="public">DO::Timer</innerclass>
    <innerclass refid="class_d_o_1_1_tree" prot="public">DO::Tree</innerclass>
    <innerclass refid="class_d_o_1_1_d_a_i_s_y" prot="public">DO::DAISY</innerclass>
    <innerclass refid="class_d_o_1_1_compute_dominant_orientations" prot="public">DO::ComputeDominantOrientations</innerclass>
    <innerclass refid="class_d_o_1_1_compute_s_i_f_t_descriptor" prot="public">DO::ComputeSIFTDescriptor</innerclass>
    <innerclass refid="class_d_o_1_1_adapt_feature_affinely_to_local_shape" prot="public">DO::AdaptFeatureAffinelyToLocalShape</innerclass>
    <innerclass refid="class_d_o_1_1_compute_do_g_extrema" prot="public">DO::ComputeDoGExtrema</innerclass>
    <innerclass refid="class_d_o_1_1_compute_harris_laplace_corners" prot="public">DO::ComputeHarrisLaplaceCorners</innerclass>
    <innerclass refid="class_d_o_1_1_compute_hessian_laplace_maxima" prot="public">DO::ComputeHessianLaplaceMaxima</innerclass>
    <innerclass refid="class_d_o_1_1_compute_do_h_extrema" prot="public">DO::ComputeDoHExtrema</innerclass>
    <innerclass refid="class_d_o_1_1_compute_lo_g_extrema" prot="public">DO::ComputeLoGExtrema</innerclass>
    <innerclass refid="class_d_o_1_1_descriptor_matrix" prot="public">DO::DescriptorMatrix</innerclass>
    <innerclass refid="class_d_o_1_1_visual_feature" prot="public">DO::VisualFeature</innerclass>
    <innerclass refid="class_d_o_1_1_interest_point" prot="public">DO::InterestPoint</innerclass>
    <innerclass refid="class_d_o_1_1_o_e_region" prot="public">DO::OERegion</innerclass>
    <innerclass refid="class_d_o_1_1_o_e_region_item" prot="public">DO::OERegionItem</innerclass>
    <innerclass refid="class_d_o_1_1_match_item" prot="public">DO::MatchItem</innerclass>
    <innerclass refid="class_d_o_1_1_image_features_item" prot="public">DO::ImageFeaturesItem</innerclass>
    <innerclass refid="class_d_o_1_1_key_ref" prot="public">DO::KeyRef</innerclass>
    <innerclass refid="struct_d_o_1_1_bin" prot="public">DO::Bin</innerclass>
    <innerclass refid="struct_d_o_1_1_bin_3_01_real_descriptor_01_4" prot="public">DO::Bin&lt; RealDescriptor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_bin_3_01_binary_descriptor_01_4" prot="public">DO::Bin&lt; BinaryDescriptor &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_set" prot="public">DO::Set</innerclass>
    <innerclass refid="struct_d_o_1_1_equal_descriptor" prot="public">DO::EqualDescriptor</innerclass>
    <innerclass refid="struct_d_o_1_1_equal_descriptor_3_01float_01_4" prot="public">DO::EqualDescriptor&lt; float &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_compare_features" prot="public">DO::CompareFeatures</innerclass>
    <innerclass refid="class_d_o_1_1_b_box" prot="public">DO::BBox</innerclass>
    <innerclass refid="class_d_o_1_1_cone" prot="public">DO::Cone</innerclass>
    <innerclass refid="class_d_o_1_1_affine_cone" prot="public">DO::AffineCone</innerclass>
    <innerclass refid="class_d_o_1_1_cube" prot="public">DO::Cube</innerclass>
    <innerclass refid="class_d_o_1_1_ellipse" prot="public">DO::Ellipse</innerclass>
    <innerclass refid="class_d_o_1_1_half_space3" prot="public">DO::HalfSpace3</innerclass>
    <innerclass refid="class_d_o_1_1_line_segment" prot="public">DO::LineSegment</innerclass>
    <innerclass refid="class_d_o_1_1_small_polygon" prot="public">DO::SmallPolygon</innerclass>
    <innerclass refid="class_d_o_1_1_quad" prot="public">DO::Quad</innerclass>
    <innerclass refid="class_d_o_1_1_sphere" prot="public">DO::Sphere</innerclass>
    <innerclass refid="class_d_o_1_1_triangle" prot="public">DO::Triangle</innerclass>
    <innerclass refid="class_d_o_1_1_squared_ref_distance" prot="public">DO::SquaredRefDistance</innerclass>
    <innerclass refid="class_d_o_1_1_squared_distance" prot="public">DO::SquaredDistance</innerclass>
    <innerclass refid="class_d_o_1_1_open_ball" prot="public">DO::OpenBall</innerclass>
    <innerclass refid="class_d_o_1_1_monomial" prot="public">DO::Monomial</innerclass>
    <innerclass refid="class_d_o_1_1_polynomial" prot="public">DO::Polynomial</innerclass>
    <innerclass refid="struct_d_o_1_1_dialog_box_info" prot="public">DO::DialogBoxInfo</innerclass>
    <innerclass refid="class_d_o_1_1_graphics_view" prot="public">DO::GraphicsView</innerclass>
    <innerclass refid="class_d_o_1_1_track_ball" prot="public">DO::TrackBall</innerclass>
    <innerclass refid="class_d_o_1_1_open_g_l_window" prot="public">DO::OpenGLWindow</innerclass>
    <innerclass refid="class_d_o_1_1_scroll_area" prot="public">DO::ScrollArea</innerclass>
    <innerclass refid="class_d_o_1_1_painting_window" prot="public">DO::PaintingWindow</innerclass>
    <innerclass refid="class_d_o_1_1_image_item" prot="public">DO::ImageItem</innerclass>
    <innerclass refid="class_d_o_1_1_user_thread" prot="public">DO::UserThread</innerclass>
    <innerclass refid="struct_d_o_1_1_event" prot="public">DO::Event</innerclass>
    <innerclass refid="class_d_o_1_1_graphics_application" prot="public">DO::GraphicsApplication</innerclass>
    <innerclass refid="class_d_o_1_1_simple_mesh" prot="public">DO::SimpleMesh</innerclass>
    <innerclass refid="class_d_o_1_1_mesh_reader" prot="public">DO::MeshReader</innerclass>
    <innerclass refid="class_d_o_1_1_file_error" prot="public">DO::FileError</innerclass>
    <innerclass refid="class_d_o_1_1_file_handler" prot="public">DO::FileHandler</innerclass>
    <innerclass refid="class_d_o_1_1_image_file_reader" prot="public">DO::ImageFileReader</innerclass>
    <innerclass refid="class_d_o_1_1_image_file_writer" prot="public">DO::ImageFileWriter</innerclass>
    <innerclass refid="struct_d_o_1_1_jpeg_error_message" prot="public">DO::JpegErrorMessage</innerclass>
    <innerclass refid="class_d_o_1_1_jpeg_file_reader" prot="public">DO::JpegFileReader</innerclass>
    <innerclass refid="class_d_o_1_1_jpeg_file_writer" prot="public">DO::JpegFileWriter</innerclass>
    <innerclass refid="class_d_o_1_1_png_file_reader" prot="public">DO::PngFileReader</innerclass>
    <innerclass refid="class_d_o_1_1_png_file_writer" prot="public">DO::PngFileWriter</innerclass>
    <innerclass refid="class_d_o_1_1_tiff_file_reader" prot="public">DO::TiffFileReader</innerclass>
    <innerclass refid="class_d_o_1_1_tiff_file_writer" prot="public">DO::TiffFileWriter</innerclass>
    <innerclass refid="struct_d_o_1_1_image_painter" prot="public">DO::ImagePainter</innerclass>
    <innerclass refid="struct_d_o_1_1_deriche_blur" prot="public">DO::DericheBlur</innerclass>
    <innerclass refid="struct_d_o_1_1_determinant" prot="public">DO::Determinant</innerclass>
    <innerclass refid="struct_d_o_1_1_differential" prot="public">DO::Differential</innerclass>
    <innerclass refid="struct_d_o_1_1_differential_3_01_n_00_010_01_4" prot="public">DO::Differential&lt; N, 0 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_gradient" prot="public">DO::Gradient</innerclass>
    <innerclass refid="struct_d_o_1_1_laplacian" prot="public">DO::Laplacian</innerclass>
    <innerclass refid="struct_d_o_1_1_hessian" prot="public">DO::Hessian</innerclass>
    <innerclass refid="struct_d_o_1_1_compare_with_neighborhood3" prot="public">DO::CompareWithNeighborhood3</innerclass>
    <innerclass refid="struct_d_o_1_1_local_extremum" prot="public">DO::LocalExtremum</innerclass>
    <innerclass refid="struct_d_o_1_1_local_scale_space_extremum" prot="public">DO::LocalScaleSpaceExtremum</innerclass>
    <innerclass refid="struct_d_o_1_1_local_max" prot="public">DO::LocalMax</innerclass>
    <innerclass refid="struct_d_o_1_1_local_min" prot="public">DO::LocalMin</innerclass>
    <innerclass refid="struct_d_o_1_1_local_scale_space_max" prot="public">DO::LocalScaleSpaceMax</innerclass>
    <innerclass refid="struct_d_o_1_1_local_scale_space_min" prot="public">DO::LocalScaleSpaceMin</innerclass>
    <innerclass refid="struct_d_o_1_1_strict_local_max" prot="public">DO::StrictLocalMax</innerclass>
    <innerclass refid="struct_d_o_1_1_strict_local_min" prot="public">DO::StrictLocalMin</innerclass>
    <innerclass refid="struct_d_o_1_1_strict_local_scale_space_max" prot="public">DO::StrictLocalScaleSpaceMax</innerclass>
    <innerclass refid="struct_d_o_1_1_strict_local_scale_space_min" prot="public">DO::StrictLocalScaleSpaceMin</innerclass>
    <innerclass refid="class_d_o_1_1_image_pyramid_params" prot="public">DO::ImagePyramidParams</innerclass>
    <innerclass refid="class_d_o_1_1_image_pyramid" prot="public">DO::ImagePyramid</innerclass>
    <innerclass refid="struct_d_o_1_1_sobel" prot="public">DO::Sobel</innerclass>
    <innerclass refid="struct_d_o_1_1_sobel_3_01_t_00_012_01_4" prot="public">DO::Sobel&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_scharr" prot="public">DO::Scharr</innerclass>
    <innerclass refid="struct_d_o_1_1_scharr_3_01_t_00_012_01_4" prot="public">DO::Scharr&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_prewitt" prot="public">DO::Prewitt</innerclass>
    <innerclass refid="struct_d_o_1_1_prewitt_3_01_t_00_012_01_4" prot="public">DO::Prewitt&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_roberts_cross" prot="public">DO::RobertsCross</innerclass>
    <innerclass refid="struct_d_o_1_1_roberts_cross_3_01_t_00_012_01_4" prot="public">DO::RobertsCross&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_robinson" prot="public">DO::Robinson</innerclass>
    <innerclass refid="struct_d_o_1_1_robinson_3_01_t_00_012_01_4" prot="public">DO::Robinson&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_kirsch" prot="public">DO::Kirsch</innerclass>
    <innerclass refid="struct_d_o_1_1_kirsch_3_01_t_00_012_01_4" prot="public">DO::Kirsch&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_gaussian" prot="public">DO::Gaussian</innerclass>
    <innerclass refid="struct_d_o_1_1_gaussian_3_01_t_00_012_01_4" prot="public">DO::Gaussian&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_squared_norm" prot="public">DO::SquaredNorm</innerclass>
    <innerclass refid="struct_d_o_1_1_blue_norm" prot="public">DO::BlueNorm</innerclass>
    <innerclass refid="struct_d_o_1_1_stable_norm" prot="public">DO::StableNorm</innerclass>
    <innerclass refid="struct_d_o_1_1_orientation" prot="public">DO::Orientation</innerclass>
    <innerclass refid="struct_d_o_1_1_orientation_3_01_t_00_012_01_4" prot="public">DO::Orientation&lt; T, 2 &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_second_moment_matrix" prot="public">DO::SecondMomentMatrix</innerclass>
    <innerclass refid="class_d_o_1_1_k_d_tree" prot="public">DO::KDTree</innerclass>
    <innernamespace refid="namespace_d_o_1_1_concept">DO::Concept</innernamespace>
    <innernamespace refid="namespace_d_o_1_1_c_s_g">DO::CSG</innernamespace>
    <innernamespace refid="namespace_d_o_1_1internal">DO::internal</innernamespace>
    <innernamespace refid="namespace_d_o_1_1_meta">DO::Meta</innernamespace>
    <innernamespace refid="namespace_d_o_1_1_p2">DO::P2</innernamespace>
    <innernamespace refid="namespace_d_o_1_1_projective">DO::Projective</innernamespace>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group___interest_point_1gab50392731f405ed882cebbf6eaee3b82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt;</type>
        <definition>Image&lt;float&gt; DO::scaleAdaptedHarrisCornerness</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, float sigma_I, float sigma_D, float kappa)</argsstring>
        <name>scaleAdaptedHarrisCornerness</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sigma_I</declname>
        </param>
        <param>
          <type>float</type>
          <declname>sigma_D</declname>
        </param>
        <param>
          <type>float</type>
          <declname>kappa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the Harris-Stephens corner function <formula id="41">$det(\mathbf{A}) - \kappa trace(\mathbf{A})^2$</formula> where <formula id="42">$\mathbf{A}$</formula> is the auto-correlation matrix. Good values of <formula id="43">$\kappa$</formula> range in <formula id="44">$[0.04, 0.15]$</formula>.</para><para>As a reminder, the auto-correlation matrix <formula id="45">$A$</formula> is defined as below. Let <formula id="46">$g_{\sigma}$</formula> be the <ref refid="struct_d_o_1_1_gaussian" kindref="compound">Gaussian</ref> kernel with standard deviation <formula id="47">$\sigma$</formula>. And define the convolved image by <formula id="48">$I_\sigma = g_{\sigma_I} * I$</formula>, then <formula id="49">\[ \mathbf{A} = g_{\sigma_D} * \left[ \nabla I_{\sigma_I} \nabla I_{\sigma_I}^T \right] \]</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Harris.hpp" line="43"/>
      </memberdef>
      <memberdef kind="function" id="group___interest_point_1ga631d182de58fbfb7d9496295269180ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt;</type>
        <definition>ImagePyramid&lt;float&gt; DO::harrisCornernessPyramid</definition>
        <argsstring>(const Image&lt; float &gt; &amp;image, float kappa=0.04f, const ImagePyramidParams &amp;params=ImagePyramidParams(-1, 2+1, sqrt(2.f), 1))</argsstring>
        <name>harrisCornernessPyramid</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>float</type>
          <declname>kappa</declname>
          <defval>0.04f</defval>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid_params" kindref="compound">ImagePyramidParams</ref> &amp;</type>
          <declname>params</declname>
          <defval><ref refid="class_d_o_1_1_image_pyramid_params" kindref="compound">ImagePyramidParams</ref>(-1, 2+1, sqrt(2.f), 1)</defval>
        </param>
        <briefdescription>
<para>Pyramid of Harris cornerness functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Harris.hpp" line="48"/>
      </memberdef>
      <memberdef kind="function" id="group___interest_point_1gabcff16cc4a4d3417dfad685656e8d5a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt;</type>
        <definition>std::vector&lt;OERegion&gt; DO::localMaxima</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, float thres)</argsstring>
        <name>localMaxima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>float</type>
          <declname>thres</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds and stores local maxima in the image <formula id="0">$I$</formula> exceeding the specified threshold. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Harris.hpp" line="55"/>
      </memberdef>
      <memberdef kind="function" id="group___interest_point_1ga64373423a37f35ea21fc400eb2eae5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::localMinX</definition>
        <argsstring>(int x, int y, Image&lt; float &gt; &amp;I)</argsstring>
        <name>localMinX</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Utility functions to locate edgels from the Harris-Stephens corner function. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_d_o_1_1_a" kindref="compound">A</ref> pixel <formula id="50">$(x,y)$</formula> is an edgel if its Harris-Stephens cornerness is negative and attains a minimum either in the x-direction or the y-direction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Harris.hpp" line="64"/>
      </memberdef>
      <memberdef kind="function" id="group___interest_point_1ga3727489c67c732bee98cea5b7fee03b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::localMinY</definition>
        <argsstring>(int x, int y, Image&lt; float &gt; &amp;I)</argsstring>
        <name>localMinY</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Utility functions to locate edgels from the Harris-Stephens corner function. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_d_o_1_1_a" kindref="compound">A</ref> pixel <formula id="50">$(x,y)$</formula> is an edgel if its Harris-Stephens cornerness is negative and attains a minimum either in the x-direction or the y-direction. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Harris.hpp" line="73"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group___interest_point_1ga7df0fe7192d085b05ea8886eb2fd999b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt;</type>
        <definition>ImagePyramid&lt;T&gt; DO::DoHPyramid</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;gaussians)</argsstring>
        <name>DoHPyramid</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>gaussians</declname>
        </param>
        <briefdescription>
<para>Computes a pyramid of determinant of <ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> from the <ref refid="struct_d_o_1_1_gaussian" kindref="compound">Gaussian</ref> pyramid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Hessian.hpp" line="27" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Hessian.hpp" bodystart="26" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group___features_1ga8ec147f93d2f16a3d53a490cf234c81c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawOERegions</definition>
        <argsstring>(const std::vector&lt; OERegion &gt; &amp;features, const Color3ub &amp;c, float scale=1.f, const Point2f &amp;off=Point2f::Zero())</argsstring>
        <name>drawOERegions</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt; &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
          <defval>1.f</defval>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>off</declname>
          <defval>Point2f::Zero()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Draw.hpp" line="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="namespace_d_o_1aced5083087141a1e7ffc58c6ff596b75" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::putFeatureOnPixmapItem</definition>
        <argsstring>(const Feature &amp;f, QGraphicsPixmapItem *pixItem)</argsstring>
        <name>putFeatureOnPixmapItem</name>
        <param>
          <type>const Feature &amp;</type>
          <declname>f</declname>
        </param>
        <param>
          <type>QGraphicsPixmapItem *</type>
          <declname>pixItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp" line="130"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1acd1debe784c04d9ff9842994c505c215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FeatureOrKey</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::putFeaturesOnPixmapItem</definition>
        <argsstring>(const std::vector&lt; FeatureOrKey &gt; &amp;keys, QGraphicsPixmapItem *pixItem)</argsstring>
        <name>putFeaturesOnPixmapItem</name>
        <param>
          <type>const std::vector&lt; FeatureOrKey &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <param>
          <type>QGraphicsPixmapItem *</type>
          <declname>pixItem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp" line="135" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp" bodystart="133" bodyend="142"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group___features_1gaa066b0983decc9a5e1c9120d3c946690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::readKeypoints</definition>
        <argsstring>(std::vector&lt; OERegion &gt; &amp;features, DescriptorMatrix&lt; T &gt; &amp;descriptors, const std::string &amp;name)</argsstring>
        <name>readKeypoints</name>
        <param>
          <type>std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt; &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type><ref refid="class_d_o_1_1_descriptor_matrix" kindref="compound">DescriptorMatrix</ref>&lt; T &gt; &amp;</type>
          <declname>descriptors</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/IO.hpp" line="28" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/IO.hpp" bodystart="25" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group___features_1ga6425c4d1a09ec786eb6c1cb2c6669800" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::writeKeypoints</definition>
        <argsstring>(const std::vector&lt; OERegion &gt; &amp;features, const DescriptorMatrix&lt; T &gt; &amp;descriptors, const std::string &amp;name)</argsstring>
        <name>writeKeypoints</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt; &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_descriptor_matrix" kindref="compound">DescriptorMatrix</ref>&lt; T &gt; &amp;</type>
          <declname>descriptors</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/IO.hpp" line="72" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/IO.hpp" bodystart="69" bodyend="94"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="enum" id="namespace_d_o_1a684e147d500221ad811a1b6b4f2c5117" prot="public" static="no">
        <name>DescriptorType</name>
        <enumvalue id="namespace_d_o_1a684e147d500221ad811a1b6b4f2c5117acc6ad3ac02c25d96533905dc2231d083" prot="public">
          <name>RealDescriptor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespace_d_o_1a684e147d500221ad811a1b6b4f2c5117a74e8234935f228215cde67f192efbd20" prot="public">
          <name>BinaryDescriptor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Key.hpp" line="42" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Key.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="namespace_d_o_1acd692239393b05dc9ca60ac294dddc03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::isfinite</definition>
        <argsstring>(T arg)</argsstring>
        <name>isfinite</name>
        <param>
          <type>T</type>
          <declname>arg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Utilities.hpp" line="67" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Utilities.hpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ac7e1ccaaf274910dc219e56894cb0948" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::removeRedundancies</definition>
        <argsstring>(std::vector&lt; OERegion &gt; &amp;features, DescriptorMatrix&lt; float &gt; &amp;descriptors)</argsstring>
        <name>removeRedundancies</name>
        <param>
          <type>std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt; &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type><ref refid="class_d_o_1_1_descriptor_matrix" kindref="compound">DescriptorMatrix</ref>&lt; float &gt; &amp;</type>
          <declname>descriptors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Utilities.hpp" line="74"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a7c54cd031446030c6a390f46118e0bfe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::removeRedundancies</definition>
        <argsstring>(Set&lt; OERegion, RealDescriptor &gt; &amp;keys)</argsstring>
        <name>removeRedundancies</name>
        <param>
          <type><ref refid="class_d_o_1_1_set" kindref="compound">Set</ref>&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref>, RealDescriptor &gt; &amp;</type>
          <declname>keys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Utilities.hpp" line="77" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/Utilities.hpp" bodystart="76" bodyend="77"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group___scale_space_1gac43ae8da0a66097395da0436a50ae854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt;</type>
        <definition>ImagePyramid&lt;T&gt; DO::gaussianPyramid</definition>
        <argsstring>(const Image&lt; T &gt; &amp;image, const ImagePyramidParams &amp;params=ImagePyramidParams())</argsstring>
        <name>gaussianPyramid</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid_params" kindref="compound">ImagePyramidParams</ref> &amp;</type>
          <declname>params</declname>
          <defval><ref refid="class_d_o_1_1_image_pyramid_params" kindref="compound">ImagePyramidParams</ref>()</defval>
        </param>
        <briefdescription>
<para>Computes a pyramid of Gaussians. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" line="29" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" bodystart="27" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group___scale_space_1ga4387db3d795aaa1ed48401930ce780ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt;</type>
        <definition>ImagePyramid&lt;T&gt; DO::DoGPyramid</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;gaussians)</argsstring>
        <name>DoGPyramid</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>gaussians</declname>
        </param>
        <briefdescription>
<para>Computes a pyramid of difference of Gaussians from the <ref refid="struct_d_o_1_1_gaussian" kindref="compound">Gaussian</ref> pyramid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" line="100" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" bodystart="99" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="group___scale_space_1ga952f368693735ace06251f2102d8affb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt;</type>
        <definition>ImagePyramid&lt;T&gt; DO::LoGPyramid</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;gaussians)</argsstring>
        <name>LoGPyramid</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>gaussians</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes a pyramid of scale-normalized Laplacians of Gaussians from the <ref refid="struct_d_o_1_1_gaussian" kindref="compound">Gaussian</ref> pyramid. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" line="122" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" bodystart="121" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="group___scale_space_1ga5594bf25921d4964fb5c4f8d2c42c758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::gradient</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;I, int x, int y, int s, int o)</argsstring>
        <name>gradient</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the gradient vector of <formula id="67">$I(x,y,\sigma)$</formula> at <formula id="6">$(x,y,\sigma)$</formula>, where <formula id="68">$\sigma = 2^{s/S + o}$</formula> where <formula id="29">$S$</formula> is the number of scales per octave. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" line="147" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" bodystart="146" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="group___scale_space_1gac25e0eee069b818476255c4d02512e5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 3 &gt;</type>
        <definition>Matrix&lt;T, 3, 3&gt; DO::hessian</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;I, int x, int y, int s, int o)</argsstring>
        <name>hessian</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the hessian matrix of <formula id="67">$I(x,y,\sigma)$</formula> at <formula id="6">$(x,y,\sigma)$</formula>, where <formula id="68">$\sigma = 2^{s/S + o}$</formula> where <formula id="29">$S$</formula> is the number of scales per octave. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" line="170" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/DoG.hpp" bodystart="169" bodyend="199"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group___differential_1ga7315b78bba45e4a1882ad9566b99e949" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::squaredNorm</definition>
        <argsstring>(Image&lt; T, D &gt; &amp;dst, const Image&lt; Matrix&lt; T, M, N &gt;, D &gt; &amp;src)</argsstring>
        <name>squaredNorm</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, D &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, <ref refid="struct_d_o_1_1_m" kindref="compound">M</ref>, N &gt;, D &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Squared norm computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>field of squared norms </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" line="31" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" bodystart="30" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga8880ca08e1e287668f610db64f54cfea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, D &gt;</type>
        <definition>Image&lt;T, D&gt; DO::squaredNorm</definition>
        <argsstring>(const Image&lt; Matrix&lt; T, M, N &gt;, D &gt; &amp;src)</argsstring>
        <name>squaredNorm</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, <ref refid="struct_d_o_1_1_m" kindref="compound">M</ref>, N &gt;, D &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Squared norm computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>scalar field of squared norms </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" line="51" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" bodystart="50" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga64a1c18b3a769c991d4458cbf1b5b85c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::blueNorm</definition>
        <argsstring>(Image&lt; T, D &gt; &amp;dst, const Image&lt; Matrix&lt; T, M, N &gt;, D &gt; &amp;src)</argsstring>
        <name>blueNorm</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, D &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, <ref refid="struct_d_o_1_1_m" kindref="compound">M</ref>, N &gt;, D &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Blue norm computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>field of norms </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" line="63" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" bodystart="62" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga3e186700b17ea6fc33f987f81c6a6ac6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, D &gt;</type>
        <definition>Image&lt;T, D&gt; DO::blueNorm</definition>
        <argsstring>(const Image&lt; Matrix&lt; T, M, N &gt;, D &gt; &amp;src)</argsstring>
        <name>blueNorm</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, <ref refid="struct_d_o_1_1_m" kindref="compound">M</ref>, N &gt;, D &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Blue norm computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>scalar field of norms </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" line="83" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga71ea0be02e15acc698cbdcd0657b05a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::stableNorm</definition>
        <argsstring>(Image&lt; T, D &gt; &amp;dst, const Image&lt; Matrix&lt; T, M, N &gt;, D &gt; &amp;src)</argsstring>
        <name>stableNorm</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, D &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, <ref refid="struct_d_o_1_1_m" kindref="compound">M</ref>, N &gt;, D &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Stable norm computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>field of norms </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" line="95" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" bodystart="94" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga56bd039983fa692c8309e6911bbd3a7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>M</declname>
            <defname>M</defname>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>int</type>
            <declname>D</declname>
            <defname>D</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, D &gt;</type>
        <definition>Image&lt;T, D&gt; DO::stableNorm</definition>
        <argsstring>(const Image&lt; Matrix&lt; T, M, N &gt;, D &gt; &amp;src)</argsstring>
        <name>stableNorm</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, <ref refid="struct_d_o_1_1_m" kindref="compound">M</ref>, N &gt;, D &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Stable norm computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>scalar field of norms </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" line="115" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Norm.hpp" bodystart="114" bodyend="119"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <memberdef kind="function" id="group___differential_1ga1e0840d5585c59e1b1b86175686780c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::orientation</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;src)</argsstring>
        <name>orientation</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Computes an orientation field from a 2D vector field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>an image in which each element <bold>src(x,y)</bold> are 2D vectors, i.e., a discretized 2D vector field, e.g. image gradients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>an image where each pixel <bold>dst(x,y)</bold> contains the orientation of the 2D vector &apos;src(x,y)&apos; </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Orientation.hpp" line="37" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Orientation.hpp" bodystart="36" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga1726772490c0aaf8cbf03007b413fc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::orientation</definition>
        <argsstring>(const Image&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;src)</argsstring>
        <name>orientation</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Computes an orientation field from a 2D vector field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>an image in which each element <bold>src(x,y)</bold> are 2D vectors, i.e., a discretized 2D vector field, e.g. image gradients. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>an image where each pixel <bold>dst(x,y)</bold> contains the orientation of the 2D vector <bold>src(x,y)</bold> </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Orientation.hpp" line="63" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Orientation.hpp" bodystart="62" bodyend="67"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group___event_1ga2628ea8d12e8b2563c32f05dc7fff6fa" prot="public" static="no">
        <name>EventType</name>
        <enumvalue id="group___event_1gga2628ea8d12e8b2563c32f05dc7fff6faa5856f037cd70ecf6fca11999c11a4a0d" prot="public">
          <name>NO_EVENT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga2628ea8d12e8b2563c32f05dc7fff6faac2439afec39a5b43a1fd36a4316379a7" prot="public">
          <name>KEY_PRESSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga2628ea8d12e8b2563c32f05dc7fff6faa207f5f32e6d172c4003ec10fab0cb06d" prot="public">
          <name>KEY_RELEASED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga2628ea8d12e8b2563c32f05dc7fff6faa2a78e34c969c275a8f1d5638eec3e256" prot="public">
          <name>MOUSE_PRESSED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga2628ea8d12e8b2563c32f05dc7fff6faa3c15ef8596d3b23b6404102c7fb7193a" prot="public">
          <name>MOUSE_RELEASED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga2628ea8d12e8b2563c32f05dc7fff6faa57a3cd71514de21ba0ceb8ad8acb963f" prot="public">
          <name>MOUSE_PRESSED_AND_MOVED</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="27" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="27" bodyend="34"/>
      </memberdef>
      <memberdef kind="enum" id="group___event_1ga842b56d113e8725bef118434ec682bcf" prot="public" static="no">
        <name>KeyModifierType</name>
        <enumvalue id="group___event_1gga842b56d113e8725bef118434ec682bcfaa23e30693836d9ecfc212f59c5cc6051" prot="public">
          <name>KEY_NOMODIFIER</name>
          <initializer>= 0x00000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga842b56d113e8725bef118434ec682bcfa7d538b177ab06797012e9ffb1449acd9" prot="public">
          <name>KEY_SHIFT</name>
          <initializer>= 0x02000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga842b56d113e8725bef118434ec682bcfa03b9f1caf27fb28b593880fdca9cfe66" prot="public">
          <name>KEY_CTRL</name>
          <initializer>= 0x04000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga842b56d113e8725bef118434ec682bcfaf22ac608afcf783bb841f664a2620ca6" prot="public">
          <name>KEY_ALT</name>
          <initializer>= 0x08000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1gga842b56d113e8725bef118434ec682bcfa040582834bb2d90049947d7ef74e87e2" prot="public">
          <name>KEY_META</name>
          <initializer>= 0x10000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Values are copy-pasted from Qt&apos;s documentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="37" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="37" bodyend="43"/>
      </memberdef>
      <memberdef kind="enum" id="group___event_1gaab0feaba617470cb4aa830dc5935238c" prot="public" static="no">
        <name>KeyType</name>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238caf037df577a49760d0258458966eec71d" prot="public">
          <name>KEY_UNKNOWN</name>
          <initializer>= 0x01ffffff</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca3a471c8b61a5f730dcbdd50fe53f3ab7" prot="public">
          <name>KEY_ESCAPE</name>
          <initializer>= 0x01000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca60c75f9c8eded88ef76c0c94da27963c" prot="public">
          <name>KEY_TAB</name>
          <initializer>=	0x01000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca5a1939b127858bfaaf9b3fd11e400d33" prot="public">
          <name>KEY_BACKTAB</name>
          <initializer>= 0x01000002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238caa3cd0158e01f834cebcfb3fc5578df4b" prot="public">
          <name>KEY_BACKSPACE</name>
          <initializer>= 0x01000003</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238caaefd064b1e5d75c429bed314ac18eba0" prot="public">
          <name>KEY_RETURN</name>
          <initializer>= 0x01000004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca2a662d23aadd7106a3a2afdfd5d426ed" prot="public">
          <name>KEY_ENTER</name>
          <initializer>= 0x01000005</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca26f2c18a3a0a7eabf7bd11f0ec93be78" prot="public">
          <name>KEY_INSERT</name>
          <initializer>= 0x01000006</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238cae7a3a4540031b038014294aa6743a7a4" prot="public">
          <name>KEY_DELETE</name>
          <initializer>= 0x01000007</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238cad26d172dc2cd90741c3939ca4fab0b84" prot="public">
          <name>KEY_PAUSE</name>
          <initializer>= 0x01000008</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238caf6ff54b9651ca18045e4000c2d26f790" prot="public">
          <name>KEY_PRINT</name>
          <initializer>= 0x01000009</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca1ee8297c377dbd20cc2b77defc2d0021" prot="public">
          <name>KEY_SYSREQ</name>
          <initializer>= 0x0100000a</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238caee7181a798c5753153051c0e1ace41c9" prot="public">
          <name>KEY_CLEAR</name>
          <initializer>= 0x0100000b</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238cad5b83418c285e43af5d3a87b4d4049d7" prot="public">
          <name>KEY_HOME</name>
          <initializer>= 0x01000010</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238caa8adb6fcb92dec58fb19410eacfdd403" prot="public">
          <name>KEY_END</name>
          <initializer>= 0x01000011</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca612120b69c7dfd46086db7aaebdbcf65" prot="public">
          <name>KEY_LEFT</name>
          <initializer>= 0x01000012</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca0848a442d907968b211b97bc2bd88acd" prot="public">
          <name>KEY_UP</name>
          <initializer>= 0x01000013</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca6504370d9c6391e1a9da6a1a529b089d" prot="public">
          <name>KEY_RIGHT</name>
          <initializer>= 0x01000014</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238caa9cdac7967bf7d88fdb761138a2a3416" prot="public">
          <name>KEY_DOWN</name>
          <initializer>= 0x01000015</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca5d9c9ba1d8f2c6f6737db37d3f449071" prot="public">
          <name>KEY_PAGEUP</name>
          <initializer>= 0x01000016</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggaab0feaba617470cb4aa830dc5935238ca5996c34d86df2b3c1be741aeb35bdbc4" prot="public">
          <name>KEY_PAGEDOWN</name>
          <initializer>= 0x01000017</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Values are copy-pasted from Qt&apos;s documentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="46" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="46" bodyend="70"/>
      </memberdef>
      <memberdef kind="enum" id="group___event_1gac1ec3647c005eacad401b06e7e18f711" prot="public" static="no">
        <name>MouseButton</name>
        <enumvalue id="group___event_1ggac1ec3647c005eacad401b06e7e18f711a045559402bb3c471e2a17a47e761bfc0" prot="public">
          <name>MOUSE_NO_BUTTON</name>
          <initializer>= 0x00000000</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggac1ec3647c005eacad401b06e7e18f711a2aaa929060851d784e1632ecb07174bd" prot="public">
          <name>MOUSE_LEFT_BUTTON</name>
          <initializer>= 0x00000001</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggac1ec3647c005eacad401b06e7e18f711aa54b3e95880cf53091b70653f07bd220" prot="public">
          <name>MOUSE_RIGHT_BUTTON</name>
          <initializer>= 0x00000002</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group___event_1ggac1ec3647c005eacad401b06e7e18f711a8ce167376c990786da6789bd5c5d94dd" prot="public">
          <name>MOUSE_MIDDLE_BUTTON</name>
          <initializer>= 0x00000004</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Values are copy-pasted from Qt&apos;s documentation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="73" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="73" bodyend="78"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___color_space_1ga52ed562e9155b12e5395633a01476810" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector4" kindref="compound">Meta::Vector4</ref>&lt; <ref refid="struct_d_o_1_1_r" kindref="compound">R</ref>, <ref refid="struct_d_o_1_1_g" kindref="compound">G</ref>, <ref refid="struct_d_o_1_1_b" kindref="compound">B</ref>, <ref refid="struct_d_o_1_1_a" kindref="compound">A</ref> &gt;</type>
        <definition>typedef Meta::Vector4&lt;R,G,B,A&gt; Rgba</definition>
        <argsstring></argsstring>
        <name>Rgba</name>
        <briefdescription>
<para>RGBA color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="74" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1gac3a42db968dfe7d65b7b74f49de821c3" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector4" kindref="compound">Meta::Vector4</ref>&lt; <ref refid="struct_d_o_1_1_a" kindref="compound">A</ref>, <ref refid="struct_d_o_1_1_r" kindref="compound">R</ref>, <ref refid="struct_d_o_1_1_g" kindref="compound">G</ref>, <ref refid="struct_d_o_1_1_b" kindref="compound">B</ref> &gt;</type>
        <definition>typedef Meta::Vector4&lt;A,R,G,B&gt; Argb</definition>
        <argsstring></argsstring>
        <name>Argb</name>
        <briefdescription>
<para>ARGB color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="76" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1gae0496dd76c54f129381947440d56a874" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector4" kindref="compound">Meta::Vector4</ref>&lt; <ref refid="struct_d_o_1_1_a" kindref="compound">A</ref>, <ref refid="struct_d_o_1_1_b" kindref="compound">B</ref>, <ref refid="struct_d_o_1_1_g" kindref="compound">G</ref>, <ref refid="struct_d_o_1_1_r" kindref="compound">R</ref> &gt;</type>
        <definition>typedef Meta::Vector4&lt;A,B,G,R&gt; Abgr</definition>
        <argsstring></argsstring>
        <name>Abgr</name>
        <briefdescription>
<para>ABGR color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="78" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1gadb2e9d99bf441a224f4d628ad62a0bd2" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector4" kindref="compound">Meta::Vector4</ref>&lt; <ref refid="struct_d_o_1_1_b" kindref="compound">B</ref>, <ref refid="struct_d_o_1_1_r" kindref="compound">R</ref>, <ref refid="struct_d_o_1_1_g" kindref="compound">G</ref>, <ref refid="struct_d_o_1_1_a" kindref="compound">A</ref> &gt;</type>
        <definition>typedef Meta::Vector4&lt;B,R,G,A&gt; Bgra</definition>
        <argsstring></argsstring>
        <name>Bgra</name>
        <briefdescription>
<para>BGRA color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="80" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector4" kindref="compound">Meta::Vector4</ref>&lt; <ref refid="struct_d_o_1_1_c" kindref="compound">C</ref>, <ref refid="struct_d_o_1_1_m" kindref="compound">M</ref>, <ref refid="struct_d_o_1_1_y" kindref="compound">Y</ref>, <ref refid="struct_d_o_1_1_k" kindref="compound">K</ref> &gt;</type>
        <definition>typedef Meta::Vector4&lt;C,M,Y,K&gt; Cmyk</definition>
        <argsstring></argsstring>
        <name>Cmyk</name>
        <briefdescription>
<para>CMYK color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="82" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector3" kindref="compound">Meta::Vector3</ref>&lt; <ref refid="struct_d_o_1_1_r" kindref="compound">R</ref>, <ref refid="struct_d_o_1_1_g" kindref="compound">G</ref>, <ref refid="struct_d_o_1_1_b" kindref="compound">B</ref> &gt;</type>
        <definition>typedef Meta::Vector3&lt;R,G,B&gt; Rgb</definition>
        <argsstring></argsstring>
        <name>Rgb</name>
        <briefdescription>
<para>RGB color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="84" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1ga9a1cd8af7d2fb33189763c2edb5f262b" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector3" kindref="compound">Meta::Vector3</ref>&lt; <ref refid="struct_d_o_1_1_b" kindref="compound">B</ref>, <ref refid="struct_d_o_1_1_g" kindref="compound">G</ref>, <ref refid="struct_d_o_1_1_r" kindref="compound">R</ref> &gt;</type>
        <definition>typedef Meta::Vector3&lt;B,G,R&gt; Bgr</definition>
        <argsstring></argsstring>
        <name>Bgr</name>
        <briefdescription>
<para>BGR color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="86" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector3" kindref="compound">Meta::Vector3</ref>&lt; <ref refid="struct_d_o_1_1_y" kindref="compound">Y</ref>, <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, <ref refid="struct_d_o_1_1_v" kindref="compound">V</ref> &gt;</type>
        <definition>typedef Meta::Vector3&lt;Y,U,V&gt; Yuv</definition>
        <argsstring></argsstring>
        <name>Yuv</name>
        <briefdescription>
<para>YUV color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="88" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_space_1gaef854af3bd9309a9d2cfec268e7ccb9b" prot="public" static="no">
        <type><ref refid="struct_d_o_1_1_meta_1_1_vector3" kindref="compound">Meta::Vector3</ref>&lt; <ref refid="struct_d_o_1_1_h" kindref="compound">H</ref>, <ref refid="struct_d_o_1_1_s" kindref="compound">S</ref>, <ref refid="struct_d_o_1_1_v" kindref="compound">V</ref> &gt;</type>
        <definition>typedef Meta::Vector3&lt;H,S,V&gt; Hsv</definition>
        <argsstring></argsstring>
        <name>Hsv</name>
        <briefdescription>
<para>HSV color space and layout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="90" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga26fe41648049c8b8e3c4dea37deeec9a" prot="public" static="no">
        <type>unsigned char</type>
        <definition>typedef unsigned char gray8</definition>
        <argsstring></argsstring>
        <name>gray8</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="616" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="616" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga08ae2e1a2fcf5d04bce4407dad5c6744" prot="public" static="no">
        <type>char</type>
        <definition>typedef char gray8s</definition>
        <argsstring></argsstring>
        <name>gray8s</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="618" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="618" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga2bbd8e645370296adb5c0be31e7e5b73" prot="public" static="no">
        <type>unsigned short</type>
        <definition>typedef unsigned short gray16</definition>
        <argsstring></argsstring>
        <name>gray16</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="620" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="620" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga7b4d8c29b4d1573e4c6d00de9c18154c" prot="public" static="no">
        <type>short</type>
        <definition>typedef short gray16s</definition>
        <argsstring></argsstring>
        <name>gray16s</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="622" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="622" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga2611df52ac06969ecbd942796ce2caeb" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int gray32</definition>
        <argsstring></argsstring>
        <name>gray32</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="624" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="624" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gac9a11db63526348331dcb825f6830989" prot="public" static="no">
        <type>int</type>
        <definition>typedef int gray32s</definition>
        <argsstring></argsstring>
        <name>gray32s</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="626" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="626" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga9c8a72eb9c04233172157ab5e7d0be22" prot="public" static="no">
        <type>float</type>
        <definition>typedef float gray32f</definition>
        <argsstring></argsstring>
        <name>gray32f</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="628" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="628" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaf5100147ede5b7f434dc4238668a3c13" prot="public" static="no">
        <type>double</type>
        <definition>typedef double gray64f</definition>
        <argsstring></argsstring>
        <name>gray64f</name>
        <briefdescription>
<para>self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="630" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" prot="public" static="no">
        <type>Matrix&lt; unsigned char, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;unsigned char, 3 , 1&gt; Color3ub</definition>
        <argsstring></argsstring>
        <name>Color3ub</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga1f41bb6772fe8bff45c855c578c739d1" prot="public" static="no">
        <type>Matrix&lt; char, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;char, 3 , 1&gt; Color3b</definition>
        <argsstring></argsstring>
        <name>Color3b</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga3faf989ea1a6b2cae1a3c97e3e7397cb" prot="public" static="no">
        <type>Matrix&lt; unsigned short, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;unsigned short, 3 , 1&gt; Color3us</definition>
        <argsstring></argsstring>
        <name>Color3us</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gabd8ed6efb783441fd8fb924a32c6848b" prot="public" static="no">
        <type>Matrix&lt; short, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;short, 3 , 1&gt; Color3s</definition>
        <argsstring></argsstring>
        <name>Color3s</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga53ce41e9c29c4065135a67d5939d8902" prot="public" static="no">
        <type>Matrix&lt; unsigned int, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;unsigned int, 3 , 1&gt; Color3ui</definition>
        <argsstring></argsstring>
        <name>Color3ui</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gabe1176859fd849a93edd59c687680805" prot="public" static="no">
        <type>Matrix&lt; int, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;int, 3 , 1&gt; Color3i</definition>
        <argsstring></argsstring>
        <name>Color3i</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga4df0906a5f67901886b7d42343632ccb" prot="public" static="no">
        <type>Matrix&lt; float, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;float, 3 , 1&gt; Color3f</definition>
        <argsstring></argsstring>
        <name>Color3f</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gacc3541259f2a9e5b3d0315837435bac1" prot="public" static="no">
        <type>Matrix&lt; double, 3, 1 &gt;</type>
        <definition>typedef Matrix&lt;double, 3 , 1&gt; Color3d</definition>
        <argsstring></argsstring>
        <name>Color3d</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="652" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="652" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gafbaf169ec84e5b80caba534234407e57" prot="public" static="no">
        <type>Matrix&lt; unsigned char, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;unsigned char, 4 , 1&gt; Color4ub</definition>
        <argsstring></argsstring>
        <name>Color4ub</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gae7984ff08c9ba758ce5f27fdc8331fe1" prot="public" static="no">
        <type>Matrix&lt; char, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;char, 4 , 1&gt; Color4b</definition>
        <argsstring></argsstring>
        <name>Color4b</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga94d70f1386e130294e5a45c3523cf72d" prot="public" static="no">
        <type>Matrix&lt; unsigned short, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;unsigned short, 4 , 1&gt; Color4us</definition>
        <argsstring></argsstring>
        <name>Color4us</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga295a200e7f116771de96186c8378b2c0" prot="public" static="no">
        <type>Matrix&lt; short, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;short, 4 , 1&gt; Color4s</definition>
        <argsstring></argsstring>
        <name>Color4s</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga5db95773a1787e4c193bfbc76e841167" prot="public" static="no">
        <type>Matrix&lt; unsigned int, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;unsigned int, 4 , 1&gt; Color4ui</definition>
        <argsstring></argsstring>
        <name>Color4ui</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaaee572369f52480acc39975b3edb55e9" prot="public" static="no">
        <type>Matrix&lt; int, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;int, 4 , 1&gt; Color4i</definition>
        <argsstring></argsstring>
        <name>Color4i</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaabb5f7b4107bd60e746943a8ca73355b" prot="public" static="no">
        <type>Matrix&lt; float, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;float, 4 , 1&gt; Color4f</definition>
        <argsstring></argsstring>
        <name>Color4f</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gad40abe643d03e7a5f11bb292b8c21178" prot="public" static="no">
        <type>Matrix&lt; double, 4, 1 &gt;</type>
        <definition>typedef Matrix&lt;double, 4 , 1&gt; Color4d</definition>
        <argsstring></argsstring>
        <name>Color4d</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>{NumChannels}{ChannelType}. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="653" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="653" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned char, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned char, Rgb &gt; Rgb8</definition>
        <argsstring></argsstring>
        <name>Rgb8</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned short, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned short, Rgb &gt; Rgb16</definition>
        <argsstring></argsstring>
        <name>Rgb16</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned int, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned int, Rgb &gt; Rgb32</definition>
        <argsstring></argsstring>
        <name>Rgb32</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; char, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;char, Rgb &gt; Rgb8s</definition>
        <argsstring></argsstring>
        <name>Rgb8s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gabedfd8c005bd02228e5639062ac29525" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; short, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;short, Rgb &gt; Rgb16s</definition>
        <argsstring></argsstring>
        <name>Rgb16s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; int, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;int, Rgb &gt; Rgb32s</definition>
        <argsstring></argsstring>
        <name>Rgb32s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; float, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;float, Rgb &gt; Rgb32f</definition>
        <argsstring></argsstring>
        <name>Rgb32f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; double, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;</type>
        <definition>typedef Color&lt;double, Rgb &gt; Rgb64f</definition>
        <argsstring></argsstring>
        <name>Rgb64f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="676" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="676" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga7119a80f8b750cdd377aaeed9028bfea" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned char, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned char, Rgba &gt; Rgba8</definition>
        <argsstring></argsstring>
        <name>Rgba8</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga9648566b5bdfdde1dadc13efc912fa43" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned short, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned short, Rgba &gt; Rgba16</definition>
        <argsstring></argsstring>
        <name>Rgba16</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gae7349b0c15e02b6f04e3d6aee358227c" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned int, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned int, Rgba &gt; Rgba32</definition>
        <argsstring></argsstring>
        <name>Rgba32</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga3d7f17a4ee02f29a468f5abb3ce924df" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; char, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;char, Rgba &gt; Rgba8s</definition>
        <argsstring></argsstring>
        <name>Rgba8s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gad1bf3b9bef5965352169d730ade4734f" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; short, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;short, Rgba &gt; Rgba16s</definition>
        <argsstring></argsstring>
        <name>Rgba16s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga1062cb7223f57b1e790edf0fa1b18fb8" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; int, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;int, Rgba &gt; Rgba32s</definition>
        <argsstring></argsstring>
        <name>Rgba32s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gac4b7db1a816348334dc73f5718376b8e" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; float, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;float, Rgba &gt; Rgba32f</definition>
        <argsstring></argsstring>
        <name>Rgba32f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaa91c987c346d85fafb22ea6bf2c0e9af" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; double, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;</type>
        <definition>typedef Color&lt;double, Rgba &gt; Rgba64f</definition>
        <argsstring></argsstring>
        <name>Rgba64f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="677" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="677" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga07003662d3759d488d4a0d0b38de87ed" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned char, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned char, Cmyk &gt; Cmyk8</definition>
        <argsstring></argsstring>
        <name>Cmyk8</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gae1a82a14215508c0a0fcfbe3f7b20af5" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned short, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned short, Cmyk &gt; Cmyk16</definition>
        <argsstring></argsstring>
        <name>Cmyk16</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gab79ce954f12adfadeb2b657c67a1b84c" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned int, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned int, Cmyk &gt; Cmyk32</definition>
        <argsstring></argsstring>
        <name>Cmyk32</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga5c5b775a544ada02f55ed6dbbc032c09" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; char, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;char, Cmyk &gt; Cmyk8s</definition>
        <argsstring></argsstring>
        <name>Cmyk8s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga5cabac67114fed2fb19d5ad7268fc089" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; short, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;short, Cmyk &gt; Cmyk16s</definition>
        <argsstring></argsstring>
        <name>Cmyk16s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gae82588af2628e1cc24e31e9d26060461" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; int, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;int, Cmyk &gt; Cmyk32s</definition>
        <argsstring></argsstring>
        <name>Cmyk32s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga2385155db5bf2b8630c0a44a2a6ac2df" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; float, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;float, Cmyk &gt; Cmyk32f</definition>
        <argsstring></argsstring>
        <name>Cmyk32f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga578705dd9b83fd2613f4aadf25aa5818" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; double, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;</type>
        <definition>typedef Color&lt;double, Cmyk &gt; Cmyk64f</definition>
        <argsstring></argsstring>
        <name>Cmyk64f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="678" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="678" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gadf16bd85687013d18eebb17e9b2cf0af" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned char, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned char, Yuv &gt; Yuv8</definition>
        <argsstring></argsstring>
        <name>Yuv8</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaa26f5270b5ac6ad2611fb6a452c6d907" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned short, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned short, Yuv &gt; Yuv16</definition>
        <argsstring></argsstring>
        <name>Yuv16</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaabd79bd30ae020e6a065eec6cb1677b2" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; unsigned int, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;unsigned int, Yuv &gt; Yuv32</definition>
        <argsstring></argsstring>
        <name>Yuv32</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1gaaff8f245adcf9351e2c5adec71027cd5" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; char, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;char, Yuv &gt; Yuv8s</definition>
        <argsstring></argsstring>
        <name>Yuv8s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga5353986a1fb36e7d31acde633107f35c" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; short, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;short, Yuv &gt; Yuv16s</definition>
        <argsstring></argsstring>
        <name>Yuv16s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga07ba8b667b5773081e4b91e881af38fc" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; int, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;int, Yuv &gt; Yuv32s</definition>
        <argsstring></argsstring>
        <name>Yuv32s</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga6cd60f7afed7dc2a9586688608d2a84c" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; float, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;float, Yuv &gt; Yuv32f</definition>
        <argsstring></argsstring>
        <name>Yuv32f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___color_types_1ga1d6900cbc431a41c4e88c8ce31e78955" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; double, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;</type>
        <definition>typedef Color&lt;double, Yuv &gt; Yuv64f</definition>
        <argsstring></argsstring>
        <name>Yuv64f</name>
        <briefdescription>
<para>{ColorSpace}{BitDepthPerChannel} </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" prot="public" static="no">
        <type>Vector2i</type>
        <definition>typedef Vector2i Point2i</definition>
        <argsstring></argsstring>
        <name>Point2i</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="122" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1ga5242d6757cdeb6dee656cfe31ddd1e51" prot="public" static="no">
        <type>Vector3i</type>
        <definition>typedef Vector3i Point3i</definition>
        <argsstring></argsstring>
        <name>Point3i</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="123" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1ga882df170555d578871ee332dc170dd54" prot="public" static="no">
        <type>Vector4i</type>
        <definition>typedef Vector4i Point4i</definition>
        <argsstring></argsstring>
        <name>Point4i</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="124" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" prot="public" static="no">
        <type>Vector2f</type>
        <definition>typedef Vector2f Point2f</definition>
        <argsstring></argsstring>
        <name>Point2f</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="127" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1gad660f7355dc0f792adc7d7717e9664cb" prot="public" static="no">
        <type>Vector3f</type>
        <definition>typedef Vector3f Point3f</definition>
        <argsstring></argsstring>
        <name>Point3f</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="128" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1gadaa2d084bca437f361ab101860e38a75" prot="public" static="no">
        <type>Vector4f</type>
        <definition>typedef Vector4f Point4f</definition>
        <argsstring></argsstring>
        <name>Point4f</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="129" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" prot="public" static="no">
        <type>Vector2d</type>
        <definition>typedef Vector2d Point2d</definition>
        <argsstring></argsstring>
        <name>Point2d</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="132" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1gaa979df133eaeb0d59bc4c11cc09324d1" prot="public" static="no">
        <type>Vector3d</type>
        <definition>typedef Vector3d Point3d</definition>
        <argsstring></argsstring>
        <name>Point3d</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="133" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="133" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1ga78b225dff8d9416f7c193bff95436d5e" prot="public" static="no">
        <type>Vector4d</type>
        <definition>typedef Vector4d Point4d</definition>
        <argsstring></argsstring>
        <name>Point4d</name>
        <briefdescription>
<para>Self-explanatory. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="134" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1gacf9f5f0db3a36d553c338b4f6b0e108f" prot="public" static="no">
        <type>Matrix&lt; unsigned char, 128, 1 &gt;</type>
        <definition>typedef Matrix&lt;unsigned char, 128, 1&gt; Vector128ub</definition>
        <argsstring></argsstring>
        <name>Vector128ub</name>
        <briefdescription>
<para>128-dimensional integral vector type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="137" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___eigen_typedefs_1ga5af1d2cf882552fe7d1f0f8c673948ad" prot="public" static="no">
        <type>Matrix&lt; float, 128, 1 &gt;</type>
        <definition>typedef Matrix&lt;float, 128, 1&gt; Vector128f</definition>
        <argsstring></argsstring>
        <name>Vector128f</name>
        <briefdescription>
<para>128-dimensional single precision vector type. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="140" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1a4affef069fffabf5d36e0710ee688992" prot="public" static="no">
        <type>std::vector&lt; std::pair&lt; size_t, size_t &gt; &gt;</type>
        <definition>typedef std::vector&lt;std::pair&lt;size_t, size_t&gt; &gt; IndexMatches</definition>
        <argsstring></argsstring>
        <name>IndexMatches</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" line="21" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1a3c8db478f547eea482b5a6925ca044df" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_cone" kindref="compound">Cone</ref>&lt; 2 &gt;</type>
        <definition>typedef Cone&lt;2&gt; Cone2</definition>
        <argsstring></argsstring>
        <name>Cone2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" line="118" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1a870d738025160ff25ff5f7741aa12069" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_cone" kindref="compound">Cone</ref>&lt; 3 &gt;</type>
        <definition>typedef Cone&lt;3&gt; Cone3</definition>
        <argsstring></argsstring>
        <name>Cone3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" line="119" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1a80c39dcc0cd409f0644ed7f7af49aa3f" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_affine_cone" kindref="compound">AffineCone</ref>&lt; 2 &gt;</type>
        <definition>typedef AffineCone&lt;2&gt; AffineCone2</definition>
        <argsstring></argsstring>
        <name>AffineCone2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" line="120" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1a6aeb9394bfda9fb8687fac80c60ef576" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_affine_cone" kindref="compound">AffineCone</ref>&lt; 3 &gt;</type>
        <definition>typedef AffineCone&lt;3&gt; AffineCone3</definition>
        <argsstring></argsstring>
        <name>AffineCone3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" line="121" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1a5a21ac561ec88253897fb5a7bfd7ca7d" prot="public" static="no">
        <type>QGraphicsItem *</type>
        <definition>typedef QGraphicsItem* Item</definition>
        <argsstring></argsstring>
        <name>Item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsViewCommands.hpp" line="22" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsViewCommands.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1adc42f317a433145f1da2c479eea658be" prot="public" static="no">
        <type>QGraphicsPixmapItem *</type>
        <definition>typedef QGraphicsPixmapItem* ImageItem</definition>
        <argsstring></argsstring>
        <name>ImageItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsViewCommands.hpp" line="23" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsViewCommands.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___draw3_d_1gab412213b30248bb6aadf015e4dd4c04e" prot="public" static="no">
        <type>Array&lt; size_t, 3, 1 &gt;</type>
        <definition>typedef Array&lt;size_t, 3, 1&gt; Face3</definition>
        <argsstring></argsstring>
        <name>Face3</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_triangle" kindref="compound">Triangle</ref> face consisting of 3 vertex indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Mesh.hpp" line="31" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Mesh.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___draw3_d_1ga12d54996ef1f128c70f2d7596b93e610" prot="public" static="no">
        <type>Array&lt; size_t, 4, 1 &gt;</type>
        <definition>typedef Array&lt;size_t, 4, 1&gt; Face4</definition>
        <argsstring></argsstring>
        <name>Face4</name>
        <briefdescription>
<para><ref refid="class_d_o_1_1_quad" kindref="compound">Quad</ref> face consisting of 4 vertex indices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Mesh.hpp" line="33" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Mesh.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___draw3_d_1ga545ca8d3fe8778a7a0ba8307d7fd9bf0" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_simple_mesh" kindref="compound">SimpleMesh</ref>&lt; <ref refid="group___eigen_typedefs_1gad660f7355dc0f792adc7d7717e9664cb" kindref="member">Point3f</ref>, <ref refid="group___draw3_d_1gab412213b30248bb6aadf015e4dd4c04e" kindref="member">Face3</ref> &gt;</type>
        <definition>typedef SimpleMesh&lt;Point3f, Face3&gt; SimpleTriangleMesh3f</definition>
        <argsstring></argsstring>
        <name>SimpleTriangleMesh3f</name>
        <briefdescription>
<para>Simple mesh data structure that should be used preferably for OpenGL. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Mesh.hpp" line="90" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Mesh.hpp" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespace_d_o_1a418328ff7ee8d2f5235ab760b9c5a874" prot="public" static="no">
        <type>QWidget *</type>
        <definition>typedef QWidget* Window</definition>
        <argsstring></argsstring>
        <name>Window</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="23" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___primary_colors_1ga3f07e7bf977602effe4d2e20b4b28436" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 Red8(red&lt; unsigned char &gt;())</definition>
        <argsstring>(red&lt; unsigned char &gt;())</argsstring>
        <name>Red8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gae0daacdd8093bcea7ab7a93d09330d0f" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s Red8s(red&lt; char &gt;())</definition>
        <argsstring>(red&lt; char &gt;())</argsstring>
        <name>Red8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gab32f88f8106146d86b172920adf5a403" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 Red16(red&lt; unsigned short &gt;())</definition>
        <argsstring>(red&lt; unsigned short &gt;())</argsstring>
        <name>Red16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaa065a837acc59ab6d296af7439c4355d" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s Red16s(red&lt; short &gt;())</definition>
        <argsstring>(red&lt; short &gt;())</argsstring>
        <name>Red16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga7cf87fc8a9e0d17883968bc92fd740aa" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 Red32(red&lt; unsigned int &gt;())</definition>
        <argsstring>(red&lt; unsigned int &gt;())</argsstring>
        <name>Red32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga12f396a9b393e3c94856b54041934aac" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s Red32s(red&lt; int &gt;())</definition>
        <argsstring>(red&lt; int &gt;())</argsstring>
        <name>Red32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gabaaba4cfd833e047e03b4215f9e5eaed" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f Red32f(red&lt; float &gt;())</definition>
        <argsstring>(red&lt; float &gt;())</argsstring>
        <name>Red32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaffa94c131340d3ccf88bfc519f37a2c6" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f Red64f(red&lt; double &gt;())</definition>
        <argsstring>(red&lt; double &gt;())</argsstring>
        <name>Red64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="771"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga1acc67038a98fae29989b43a8cd792e5" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 Green8(green&lt; unsigned char &gt;())</definition>
        <argsstring>(green&lt; unsigned char &gt;())</argsstring>
        <name>Green8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga692b3541a0136d7cea81f6b72cfbd600" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s Green8s(green&lt; char &gt;())</definition>
        <argsstring>(green&lt; char &gt;())</argsstring>
        <name>Green8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gadc8de4b0f29a2c1f5bd0bfaa1bf0ca06" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 Green16(green&lt; unsigned short &gt;())</definition>
        <argsstring>(green&lt; unsigned short &gt;())</argsstring>
        <name>Green16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaf9d52ad7cd375f81b300695aa8e8ec49" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s Green16s(green&lt; short &gt;())</definition>
        <argsstring>(green&lt; short &gt;())</argsstring>
        <name>Green16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaa95922ce1aaa362929e1fda9e451203f" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 Green32(green&lt; unsigned int &gt;())</definition>
        <argsstring>(green&lt; unsigned int &gt;())</argsstring>
        <name>Green32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga594299db7793fb76b6005da5b14e0f0b" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s Green32s(green&lt; int &gt;())</definition>
        <argsstring>(green&lt; int &gt;())</argsstring>
        <name>Green32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga4ff41245084297b158f1edb21f8fc983" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f Green32f(green&lt; float &gt;())</definition>
        <argsstring>(green&lt; float &gt;())</argsstring>
        <name>Green32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gae8b15a349bc81a9b7a0e80fe118d645f" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f Green64f(green&lt; double &gt;())</definition>
        <argsstring>(green&lt; double &gt;())</argsstring>
        <name>Green64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="772"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gac6a6919089540c8864b76a8086f77593" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 Blue8(blue&lt; unsigned char &gt;())</definition>
        <argsstring>(blue&lt; unsigned char &gt;())</argsstring>
        <name>Blue8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga337cfba761649f338adce54f09cd748b" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s Blue8s(blue&lt; char &gt;())</definition>
        <argsstring>(blue&lt; char &gt;())</argsstring>
        <name>Blue8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaf9d3dd280aee770d9242ef39dfab4b4f" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 Blue16(blue&lt; unsigned short &gt;())</definition>
        <argsstring>(blue&lt; unsigned short &gt;())</argsstring>
        <name>Blue16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga1c194d70f2088366be5d2c8198fbb06f" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s Blue16s(blue&lt; short &gt;())</definition>
        <argsstring>(blue&lt; short &gt;())</argsstring>
        <name>Blue16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga6ae30a297d995a200db3da5ef063d2ab" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 Blue32(blue&lt; unsigned int &gt;())</definition>
        <argsstring>(blue&lt; unsigned int &gt;())</argsstring>
        <name>Blue32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gafe573892c53f718c47b085e76938d4c7" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s Blue32s(blue&lt; int &gt;())</definition>
        <argsstring>(blue&lt; int &gt;())</argsstring>
        <name>Blue32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga20777da7b2c0ea7c12bcddaccf7cd862" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f Blue32f(blue&lt; float &gt;())</definition>
        <argsstring>(blue&lt; float &gt;())</argsstring>
        <name>Blue32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga5ee1a3fcac104fa37c06648fe2ed0b91" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f Blue64f(blue&lt; double &gt;())</definition>
        <argsstring>(blue&lt; double &gt;())</argsstring>
        <name>Blue64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="773"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga2a0f650d2d76d04d5012fe78b6605e3b" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 Cyan8(cyan&lt; unsigned char &gt;())</definition>
        <argsstring>(cyan&lt; unsigned char &gt;())</argsstring>
        <name>Cyan8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga478abd1bda71241ece158980514d2284" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s Cyan8s(cyan&lt; char &gt;())</definition>
        <argsstring>(cyan&lt; char &gt;())</argsstring>
        <name>Cyan8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga36b26bc7bcadf41dec8da694559f138b" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 Cyan16(cyan&lt; unsigned short &gt;())</definition>
        <argsstring>(cyan&lt; unsigned short &gt;())</argsstring>
        <name>Cyan16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gafb6d4a0e35de27b2f598c5fdf5ff7673" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s Cyan16s(cyan&lt; short &gt;())</definition>
        <argsstring>(cyan&lt; short &gt;())</argsstring>
        <name>Cyan16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga2623324e05df7b9448b51359200ddccc" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 Cyan32(cyan&lt; unsigned int &gt;())</definition>
        <argsstring>(cyan&lt; unsigned int &gt;())</argsstring>
        <name>Cyan32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga453129ba2b1378cb5568721d637b5b71" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s Cyan32s(cyan&lt; int &gt;())</definition>
        <argsstring>(cyan&lt; int &gt;())</argsstring>
        <name>Cyan32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gabaf314b3ee2b4ae65c7a354863cbfd6b" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f Cyan32f(cyan&lt; float &gt;())</definition>
        <argsstring>(cyan&lt; float &gt;())</argsstring>
        <name>Cyan32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga353d007048893d08d591e4eaa969b46e" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f Cyan64f(cyan&lt; double &gt;())</definition>
        <argsstring>(cyan&lt; double &gt;())</argsstring>
        <name>Cyan64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="774"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gabb957eb7034b8e56e03cd4faa3f0157a" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 Magenta8(magenta&lt; unsigned char &gt;())</definition>
        <argsstring>(magenta&lt; unsigned char &gt;())</argsstring>
        <name>Magenta8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga3908ec25531764a56fd1664bc01b1a54" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s Magenta8s(magenta&lt; char &gt;())</definition>
        <argsstring>(magenta&lt; char &gt;())</argsstring>
        <name>Magenta8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga963dbf14bea0f779eb3dda07cb027b3b" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 Magenta16(magenta&lt; unsigned short &gt;())</definition>
        <argsstring>(magenta&lt; unsigned short &gt;())</argsstring>
        <name>Magenta16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gad4bfc76a9a3ce390b460b550dc03d950" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s Magenta16s(magenta&lt; short &gt;())</definition>
        <argsstring>(magenta&lt; short &gt;())</argsstring>
        <name>Magenta16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gafa7ef6236c8194c6ec00957f6169b2d0" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 Magenta32(magenta&lt; unsigned int &gt;())</definition>
        <argsstring>(magenta&lt; unsigned int &gt;())</argsstring>
        <name>Magenta32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga71d1b8fc050b2ff201295e759c8414bc" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s Magenta32s(magenta&lt; int &gt;())</definition>
        <argsstring>(magenta&lt; int &gt;())</argsstring>
        <name>Magenta32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga9e1cfbc25293adeaa7c985af8dc13929" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f Magenta32f(magenta&lt; float &gt;())</definition>
        <argsstring>(magenta&lt; float &gt;())</argsstring>
        <name>Magenta32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaa60b75fd0b5fc1fa511e93308bdb67e4" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f Magenta64f(magenta&lt; double &gt;())</definition>
        <argsstring>(magenta&lt; double &gt;())</argsstring>
        <name>Magenta64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="775"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gabc927a59cb47062b7bed719f870a335d" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 Yellow8(yellow&lt; unsigned char &gt;())</definition>
        <argsstring>(yellow&lt; unsigned char &gt;())</argsstring>
        <name>Yellow8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga727cf787d43d7c9830a402d272403450" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s Yellow8s(yellow&lt; char &gt;())</definition>
        <argsstring>(yellow&lt; char &gt;())</argsstring>
        <name>Yellow8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga4bca47a900845600e46649ca7878d080" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 Yellow16(yellow&lt; unsigned short &gt;())</definition>
        <argsstring>(yellow&lt; unsigned short &gt;())</argsstring>
        <name>Yellow16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga6746cbfaacce6d8bd3784dadc6565a35" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s Yellow16s(yellow&lt; short &gt;())</definition>
        <argsstring>(yellow&lt; short &gt;())</argsstring>
        <name>Yellow16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga6f50df87896b60cf3f595738f8f71ed5" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 Yellow32(yellow&lt; unsigned int &gt;())</definition>
        <argsstring>(yellow&lt; unsigned int &gt;())</argsstring>
        <name>Yellow32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gafda747b3ce2a23dbedcd60b246c8963f" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s Yellow32s(yellow&lt; int &gt;())</definition>
        <argsstring>(yellow&lt; int &gt;())</argsstring>
        <name>Yellow32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga69028963fa031abd357693846b4cc0d4" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f Yellow32f(yellow&lt; float &gt;())</definition>
        <argsstring>(yellow&lt; float &gt;())</argsstring>
        <name>Yellow32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga347649a808efdbe4466095a8663e85fd" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f Yellow64f(yellow&lt; double &gt;())</definition>
        <argsstring>(yellow&lt; double &gt;())</argsstring>
        <name>Yellow64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="776"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga2a1d9dded3bfcfad489285c0533c8565" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 Black8(black&lt; unsigned char &gt;())</definition>
        <argsstring>(black&lt; unsigned char &gt;())</argsstring>
        <name>Black8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaed8c3ac856006472dd1a4189e9a58f07" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s Black8s(black&lt; char &gt;())</definition>
        <argsstring>(black&lt; char &gt;())</argsstring>
        <name>Black8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gac00ef9f1197d2417cb30f3aad5878aaa" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 Black16(black&lt; unsigned short &gt;())</definition>
        <argsstring>(black&lt; unsigned short &gt;())</argsstring>
        <name>Black16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga0b670bffa2bec06760670923e33e92b4" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s Black16s(black&lt; short &gt;())</definition>
        <argsstring>(black&lt; short &gt;())</argsstring>
        <name>Black16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga7f55369a8930ca1e5428c9c644035a74" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 Black32(black&lt; unsigned int &gt;())</definition>
        <argsstring>(black&lt; unsigned int &gt;())</argsstring>
        <name>Black32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga17731be1ee8f6db2009ed73956281eea" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s Black32s(black&lt; int &gt;())</definition>
        <argsstring>(black&lt; int &gt;())</argsstring>
        <name>Black32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga7e8acde084a97e61751907b0b3d4e675" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f Black32f(black&lt; float &gt;())</definition>
        <argsstring>(black&lt; float &gt;())</argsstring>
        <name>Black32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gabfe37c60a3af0a0e46e705df031c90ee" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f Black64f(black&lt; double &gt;())</definition>
        <argsstring>(black&lt; double &gt;())</argsstring>
        <name>Black64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="777"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gaaef2f1710463332baea368d7a8244243" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref></type>
        <definition>const Rgb8 White8(white&lt; unsigned char &gt;())</definition>
        <argsstring>(white&lt; unsigned char &gt;())</argsstring>
        <name>White8</name>
        <briefdescription>
<para>Return primary color of type Rgb8. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga2be3104e00bf5359d5d3794cadf4ab20" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gaa096e4d2bffaedbe7f3614578af91109" kindref="member">Rgb8s</ref></type>
        <definition>const Rgb8s White8s(white&lt; char &gt;())</definition>
        <argsstring>(white&lt; char &gt;())</argsstring>
        <name>White8s</name>
        <briefdescription>
<para>Return primary color of type Rgb8s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga91c65aa3023d5dd8c298445eb9660ebc" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga152ca9ec0fcef4d9618c82ddbdd9bf61" kindref="member">Rgb16</ref></type>
        <definition>const Rgb16 White16(white&lt; unsigned short &gt;())</definition>
        <argsstring>(white&lt; unsigned short &gt;())</argsstring>
        <name>White16</name>
        <briefdescription>
<para>Return primary color of type Rgb16. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga96dc78b5ef63b72872a0be12b92f7b24" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gabedfd8c005bd02228e5639062ac29525" kindref="member">Rgb16s</ref></type>
        <definition>const Rgb16s White16s(white&lt; short &gt;())</definition>
        <argsstring>(white&lt; short &gt;())</argsstring>
        <name>White16s</name>
        <briefdescription>
<para>Return primary color of type Rgb16s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga12291c934505e00c8d1bd3bc54247b17" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga579bb6066f763ffc6449c8f50a08e1a8" kindref="member">Rgb32</ref></type>
        <definition>const Rgb32 White32(white&lt; unsigned int &gt;())</definition>
        <argsstring>(white&lt; unsigned int &gt;())</argsstring>
        <name>White32</name>
        <briefdescription>
<para>Return primary color of type Rgb32. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga643cc450dd398a08422d6c5be4680956" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1gad629b7ab363ae148b3373d71fd0cfc56" kindref="member">Rgb32s</ref></type>
        <definition>const Rgb32s White32s(white&lt; int &gt;())</definition>
        <argsstring>(white&lt; int &gt;())</argsstring>
        <name>White32s</name>
        <briefdescription>
<para>Return primary color of type Rgb32s. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1gae7d335f51e9b22c17d909ede91474101" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga869d34729aa0a8429728a14a510d1c66" kindref="member">Rgb32f</ref></type>
        <definition>const Rgb32f White32f(white&lt; float &gt;())</definition>
        <argsstring>(white&lt; float &gt;())</argsstring>
        <name>White32f</name>
        <briefdescription>
<para>Return primary color of type Rgb32f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      <memberdef kind="variable" id="group___primary_colors_1ga472f163bd5521fe28f3d2f9a5c68f5cb" prot="public" static="no" mutable="no">
        <type>const <ref refid="group___color_types_1ga564d3f6442c74e10c56db1b4a6780c1d" kindref="member">Rgb64f</ref></type>
        <definition>const Rgb64f White64f(white&lt; double &gt;())</definition>
        <argsstring>(white&lt; double &gt;())</argsstring>
        <name>White64f</name>
        <briefdescription>
<para>Return primary color of type Rgb64f. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="778"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___channel_accessors_1ga757afabac81c17de47404784d892fd3b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::red</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>red</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="172" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gaeb571624f9083b6e93caa612efbe33d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::red</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>red</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="172" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gae8bbbd63c7f0aab610b1dd591b415519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::green</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>green</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="173" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga5bfc09b28f0f9052e3c133581f6667c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::green</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>green</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="173" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga002fae45c069050f774c897a69e18b39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::blue</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>blue</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="174" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga7f05f0fe577efb6d905528093fbaab0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::blue</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>blue</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="174" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gaa131549883a0aae99914ffe78da0dbcb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::alpha</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>alpha</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="175" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gaedb55300f0a4cfb17d4f281e437e1ac3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::alpha</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>alpha</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="175" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="175" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga47dfa2b4967e6d59132775b062f770be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::cyan</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>cyan</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="177" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gaae689fe2a49dafa645bed231415281be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::cyan</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>cyan</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="177" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="177" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gad0c36c945f72154bacb9dd3339da3eb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::magenta</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>magenta</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="178" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga012dc44d2b56f5688643a355f0737daa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::magenta</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>magenta</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="178" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="178" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga6829ee374a312a1029a0148235540de3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::yellow</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>yellow</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="179" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gac23bd53f11255e8179ab89bf48d050d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::yellow</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>yellow</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="179" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga18f2660186c9e25f69ed6fe2d474752c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::black</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>black</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="180" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gab36760b6e747c3cdcb47643dce670493" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::black</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>black</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="180" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="180" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gac90c52c5b3a7b2a7e3761e6e84f25778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::y</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>y</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="182" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga42846abfe3173fb8a817a0e3a3fa9c44" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::y</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>y</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="182" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="182" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga056f2dcf2b4d1976e50bf20547617584" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::u</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>u</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="183" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1gae90bfcd1e7783b7306b5d1df688f3671" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::u</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>u</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="183" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="183" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga1dd2524c5b8d3db33137eedb803fc2ce" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T&amp; DO::v</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>v</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="184" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group___channel_accessors_1ga11fac27b0966d58ad0e9abdbcf3d71b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T&amp; DO::v</definition>
        <argsstring>(const Color&lt; T, Layout &gt; &amp;c)</argsstring>
        <name>v</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Non-mutable channel accessor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="184" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="184" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga3e86b8eff1da0324f3aee0cef19b7d68" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double DO::getRescaledChannel64f</definition>
        <argsstring>(T value)</argsstring>
        <name>getRescaledChannel64f</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Channel normalization between 0 and 1 in double floating-point precision. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="363" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="362" bodyend="366"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga77f1b557bb4f33fac18948fcd9178dd7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Matrix&lt; double, N, 1 &gt;</type>
        <definition>Matrix&lt;double, N, 1&gt; DO::getRescaledColor64f</definition>
        <argsstring>(const Matrix&lt; T, N, 1 &gt; &amp;color)</argsstring>
        <name>getRescaledColor64f</name>
        <param>
          <type>const Matrix&lt; T, N, 1 &gt; &amp;</type>
          <declname>color</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> normalization between 0 and 1 in double floating-point precision. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="370" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="369" bodyend="374"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaf2f95805ffea57b546cf2547806aae1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::normalizeChannel</definition>
        <argsstring>(T &amp;dst, double src)</argsstring>
        <name>normalizeChannel</name>
        <param>
          <type>T &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Channel rescaling from &apos;double&apos; value in [0,1] to &apos;T&apos; value. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="378" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="377" bodyend="381"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga2d242024d4f8c533e01ffd1f231adf7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::normalizeColor</definition>
        <argsstring>(Matrix&lt; T, N, 1 &gt; &amp;dst, const Matrix&lt; double, N, 1 &gt; &amp;src)</argsstring>
        <name>normalizeColor</name>
        <param>
          <type>Matrix&lt; T, N, 1 &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const Matrix&lt; double, N, 1 &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Channel rescaling from &apos;T&apos; value to &apos;double&apos; value in [0,1]. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="385" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="384" bodyend="390"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga92798e934e6c8e632b4f3d6d24e4f70d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double DO::rgb2gray64f</definition>
        <argsstring>(const Matrix&lt; T, N, 1 &gt; &amp;rgb)</argsstring>
        <name>rgb2gray64f</name>
        <param>
          <type>const Matrix&lt; T, N, 1 &gt; &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
<para>RGB to grayscale color conversion function (includes color normalization). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="396" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="395" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaa88c55b9890d4ec25b7318fb12dbae6a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; double, 3, 1 &gt;</type>
        <definition>Matrix&lt;double, 3, 1&gt; DO::gray2rgb64f</definition>
        <argsstring>(T gray)</argsstring>
        <name>gray2rgb64f</name>
        <param>
          <type>T</type>
          <declname>gray</declname>
        </param>
        <briefdescription>
<para>Grayscale to RGB color conversion function (includes color normalization). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="406" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="405" bodyend="411"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gab873008f62a65b63fea0ff868104b43c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector3d</type>
        <definition>Vector3d DO::rgb2yuv64f</definition>
        <argsstring>(const Matrix&lt; T, 3, 1 &gt; &amp;rgb)</argsstring>
        <name>rgb2yuv64f</name>
        <param>
          <type>const Matrix&lt; T, 3, 1 &gt; &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
<para>RGB to YUV color conversion function (includes color normalization). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="415" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="414" bodyend="420"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga410f9201d95ba7b01b003cf9636e5011" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Vector3d</type>
        <definition>Vector3d DO::yuv2rgb64f</definition>
        <argsstring>(const Matrix&lt; T, 3, 1 &gt; &amp;yuv)</argsstring>
        <name>yuv2rgb64f</name>
        <param>
          <type>const Matrix&lt; T, 3, 1 &gt; &amp;</type>
          <declname>yuv</declname>
        </param>
        <briefdescription>
<para>YUV to RGB color conversion function (includes color normalization). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="424" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="423" bodyend="430"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaaa9282cb999d6cb7301efd2c69b8f921" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::rgb2gray</definition>
        <argsstring>(T &amp;gray, const Matrix&lt; U, 3, 1 &gt; &amp;rgb)</argsstring>
        <name>rgb2gray</name>
        <param>
          <type>T &amp;</type>
          <declname>gray</declname>
        </param>
        <param>
          <type>const Matrix&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, 3, 1 &gt; &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion function from RGB to grayscale. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="436" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="435" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gacf7a6109ede1257816c1157b4d0c1fc1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::gray2rgb</definition>
        <argsstring>(Matrix&lt; T, 3, 1 &gt; &amp;rgb, const U &amp;gray)</argsstring>
        <name>gray2rgb</name>
        <param>
          <type>Matrix&lt; T, 3, 1 &gt; &amp;</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>const <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref> &amp;</type>
          <declname>gray</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from grayscale to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="440" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="439" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gad19806a92d9d3561e4938aa8076519b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::rgb2yuv</definition>
        <argsstring>(Matrix&lt; T, 3, 1 &gt; &amp;yuv, const Matrix&lt; U, 3, 1 &gt; &amp;rgb)</argsstring>
        <name>rgb2yuv</name>
        <param>
          <type>Matrix&lt; T, 3, 1 &gt; &amp;</type>
          <declname>yuv</declname>
        </param>
        <param>
          <type>const Matrix&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, 3, 1 &gt; &amp;</type>
          <declname>rgb</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to YUV. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="444" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="443" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gacd81aedbb5a1d6c2cd01d98da76e0903" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::yuv2rgb</definition>
        <argsstring>(Matrix&lt; T, 3, 1 &gt; &amp;rgb, const Matrix&lt; U, 3, 1 &gt; &amp;yuv)</argsstring>
        <name>yuv2rgb</name>
        <param>
          <type>Matrix&lt; T, 3, 1 &gt; &amp;</type>
          <declname>rgb</declname>
        </param>
        <param>
          <type>const Matrix&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, 3, 1 &gt; &amp;</type>
          <declname>yuv</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from YUV to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="448" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="447" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaf425c8b1868616a6840c61fe4a3e60c7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>typename CLayout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, CLayout &gt; &amp;dst, const Color&lt; U, CLayout &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, CLayout &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, CLayout &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion function with same color layout but different channel types. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="455" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="454" bodyend="455"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga940c39e5cdcff0e182ad7f1911e1fdbb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const Color&lt; U, Yuv &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to YUV. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="459" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="458" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaf208517efbfb2d905bdb2724145383e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Yuv &gt; &amp;dst, const Color&lt; U, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from YUV to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="463" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="462" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga8bec21e5ddb4e45e4a9cc77177feb30c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="476" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="476" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga70fa1352e38ceb42273387b2c0ee7d89" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const unsigned char &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const unsigned char &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="476" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="476" bodyend="476"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga253f94bd10031c80672f611584422eec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="477" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="477" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga1bb67162118039ed9bf615c259585db6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const unsigned short &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const unsigned short &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="477" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="477" bodyend="477"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga571d3219f4feec8072e9f350247ee441" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="478" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="478" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga68961d8e951a087429c39af15d20a340" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const unsigned int &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const unsigned int &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="478" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="478" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga041e47dda16f0e33819de35b60fdff22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="479" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="479" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaef965f101a5d8240f27f144dd810e5fd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const char &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const char &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="479" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="479" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga1e5a93ec87d6a83ace06fdf2db0444b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="480" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="480" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga03d8f2fa5babb6e94d68322054c63f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const short &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const short &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="480" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="480" bodyend="480"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga503b181247cf148267c36db74329c655" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="481" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="481" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gab85cc40825c116643b2bfe8ed890e2b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const int &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="481" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="481" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga63067bbe79b68f1aca280be0751d9245" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="482" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="482" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga9e8d2d7254720f233eed734913c752e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const float &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const float &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="482" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="482" bodyend="482"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gae34a9bddf5dfcceeacb4e19819b7832e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="483" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="483" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaf00036ce1c3287aa68280ca2e865ef14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const double &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from <ref refid="struct_d_o_1_1_gray" kindref="compound">Gray</ref> to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="483" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="483" bodyend="483"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga8aa17d730c8424cb2b906ecd2c88c024" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between floating point gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="488" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="487" bodyend="488"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga4ac1dc80a53cbb26dc57f3e1899a687d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between floating point gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="491" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="490" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga83911520fb12e3f55813ff25458da026" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Just in case, in order to avoid ambiguity for &apos;float&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="494" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="493" bodyend="494"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gae5fae4dc30516ef8840615deb731cc69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Just in case, in order to avoid ambiguity for &apos;double&apos;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="497" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="496" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gad2b653cadac41b0019f2303b036e0746" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, unsigned char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="509" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="509" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaaead31474a1aa5b861f6d88d45f86cd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, unsigned short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="509" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="509" bodyend="509"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaa4f594ca46ffb198f4ad7f3b8b9a582a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, unsigned char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="510" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="510" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga60d4088736f67b538b09433315ee6879" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, unsigned int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="510" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="510" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga5cc07cb428ba7b666f61dbd125f4ee41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, unsigned char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="511" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="511" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga0f17f362473c21034a2b2caa8ad14777" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="511" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="511" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga318cfabad323719b5fbf1064ccc2ada7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, unsigned char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="512" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="512" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga435584c9ded6c1d89df1564de341001a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="512" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="512" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga073572726aea29da4a3a9c7b72e78d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, unsigned char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="513" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="513" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga247be8dc9f226f8d279ef3a120034706" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="513" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="513" bodyend="513"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga9e3b01f6c68fd27748917c7bf7d7e1a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, unsigned short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="515" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="515" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gabd81728ceb038bc5f1008e5def4ef635" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, unsigned int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="515" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="515" bodyend="515"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gabf081cf2eea4ac693fa50d0932ac7051" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, unsigned short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="516" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="516" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaf27092d1a85ecc780eb55c3d11831fd6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="516" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="516" bodyend="516"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gac29fddd8e1085f714b72a5732dcb98d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, unsigned short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="517" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="517" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga0bd51dfb0b71566ae13e30daa8365940" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="517" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="517" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga40d98c46ce039f45429c25a4c072b484" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, unsigned short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="518" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="518" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaea27f4c5800042e64864e07266c84d6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="518" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="518" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga53233da6885dd9b1d48aea8d6bec0a7d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, unsigned int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="520" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="520" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga4ddde7fd2444770a6d9a542fe06b755c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="520" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="520" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gac796fe2ec271f3155da926c5c331d6ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, unsigned int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="521" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="521" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga5ca4961fddc86a7bf67484332737d2e2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="521" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="521" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gadf59d4726cf87acd39d695b14c8a512b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, unsigned int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="522" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="522" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gab2afe610144e20c8e579842e63d0adf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="522" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="522" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga59961090cefe9adc547ee8f618b1b61c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="524" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="524" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga1da3888429ad46ebfc33e6a12f9087e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="524" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="524" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga8ea44f59bd2d681cc210c3066027757e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="525" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="525" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaed95c34a03689a19d0fb4b3402a4f663" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="525" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="525" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga74c347b60b2f8f89d49e8edf95bc256c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="527" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="527" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga2886b206c1b6cdaeb4ca77afef11c49f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral gray colors. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="527" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="527" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga3a5c21f7293924e21ed3638526ecedb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, unsigned char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="549" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="549" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga6bf1e87672a2d3203608ea0d0fd46e70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="549" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="549" bodyend="549"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaedb51c3696783ea65d8304b08902e076" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, unsigned short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="550" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="550" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga764158c67d7e77bea1f6beed73b80c31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="550" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="550" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaad0d2b1e7ef46e4c68dc439b4b08a211" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, unsigned int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="551" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="551" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gada7b0c0ade9aafaad3694fa4131e0690" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="551" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="551" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gae6e303ccb39b66575d4dca9e3cf7f125" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="552" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="552" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga771ff14c748a8b73de71819dadb4d33e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="552" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="552" bodyend="552"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gac0e2de0ed7e83cf04856e237f6562255" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="553" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="553" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga9db0741b322244e6857ed7cfd3360620" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="553" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="553" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gacf105c01bcb8c0fb4fa40c42c61b34c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(float &amp;dst, int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>float &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="554" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="554" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga5b08468b51bbfdf4c1126d01ba7b1228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, float src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>float</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="554" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="554" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaf6d666473f76765857b994a3ae8b2406" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, unsigned char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="556" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="556" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga91a16de0fc35aaba6d0a562c26104187" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned char &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="556" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="556" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga3bd8ec87d8a4e237be941c03ff847c50" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, unsigned short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="557" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="557" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gac72788aa28a3d742d62047738cc2d027" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned short &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="557" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="557" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gafbc9e0994daea4da2c85613ad7fe7a83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, unsigned int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="558" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="558" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga1d03aee3cfe8eba1cf036ef068ebbe43" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(unsigned int &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="558" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="558" bodyend="558"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga13c963adaff605c177e4f4e5827645e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, char src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>char</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="559" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="559" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gafa121f60ad1fdb13a51e65294ec19b33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(char &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>char &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="559" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="559" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga50a8d828c5c4d4fa0acaf3f9660bdf76" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, short src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>short</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="560" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="560" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gadf9e5fe5ca24d599c7aad7752e4f89c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(short &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>short &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="560" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="560" bodyend="560"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gacf7ae24078f1be907709c70a71be6127" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(double &amp;dst, int src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>double &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>int</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="561" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="561" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga86287b233492b328656c5c22f85d0baa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(int &amp;dst, double src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>int &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>double</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion between integral and floating point gray. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="561" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="561" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gaaab01754e98ff497aac007b99ad0beb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const Color&lt; T, Rgba &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGBA to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="567" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="566" bodyend="571"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga563fbc91f3b771db7d5c673f9504ef27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgba &gt; &amp;dst, const Color&lt; T, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to RGBA. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="575" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="574" bodyend="580"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1gad1bbaeff3d1840da0b81db50495174c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgb &gt; &amp;dst, const Color&lt; U, Rgba &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGB to RGBA. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="584" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="583" bodyend="588"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga2bc5f600c5a79f984147685a58f117c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(Color&lt; T, Rgba &gt; &amp;dst, const Color&lt; U, Rgb &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGBA to RGB. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="592" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="591" bodyend="597"/>
      </memberdef>
      <memberdef kind="function" id="group___color_conversion_1ga65c035a4dc772c69aabde8d11a3de8f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convertColor</definition>
        <argsstring>(T &amp;gray, const Color&lt; U, Rgba &gt; &amp;src)</argsstring>
        <name>convertColor</name>
        <param>
          <type>T &amp;</type>
          <declname>gray</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref> conversion from RGBA to unsigned char. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="601" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="600" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1gadc4ed12abc0d5a541d12226cb1b4aff3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::white</definition>
        <argsstring>()</argsstring>
        <name>white</name>
        <briefdescription>
<para>White color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="689" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="688" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1ga80b0871f1549bb1f83903fc572b0b6ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::black</definition>
        <argsstring>()</argsstring>
        <name>black</name>
        <briefdescription>
<para>Black color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="697" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="696" bodyend="702"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1gab84f59703c6ed9af4ad0a3a22fbc7dde" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::red</definition>
        <argsstring>()</argsstring>
        <name>red</name>
        <briefdescription>
<para>Red color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="705" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="704" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1ga3636f495be874a77dcb70d98f6601abc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::green</definition>
        <argsstring>()</argsstring>
        <name>green</name>
        <briefdescription>
<para>Green color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="713" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="712" bodyend="718"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1ga854c3a582fd097c73469f89b73e63915" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::blue</definition>
        <argsstring>()</argsstring>
        <name>blue</name>
        <briefdescription>
<para>Blue color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="721" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="720" bodyend="726"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1gac171b7ffb96afd731cdb154a9eb41f1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::cyan</definition>
        <argsstring>()</argsstring>
        <name>cyan</name>
        <briefdescription>
<para>Cyan color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="729" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="728" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1ga03c463032ad2ac98a3661c1801fea9cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::yellow</definition>
        <argsstring>()</argsstring>
        <name>yellow</name>
        <briefdescription>
<para>Yellow color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="737" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="736" bodyend="742"/>
      </memberdef>
      <memberdef kind="function" id="group___primary_colors_1gadfcf6ebbbe83635103749fc438e1b4a0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 1 &gt;</type>
        <definition>Matrix&lt;T, 3, 1&gt; DO::magenta</definition>
        <argsstring>()</argsstring>
        <name>magenta</name>
        <briefdescription>
<para>Magenta color function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="745" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" bodystart="744" bodyend="750"/>
      </memberdef>
      <memberdef kind="function" id="group___utility_1gaec63207d40454271e3d0e42802dbb73e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::printStage</definition>
        <argsstring>(const std::string &amp;stageName)</argsstring>
        <name>printStage</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>stageName</declname>
        </param>
        <briefdescription>
<para>Outputting program stage description on console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/DebugUtilities.hpp" line="26" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/DebugUtilities.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="group___utility_1ga553a39cfa65861e30418250dfba7417c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::waitReturnKey</definition>
        <argsstring>()</argsstring>
        <name>waitReturnKey</name>
        <briefdescription>
<para>Wait for return key on the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/DebugUtilities.hpp" line="35" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/DebugUtilities.hpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="group___eigen_typedefs_1gaa5f91dc56407c46af18c9f6d478082c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>std::istream &amp;</type>
        <definition>std::istream&amp; DO::operator&gt;&gt;</definition>
        <argsstring>(std::istream &amp;in, Eigen::MatrixBase&lt; Derived &gt; &amp;matrix)</argsstring>
        <name>operator&gt;&gt;</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type>Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <briefdescription>
<para>I/O. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="145" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group___eigen_typedefs_1gac912aeec3438e2c9e82c38ebc38fd804" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Derived</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::lexCompare</definition>
        <argsstring>(const Eigen::MatrixBase&lt; Derived &gt; &amp;m1, const Eigen::MatrixBase&lt; Derived &gt; &amp;m2)</argsstring>
        <name>lexCompare</name>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const Eigen::MatrixBase&lt; Derived &gt; &amp;</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
<para>Lexicographical comparison function for matrices. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" line="156" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/EigenExtension.hpp" bodystart="154" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga4e5c520a37ac3ab27aa74f10d3c47b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void convert</definition>
        <argsstring>(Image&lt; T, N &gt; &amp;dst, const Image&lt; U, N &gt; &amp;src)</argsstring>
        <name>convert</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="struct_d_o_1_1_u" kindref="compound">U</ref>, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Helper function for color conversion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="49" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga6ca7c2968f16fe642348e58d2d72c3d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1gaad92fea51e98e11252ac86f2c8665d13" kindref="member">Rgb</ref> &gt;, Rgb::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Rgb &gt;, Rgb ::size&gt; DO::asRgbImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Rgb::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asRgbImage</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_multi_array" kindref="compound">MultiArray</ref>&lt; Matrix&lt; T, 3, 1 &gt;, Rgb::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="136" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga4392375bc20250c8f8cf6c571ab3e5c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1ga52ed562e9155b12e5395633a01476810" kindref="member">Rgba</ref> &gt;, Rgba::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Rgba &gt;, Rgba ::size&gt; DO::asRgbaImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Rgba::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asRgbaImage</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_multi_array" kindref="compound">MultiArray</ref>&lt; Matrix&lt; T, 3, 1 &gt;, Rgba::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="137" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga03047b50e8796b06624fbd45ac3c46ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1ga3d376efd2059bb15b8fd696946e051ff" kindref="member">Cmyk</ref> &gt;, Cmyk::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Cmyk &gt;, Cmyk ::size&gt; DO::asCmykImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Cmyk::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asCmykImage</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_multi_array" kindref="compound">MultiArray</ref>&lt; Matrix&lt; T, 3, 1 &gt;, Cmyk::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="138" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gac9273f843fb0d04b3be0c254e920896b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, <ref refid="group___color_space_1ga8d04b5aa0ecd455aa29da0987b106ad0" kindref="member">Yuv</ref> &gt;, Yuv::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Yuv &gt;, Yuv ::size&gt; DO::asYuvImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Yuv::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asYuvImage</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_multi_array" kindref="compound">MultiArray</ref>&lt; Matrix&lt; T, 3, 1 &gt;, Yuv::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="139" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga21de6940367133734d08916371bdf437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;min, Color&lt; T, Layout &gt; &amp;max, const Image&lt; Color&lt; T, Layout &gt;, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type><ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt;, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max pixel values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="188" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="186" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga79e5852d1e9a85c8cfb247699e811591" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(unsigned char &amp;min, unsigned char &amp;max, const Image&lt; unsigned char, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned char &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="216" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae77f9fc828bccd7a66f092b5f0a9b5d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(char &amp;min, char &amp;max, const Image&lt; char, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>char &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="217" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga07c9523d912baa0152f001e5613d1b40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(unsigned short &amp;min, unsigned short &amp;max, const Image&lt; unsigned short, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned short &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="218" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga12e66e7dfc90903cf9cda77e1ee9caa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(short &amp;min, short &amp;max, const Image&lt; short, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>short &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>short &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="219" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gab1e882348bd53acd83f60a913c7dfe5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(unsigned int &amp;min, unsigned int &amp;max, const Image&lt; unsigned int, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="220" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae75301dfe4245689d6552204da1bac7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(int &amp;min, int &amp;max, const Image&lt; int, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>int &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="221" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga0573e8647b615d0698ef000b5f013766" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(float &amp;min, float &amp;max, const Image&lt; float, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="222" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga7b3472d8bf6ea05fb0c39ba0e380a924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(double &amp;min, double &amp;max, const Image&lt; double, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>double &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; double, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="223" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae3e29da826156e86b948cc0fda4d6e4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt;, N &gt;</type>
        <definition>Image&lt;Color&lt;T,Layout&gt;, N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; Color&lt; T, Layout &gt;, N &gt; &amp;src, const Color&lt; T, Layout &gt; &amp;a=black&lt; T &gt;(), const Color&lt; T, Layout &gt; &amp;b=white&lt; T &gt;())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt;, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>a</declname>
          <defval><ref refid="group___channel_accessors_1ga18f2660186c9e25f69ed6fe2d474752c" kindref="member">black</ref>&lt; T &gt;()</defval>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_color" kindref="compound">Color</ref>&lt; T, Layout &gt; &amp;</type>
          <declname>b</declname>
          <defval><ref refid="group___primary_colors_1gadc4ed12abc0d5a541d12226cb1b4aff3" kindref="member">white</ref>&lt; T &gt;()</defval>
        </param>
        <briefdescription>
<para>color rescaling function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="235" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="231" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga1475fcd1a5a00c060a5f8f0adaaf379a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned char, N &gt;</type>
        <definition>Image&lt; unsigned char , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; unsigned char, N &gt; &amp;src, unsigned char a=ColorTraits&lt; unsigned char &gt;::min(), unsigned char b=ColorTraits&lt; unsigned char &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; unsigned char &gt;::min()</defval>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; unsigned char &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="294" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gade813affccdcbf8455a9ff56245a33f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; char, N &gt;</type>
        <definition>Image&lt; char , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; char, N &gt; &amp;src, char a=ColorTraits&lt; char &gt;::min(), char b=ColorTraits&lt; char &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; char &gt;::min()</defval>
        </param>
        <param>
          <type>char</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; char &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="295" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga9c737e1c128747f5e81889809f427e26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned short, N &gt;</type>
        <definition>Image&lt; unsigned short , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; unsigned short, N &gt; &amp;src, unsigned short a=ColorTraits&lt; unsigned short &gt;::min(), unsigned short b=ColorTraits&lt; unsigned short &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; unsigned short &gt;::min()</defval>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; unsigned short &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="296" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gad1637ce411303db7d9633a8227bdcdaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; short, N &gt;</type>
        <definition>Image&lt; short , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; short, N &gt; &amp;src, short a=ColorTraits&lt; short &gt;::min(), short b=ColorTraits&lt; short &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>short</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; short &gt;::min()</defval>
        </param>
        <param>
          <type>short</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; short &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="297" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga0d97fd312976e5f0b19fe3a7f61ccc8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned int, N &gt;</type>
        <definition>Image&lt; unsigned int , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; unsigned int, N &gt; &amp;src, unsigned int a=ColorTraits&lt; unsigned int &gt;::min(), unsigned int b=ColorTraits&lt; unsigned int &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; unsigned int &gt;::min()</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; unsigned int &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="298" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gac3b1da175cc8d5ec00abf01554aba92a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; int, N &gt;</type>
        <definition>Image&lt; int , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; int, N &gt; &amp;src, int a=ColorTraits&lt; int &gt;::min(), int b=ColorTraits&lt; int &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; int &gt;::min()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; int &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="299" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae3dde5569ec14946867c7b62b3062956" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float, N &gt;</type>
        <definition>Image&lt; float , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; float, N &gt; &amp;src, float a=ColorTraits&lt; float &gt;::min(), float b=ColorTraits&lt; float &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; float &gt;::min()</defval>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; float &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="300" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="300" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga0d96ddd420fb39361b01256716c2c776" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; double, N &gt;</type>
        <definition>Image&lt; double , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; double, N &gt; &amp;src, double a=ColorTraits&lt; double &gt;::min(), double b=ColorTraits&lt; double &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; double, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; double &gt;::min()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; double &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="301" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="group___multi_array_1ga9223155c64483239f48caab75fc0557d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>int</type>
            <declname>StorageOrder</declname>
            <defname>StorageOrder</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; DO::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const MultiArray&lt; T, N, StorageOrder &gt; &amp;M)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_multi_array" kindref="compound">MultiArray</ref>&lt; T, N, StorageOrder &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>output stream operator </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp" line="486" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp" bodystart="484" bodyend="490"/>
      </memberdef>
      <memberdef kind="function" id="group___utility_1ga822e83b6eef265d4189aca150f0821db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::string</type>
        <definition>std::string DO::toString</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>toString</name>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>stringifying function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Stringify.hpp" line="26" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Stringify.hpp" bodystart="25" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a9fc7b66793f44d9fb1d9321341995e9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T, N&gt; DO::getImagePatch</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;src, const Matrix&lt; int, N, 1 &gt; &amp;a, const Matrix&lt; int, N, 1 &gt; &amp;b)</argsstring>
        <name>getImagePatch</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const Matrix&lt; int, N, 1 &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Matrix&lt; int, N, 1 &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp" line="26" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp" bodystart="23" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a9f05a7d8cf43ea9c19f0019f5a125254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::getImagePatch</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src, int x, int y, int w, int h)</argsstring>
        <name>getImagePatch</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp" line="43" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp" bodystart="42" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ad1da29979f8c29f425924c86d5a0d0c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::getImagePatch</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src, int x, int y, int r)</argsstring>
        <name>getImagePatch</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp" line="63" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="group___tree_1ga0fe2d80d493a2cd0387521078c7bb6af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::saveTree</definition>
        <argsstring>(const Tree&lt; T &gt; &amp;tree, const std::string &amp;name)</argsstring>
        <name>saveTree</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_tree" kindref="compound">Tree</ref>&lt; T &gt; &amp;</type>
          <declname>tree</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Save the tree content in GraphViz format. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="799" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="798" bodyend="827"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1ga06c2229537756ea076538c1b68395771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, 2, 1 &gt; &gt;</type>
        <definition>Image&lt;Matrix&lt;T,2,1&gt; &gt; DO::gradPolar</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I)</argsstring>
        <name>gradPolar</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Computes the image gradients of image <formula id="0">$I$</formula> in polar coordinates. </para>        </briefdescription>
        <detaileddescription>
<para>In each pixel <formula id="1">$(x,y) \in [0,w[ \times [0,h[$</formula>, <formula id="2">$\nabla I(x,y)$</formula> is the 2D vector <formula id="3">$(r,\theta)$</formula> where:<itemizedlist>
<listitem><para><formula id="4">$r = 2 ||\nabla I(x,y)||$</formula>,</para></listitem><listitem><para><formula id="5">$\theta = \mathrm{angle}( \nabla I(x,y) )$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="35" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1ga0bacda5f679951ea8e9ef8a0218d7fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; Matrix&lt; T, 2, 1 &gt; &gt;</type>
        <definition>ImagePyramid&lt;Matrix&lt;T, 2, 1&gt; &gt; DO::gradPolar</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;pyramid)</argsstring>
        <name>gradPolar</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>pyramid</declname>
        </param>
        <briefdescription>
<para>Computes the image gradients in polar coordinates for each image in the pyramid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="53" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="52" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1ga43d03e35ef7443adcbb1a68da2cc8257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::computeOrientationHistogram</definition>
        <argsstring>(Array&lt; T, N, 1 &gt; &amp;oriHist, const Image&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;gradPolar, T x, T y, T s, int patchTruncationFactor=3, T blurFactor=T(1.5))</argsstring>
        <name>computeOrientationHistogram</name>
        <param>
          <type>Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;</type>
          <declname>gradPolar</declname>
        </param>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>patchTruncationFactor</declname>
          <defval>3</defval>
        </param>
        <param>
          <type>T</type>
          <declname>blurFactor</declname>
          <defval>T(1.5)</defval>
        </param>
        <briefdescription>
<para>Computes the orientation histogram on a local patch around keypoint <formula id="6">$(x,y,\sigma)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="78" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="73" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1gaaf9d0a78501d3564f4b2e810456d593f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::smoothHistogram_Lowe</definition>
        <argsstring>(Array&lt; T, N, 1 &gt; &amp;oriHist)</argsstring>
        <name>smoothHistogram_Lowe</name>
        <param>
          <type>Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <briefdescription>
<para>This is used in [Lowe, IJCV 2004] to determine keypoint orientations. </para>        </briefdescription>
        <detaileddescription>
<para>Basically, the histogram is convolved 6 times with the mean kernel <formula id="7">$[1/3, 1/3, 1/3]$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="139" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="138" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1ga2aba4146d01599ac78b27ca5da991ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; DO::findPeaks</definition>
        <argsstring>(const Array&lt; T, N, 1 &gt; &amp;oriHist, T peakRatioThres=T(0.8))</argsstring>
        <name>findPeaks</name>
        <param>
          <type>const Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>T</type>
          <declname>peakRatioThres</declname>
          <defval>T(0.8)</defval>
        </param>
        <briefdescription>
<para>This is used in [Lowe, IJCV 2004] to find histogram peaks. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_d_o_1_1_a" kindref="compound">A</ref> histogram peak is by definition the index <formula id="8">$i$</formula> such that:<itemizedlist>
<listitem><para><formula id="9">$h_{i} &gt; h_{i+1}$</formula></para></listitem><listitem><para><formula id="10">$h_{i} &gt; h_{i-1}$</formula></para></listitem></itemizedlist>
</para><para>Only histogram peaks <formula id="8">$i$</formula> such that <formula id="11">$h_i \geq 0.8 \max_j h_j$</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="166" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1gae0bc7b7c7c79abdf62be048d42128d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T DO::refinePeak</definition>
        <argsstring>(const Array&lt; T, N, 1 &gt; &amp;oriHist, int i)</argsstring>
        <name>refinePeak</name>
        <param>
          <type>const Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Refine peaks as in [Lowe, IJCV 2004] by interpolation based on a second-order Taylor approximation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="183" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="182" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1gac90fa42c4655be0a466a257fa8e23405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; DO::refinePeaks</definition>
        <argsstring>(const Array&lt; T, N, 1 &gt; &amp;oriHist, const std::vector&lt; int &gt; &amp;ori)</argsstring>
        <name>refinePeaks</name>
        <param>
          <type>const Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>ori</declname>
        </param>
        <briefdescription>
<para>Helper functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="205" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="203" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="group___a_n_m_s_1gaebf6724613bb6b75e5c0b6bcefb3253b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::pair&lt; size_t, float &gt; &gt;</type>
        <definition>std::vector&lt;std::pair&lt;size_t, float&gt; &gt; DO::adaptiveNonMaximalSuppression</definition>
        <argsstring>(const std::vector&lt; OERegion &gt; &amp;features, float c_robust=0.9f)</argsstring>
        <name>adaptiveNonMaximalSuppression</name>
        <param>
          <type>const std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt; &amp;</type>
          <declname>features</declname>
        </param>
        <param>
          <type>float</type>
          <declname>c_robust</declname>
          <defval>0.9f</defval>
        </param>
        <briefdescription>
<para>Adaptive non maximal suppression algorithm (cf. [Multi-Image Matching using Multi-Scale Oriented Patches, Brown et al., CVPR 2005]). </para>        </briefdescription>
        <detaileddescription>
<para>This is the naive implementation which is quadratic in the number of features. Because of its complexity, it does not scale well.</para><para>Adaptive non maximal suppression is presented for the first time in: [Multi-Image Matching using Multi-Scale Oriented Patches, Brown et al., CVPR 2005]. It aims at discarding feature points so that the remaining features:<itemizedlist>
<listitem><para>are as evenly spaced as possible;</para></listitem><listitem><para>are among the most distinctive set of points.</para></listitem></itemizedlist>
</para><para>Let <formula id="12">$(f_i)_{1 \leq i \leq N}$</formula> be the set of feature points to filter. In the sequel, we denote:<itemizedlist>
<listitem><para>by <formula id="13">$\mathbf{x}_i$</formula> the position of feature <formula id="14">$f_i$</formula>,</para></listitem><listitem><para>by <formula id="15">$v_i$</formula> the strength value of feature point <formula id="14">$f_i$</formula>.</para></listitem></itemizedlist>
</para><para>For example, in the case of the Harris-Stephens corners, <formula id="15">$v_i$</formula> are local maximum values of the Harris-Stephens cornerness function.</para><para>Specifically, the function computes for each feature <formula id="14">$f_i$</formula> the suppression radius defined as: <formula id="16">\[ r_i = \min_{j \in I_i} \| \mathbf{x}_i - \mathbf{x}_j \|_2 \]</formula> where <formula id="17">$I_i$</formula> is the set of feature points <formula id="18">$f_j$</formula> with values <formula id="19">$v_j$</formula> stronger than value <formula id="15">$v_i$</formula> of feature <formula id="14">$f_i$</formula>, i.e., <formula id="20">\[ I_i = \{ j \in \{1,\dots, n\} \mid v_i &lt; c_\textrm{robust} v_j \}. \]</formula></para><para>Note that <formula id="17">$I_i$</formula> can be empty, and in that then we set <formula id="21">$r_i = \infty$</formula>.</para><para>The intuition is the following. If <formula id="14">$f_i$</formula> is close to stronger features <formula id="18">$f_j$</formula> and has a value <formula id="15">$v_i$</formula> much lower than their values <formula id="19">$v_j$</formula>, then <formula id="14">$f_i$</formula> should be suppressed. It is indeed reflected by the fact that its suppression radius <formula id="22">$r_i$</formula> is smaller than those of stronger features.</para><para>The adaptive non maximal suprression sorts feature points by suppression radius and so that we can keep those with the highest supression radius. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/AdaptiveNonMaximalSuppression.hpp" line="72"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1ga338e614ac0341d482a9dbd1c8cf666ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int DO::intRound</definition>
        <argsstring>(T x)</argsstring>
        <name>intRound</name>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="26" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1ga983fc1860d13c14a113eb7ad3743b2e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::displayImagePyramid</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;pyramid, bool rescale=false)</argsstring>
        <name>displayImagePyramid</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>pyramid</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rescale</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="32" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" bodystart="30" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1gafccf08391e381820ebc2d066422d6b65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawScaleSpaceExtremum</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;I, float x, float y, float s, int o, const Rgb8 &amp;c)</argsstring>
        <name>drawScaleSpaceExtremum</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="55"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1gab1e1e2e86a0d6b4aee70eb5806f7c701" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawExtrema</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;pyramid, const std::vector&lt; OERegion &gt; &amp;extrema, int s, int o, bool rescaleColor=true)</argsstring>
        <name>drawExtrema</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>pyramid</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt; &amp;</type>
          <declname>extrema</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>rescaleColor</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="59"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1ga0217ef1997af10c1850e869057953cab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::highlightPatch</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;D, float x, float y, float s, int o)</argsstring>
        <name>highlightPatch</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>D</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="62"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1ga8d98fd5640702e7e4d4764b2825abc10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::checkPatch</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, int x, int y, int w, int h, double fact=50.)</argsstring>
        <name>checkPatch</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>50.</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="65"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1ga6a1b6354b6bf5e63c596c70f6eee9561" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::checkPatch</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, float x, float y, float s, double fact=20.)</argsstring>
        <name>checkPatch</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>s</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>20.</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="68"/>
      </memberdef>
      <memberdef kind="function" id="group___utilities_debug_1ga37dd6339918db2bbbae6e496b482fa45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::viewHistogram</definition>
        <argsstring>(const Array&lt; T, N, 1 &gt; &amp;histogram)</argsstring>
        <name>viewHistogram</name>
        <param>
          <type>const Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>histogram</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" line="72" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/Debug.hpp" bodystart="71" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1gadb49f79daf3b221e16bc44e68377e14b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::onEdge</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, int x, int y, float edgeRatio=10.f)</argsstring>
        <name>onEdge</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>float</type>
          <declname>edgeRatio</declname>
          <defval>10.f</defval>
        </param>
        <briefdescription>
<para>Test based on Harris-Stephens&apos; idea on corner detection. Basically the <ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix <formula id="30">$\mathbf{H}$</formula> is estimated by finite differentiation. </para>        </briefdescription>
        <detaileddescription>
<para><formula id="50">$(x,y)$</formula> is on an edge if the <ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix <formula id="30">$\mathbf{H}$</formula> satisfies the following criterion <formula id="53">$ \frac{\mathrm{det}(\mathbf{H})}{\mathrm{tr}(\mathbf{H})} &gt; \frac{(r+1)^2}{r} $</formula>, where <formula id="32">$r$</formula> is the ratio between the eigenvalues of <formula id="30">$\mathbf{H}$</formula> and corresponds to the variable <bold>edgeRatio</bold>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="39"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1ga2f13bba1b141af45dbf3e71aed91016c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::refineExtremum</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;I, int x, int y, int s, int o, int type, Point3f &amp;pos, float &amp;val, int borderSz=1, int numIter=5)</argsstring>
        <name>refineExtremum</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="group___eigen_typedefs_1gad660f7355dc0f792adc7d7717e9664cb" kindref="member">Point3f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>borderSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>numIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Extremum position refinement in scale-space based on Newton&apos;s method. (cf. [Lowe, IJCV 2004] and [Brown and Lowe, BMVC 2002]). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>the input gaussian pyramid </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
</parameternamelist>
<parameterdescription>
<para>integral x-coordinate of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>integral y-coordinate of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">s</parametername>
</parameternamelist>
<parameterdescription>
<para>scale index of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">o</parametername>
</parameternamelist>
<parameterdescription>
<para>octave index of the extrema </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">imgPaddingSz</parametername>
</parameternamelist>
<parameterdescription>
<para>This variable indicates the minimum border size of the image. DoG extrema that ends being located the border are not refined anymore. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">numIter</parametername>
</parameternamelist>
<parameterdescription>
<para>This variable controls the number of iterations to refine the localization of DoG extrema in scale-space. The refinement process is based on the function <bold><ref refid="group___extremum_refinement_1ga2f13bba1b141af45dbf3e71aed91016c" kindref="member">DO::refineExtremum()</ref></bold>.</para></parameterdescription>
</parameteritem>
</parameterlist>
Let <formula id="54">$D : \mathbf{R}^3 \mapsto \mathbf{R}$</formula> be the difference of gaussian function and <formula id="6">$(x,y,\sigma)$</formula> be the approximate position of a local extremum of <formula id="55">$D$</formula>.</para><para>If <formula id="6">$(x,y,\sigma)$</formula> is the current guess of the local extremum, the refinement procedure seeks to minimize the following objective function iteratively: <formula id="56">\begin{eqnarray*} \mathrm{minimize}_{\mathbf{h}} D(\mathbf{x}) + D&apos;(\mathbf{x})^T \mathbf{h} + 1/2 \mathbf{h}^T D&apos;&apos;(\mathbf{x}) \mathbf{h}^T . \end{eqnarray*}</formula> In practice the gradient vector <formula id="57">$D&apos;(\mathbf{x})$</formula> and hessian matrix <formula id="58">$D&apos;&apos;(\mathbf{x})$</formula> are approximated by finite difference and one must check that the hessian matrix <formula id="58">$D&apos;&apos;(\mathbf{x})$</formula> is indeed <bold>positive-definite</bold>.</para><para>Likewise, if <formula id="59">$\mathbf{x}$</formula> is a minimum, then one must check that <formula id="58">$D&apos;&apos;(\mathbf{x})$</formula> is <bold>negative-definite</bold>.</para><para>Otherwise, we cannot refine the position of the extremum. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="83"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1gab6da4ded8646087ff6e1cf58157d6cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::refineExtremum</definition>
        <argsstring>(const Image&lt; float &gt; &amp;I, int x, int y, int type, Point2f &amp;pos, float &amp;val, int borderSz=1, int numIter=5)</argsstring>
        <name>refineExtremum</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>borderSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>numIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>This function refines the coordinates using the interpolation method in [Lowe, IJCV 2004] and [Brown and Lowe, BMVC 2002]. </para>        </briefdescription>
        <detaileddescription>
<para>It refines the spatial coordinates <formula id="50">$(x,y)$</formula>. However, there is no scale refinement here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="93"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1ga4e83483885aa6a6547d0979be3e0a5da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt;</type>
        <definition>std::vector&lt;OERegion&gt; DO::localScaleSpaceExtrema</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;I, int s, int o, float extremumThres=0.03f, float edgeRatioThres=10.f, int imgPaddingSz=1, int refineIter=5)</argsstring>
        <name>localScaleSpaceExtrema</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>float</type>
          <declname>extremumThres</declname>
          <defval>0.03f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>edgeRatioThres</declname>
          <defval>10.f</defval>
        </param>
        <param>
          <type>int</type>
          <declname>imgPaddingSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>refineIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Localizes all local extrema in scale-space at scale <formula id="60">$\sigma = 2^{s/S+o}$</formula>. Note that the default parameters are suited for the DoG extrema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="104"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1gabc46898f322e4612b3b5a13fda0b87c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::selectLaplaceScale</definition>
        <argsstring>(float &amp;scale, int x, int y, int s, int o, const ImagePyramid&lt; float &gt; &amp;gaussPyramid, int numScales=10)</argsstring>
        <name>selectLaplaceScale</name>
        <param>
          <type>float &amp;</type>
          <declname>scale</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>gaussPyramid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numScales</declname>
          <defval>10</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scale selection based on the normalized <ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> of Gaussians for the simplified Harris-Laplace and Hessian-Laplace interest points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="113"/>
      </memberdef>
      <memberdef kind="function" id="group___extremum_refinement_1ga7757b0f353fb42a7cc585486083a8d01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_d_o_1_1_o_e_region" kindref="compound">OERegion</ref> &gt;</type>
        <definition>std::vector&lt;OERegion&gt; DO::laplaceMaxima</definition>
        <argsstring>(const ImagePyramid&lt; float &gt; &amp;function, const ImagePyramid&lt; float &gt; &amp;gaussPyramid, int s, int o, float extremumThres=1e-6f, float imgPaddingSz=1, float numScales=10, int refineIter=5)</argsstring>
        <name>laplaceMaxima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; float &gt; &amp;</type>
          <declname>gaussPyramid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <param>
          <type>float</type>
          <declname>extremumThres</declname>
          <defval>1e-6f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>imgPaddingSz</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>float</type>
          <declname>numScales</declname>
          <defval>10</defval>
        </param>
        <param>
          <type>int</type>
          <declname>refineIter</declname>
          <defval>5</defval>
        </param>
        <briefdescription>
<para>Localizes local maxima in space only and tries to assign a characteristic scale to each local maximum from the normalized <ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> of Gaussians operator. </para>        </briefdescription>
        <detaileddescription>
<para>This is mainly intended for Harris-Laplace and Hessian-Laplace interest points. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors/RefineExtremum.hpp" line="129"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a53ca047878b903f34bbc8d8f3eb5a0a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::createFolder</definition>
        <argsstring>(const std::string &amp;folder)</argsstring>
        <name>createFolder</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>folder</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" line="23"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a15a6c9a576f0d65075b9fdf0fcd65876" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::copyFile</definition>
        <argsstring>(const std::string &amp;from, const std::string &amp;to)</argsstring>
        <name>copyFile</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>from</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>to</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" line="25"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1af78256db7e501f14b4a8fe578a8a6fa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DO::getParentFolder</definition>
        <argsstring>(const std::string &amp;filepath)</argsstring>
        <name>getParentFolder</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filepath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" line="27"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a3856c27ac11499d1df4f7125fe15b966" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string DO::getBasename</definition>
        <argsstring>(const std::string &amp;filepath)</argsstring>
        <name>getBasename</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>filepath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" line="29"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1afd49a23d3d1c49327d550ca241aefaad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::getFilePaths</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;filePaths, const std::string &amp;folder, const std::string &amp;wildcard, bool verbose=true)</argsstring>
        <name>getFilePaths</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>filePaths</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>wildcard</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" line="34"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a7642a8fc6027e4534b091d55b07a69a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::getImageFilePaths</definition>
        <argsstring>(std::vector&lt; std::string &gt; &amp;filePaths, const std::string &amp;folder, bool verbose=true)</argsstring>
        <name>getImageFilePaths</name>
        <param>
          <type>std::vector&lt; std::string &gt; &amp;</type>
          <declname>filePaths</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>folder</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FileSystem/FileSystem.hpp" line="38"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a2600da1796df1d111b993d5072363e36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt;</type>
        <definition>std::vector&lt;Point2d&gt; DO::grahamScanConvexHull</definition>
        <argsstring>(const std::vector&lt; Point2d &gt; &amp;points)</argsstring>
        <name>grahamScanConvexHull</name>
        <param>
          <type>const std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/ConvexHull.hpp" line="27"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a05abb60bb0391f9918937ac9dfcefcdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt;</type>
        <definition>std::vector&lt;Point2d&gt; DO::approxIntersection</definition>
        <argsstring>(const Ellipse &amp;e1, const Ellipse &amp;e2, int n)</argsstring>
        <name>approxIntersection</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Compute the intersection union ratio approximately. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/EllipseIntersection.hpp" line="23"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a6714d926f1f5efd6779a42750900e9f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DO::approxJaccardSimilarity</definition>
        <argsstring>(const Ellipse &amp;e1, const Ellipse &amp;e2, int n=36, double limit=1e9)</argsstring>
        <name>approxJaccardSimilarity</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
          <defval>36</defval>
        </param>
        <param>
          <type>double</type>
          <declname>limit</declname>
          <defval>1e9</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/EllipseIntersection.hpp" line="25"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ace61105d604060b64d33881b3aeace36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DO::computeIntersectionPoints</definition>
        <argsstring>(Point2d intersections[], const Ellipse &amp;e1, const Ellipse &amp;e2)</argsstring>
        <name>computeIntersectionPoints</name>
        <param>
          <type><ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref></type>
          <declname>intersections</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
<para>Check polynomial solvers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/EllipseIntersection.hpp" line="30"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a0c6248f50064d5a7bfb8fac6873a789d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DO::analyticIntersection</definition>
        <argsstring>(const Ellipse &amp;e1, const Ellipse &amp;e2)</argsstring>
        <name>analyticIntersection</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the intersection union ratio exactly. CAUTION: Numerical issues are not totally solved. We are almost there... Investigation is still ongoing. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/EllipseIntersection.hpp" line="37"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a277db6266b99368f8f9c1262f60c0a89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DO::analyticJaccardSimilarity</definition>
        <argsstring>(const Ellipse &amp;e1, const Ellipse &amp;e2)</argsstring>
        <name>analyticJaccardSimilarity</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/EllipseIntersection.hpp" line="38"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1aecd3eee5f896cb63e0ea57428cbf385e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt;</type>
        <definition>std::vector&lt;Point2d&gt; DO::ramerDouglasPeucker</definition>
        <argsstring>(const std::vector&lt; Point2d &gt; &amp;contours, double eps)</argsstring>
        <name>ramerDouglasPeucker</name>
        <param>
          <type>const std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt; &amp;</type>
          <declname>contours</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/RamerDouglasPeucker.hpp" line="21"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a9fd9e98a6b50259fe3c2d0fd29ae50ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::intersection</definition>
        <argsstring>(const P2::Line &amp;line1, const P2::Line &amp;line2, Vector2d &amp;u)</argsstring>
        <name>intersection</name>
        <param>
          <type>const P2::Line &amp;</type>
          <declname>line1</declname>
        </param>
        <param>
          <type>const P2::Line &amp;</type>
          <declname>line2</declname>
        </param>
        <param>
          <type>Vector2d &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection test between lines. &apos;u&apos; is the intersection point if it exists. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/SutherlandHodgman.hpp" line="25"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1aa35cd2d24f17358e3e7aa3b6551e65ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt;</type>
        <definition>std::vector&lt;Point2d&gt; DO::sutherlandHodgman</definition>
        <argsstring>(const std::vector&lt; Point2d &gt; &amp;subject, const std::vector&lt; Point2d &gt; &amp;clip)</argsstring>
        <name>sutherlandHodgman</name>
        <param>
          <type>const std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt; &amp;</type>
          <declname>subject</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt; &amp;</type>
          <declname>clip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Simple implementation of Sutherland-Hodgman algorithm.<itemizedlist>
<listitem><para>Polygon &apos;subject&apos; must be a simple polygon, i.e., without holes.</para></listitem><listitem><para>Polygon &apos;clip&apos; must be a convex polygon. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Algorithms/SutherlandHodgman.hpp" line="33"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a3d439a0d1ec406d5c50b93871cb4c646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawLineSegment</definition>
        <argsstring>(const LineSegment &amp;s, const Color3ub &amp;c=Black8, int penWidth=1)</argsstring>
        <name>drawLineSegment</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_line_segment" kindref="compound">LineSegment</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
          <defval><ref refid="group___primary_colors_1ga2a1d9dded3bfcfad489285c0533c8565" kindref="member">Black8</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Drawing functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="23"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1af18f20616ccf69d4340f6191264f8be8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawBBox</definition>
        <argsstring>(const BBox &amp;bbox, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawBBox</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="24"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ab3ba3f9e7d259b7c19e790618b186cad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawPoly</definition>
        <argsstring>(const std::vector&lt; Point2d &gt; &amp;p, const Color3ub &amp;color, int penWidth=1)</argsstring>
        <name>drawPoly</name>
        <param>
          <type>const std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="26"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a6ab135e4365854e057018c7d1f34b53b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawEllipse</definition>
        <argsstring>(const Ellipse &amp;e, const Color3ub col, int penWidth=1)</argsstring>
        <name>drawEllipse</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref></type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="27"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a0a93c32aa99c97d5a2fb6383150c6e44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::drawPoly</definition>
        <argsstring>(const SmallPolygon&lt; N &gt; &amp;poly, const Color3ub &amp;color, int penWidth=1)</argsstring>
        <name>drawPoly</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_small_polygon" kindref="compound">SmallPolygon</ref>&lt; N &gt; &amp;</type>
          <declname>poly</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>color</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="32" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" bodystart="30" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a71d706b11993d812d7101e9d7ea08108" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawTriangle</definition>
        <argsstring>(const Triangle &amp;t, const Rgb8 &amp;col=Red8, int penWidth=1)</argsstring>
        <name>drawTriangle</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_triangle" kindref="compound">Triangle</ref> &amp;</type>
          <declname>t</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &amp;</type>
          <declname>col</declname>
          <defval><ref refid="group___primary_colors_1ga3f07e7bf977602effe4d2e20b4b28436" kindref="member">Red8</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="39" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ab8d5721a2502e906fd5bc18201647edc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawQuad</definition>
        <argsstring>(const Quad &amp;q, const Rgb8 &amp;col=Red8, int penWidth=1)</argsstring>
        <name>drawQuad</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_quad" kindref="compound">Quad</ref> &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &amp;</type>
          <declname>col</declname>
          <defval><ref refid="group___primary_colors_1ga3f07e7bf977602effe4d2e20b4b28436" kindref="member">Red8</ref></defval>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="43" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a0139a9513c50eaeab85a0491840355de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawAffineCone</definition>
        <argsstring>(const AffineCone2 &amp;K, double arrowLength=50., const Color3ub &amp;color=Black8)</argsstring>
        <name>drawAffineCone</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_affine_cone" kindref="compound">AffineCone2</ref> &amp;</type>
          <declname>K</declname>
        </param>
        <param>
          <type>double</type>
          <declname>arrowLength</declname>
          <defval>50.</defval>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>color</declname>
          <defval><ref refid="group___primary_colors_1ga2a1d9dded3bfcfad489285c0533c8565" kindref="member">Black8</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp" line="46"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a342a33ebaeeb31df8c005275e6149122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DO::area</definition>
        <argsstring>(const BBox &amp;bbox)</argsstring>
        <name>area</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="92"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a9ce80f1657f742acc75a6d045b704cb1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::inside</definition>
        <argsstring>(const Point2d &amp;p, const BBox &amp;bbox)</argsstring>
        <name>inside</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="93"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a466e3b01409c7093be50d2c2158f160f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::degenerate</definition>
        <argsstring>(const BBox &amp;bbox, double eps=1e-3)</argsstring>
        <name>degenerate</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>1e-3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="94"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a2eca3beae7ce18ec9f712eb3b536b8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::intersect</definition>
        <argsstring>(const BBox &amp;bbox1, const BBox &amp;bbox2)</argsstring>
        <name>intersect</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="95"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a691b58e15d88fe3143f1066dddfaf132" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DO::jaccardSimilarity</definition>
        <argsstring>(const BBox &amp;bbox1, const BBox &amp;bbox2)</argsstring>
        <name>jaccardSimilarity</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="96"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a4c4bf5e38fecb7f2522610b370fdaa67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DO::jaccardDistance</definition>
        <argsstring>(const BBox &amp;bbox1, const BBox &amp;bbox2)</argsstring>
        <name>jaccardDistance</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="97"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1af591fc5c111fbb450c077da3cf443490" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; DO::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const BBox &amp;bbox)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="100"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a8d0ecddbd1ec7e8b129435eb5e3fa6d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref></type>
        <definition>BBox DO::intersection</definition>
        <argsstring>(const BBox &amp;bbox1, const BBox &amp;bbox2)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_b_box" kindref="compound">BBox</ref> &amp;</type>
          <declname>bbox2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/BBox.hpp" line="103"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a9a8a2aea712edf117bbb5488ab7b4937" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_affine_cone" kindref="compound">AffineCone2</ref></type>
        <definition>AffineCone2 DO::affineCone2</definition>
        <argsstring>(double theta0, double theta1, const Point2d &amp;vertex)</argsstring>
        <name>affineCone2</name>
        <param>
          <type>double</type>
          <declname>theta0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta1</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>vertex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Cone.hpp" line="123"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a2e0926bdfcf1211c139b2ff58def04a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_ellipse" kindref="compound">Ellipse</ref></type>
        <definition>Ellipse DO::fromShapeMat</definition>
        <argsstring>(const Matrix2d &amp;shapeMat, const Point2d &amp;c)</argsstring>
        <name>fromShapeMat</name>
        <param>
          <type>const Matrix2d &amp;</type>
          <declname>shapeMat</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Compute the ellipse from the conic equation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Ellipse.hpp" line="100"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a1fad97e380421134cf3eb2525ad5428d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Vector2d</type>
        <definition>Vector2d DO::dir</definition>
        <argsstring>(const LineSegment &amp;s)</argsstring>
        <name>dir</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_line_segment" kindref="compound">LineSegment</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/LineSegment.hpp" line="43" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/LineSegment.hpp" bodystart="42" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a3a1cd5c6d99fc8eca456219aea7bdaf4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double DO::squaredLength</definition>
        <argsstring>(const LineSegment &amp;s)</argsstring>
        <name>squaredLength</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_line_segment" kindref="compound">LineSegment</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/LineSegment.hpp" line="45" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/LineSegment.hpp" bodystart="44" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ae1678fb32cccb11ed15a1c93fccbbab3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double DO::length</definition>
        <argsstring>(const LineSegment &amp;s)</argsstring>
        <name>length</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_line_segment" kindref="compound">LineSegment</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/LineSegment.hpp" line="47" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/LineSegment.hpp" bodystart="46" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1adc610b23a1b2ec6ca49481edbf2fecb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::intersection</definition>
        <argsstring>(const LineSegment &amp;s1, const LineSegment &amp;s2, Point2d &amp;p)</argsstring>
        <name>intersection</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_line_segment" kindref="compound">LineSegment</ref> &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_line_segment" kindref="compound">LineSegment</ref> &amp;</type>
          <declname>s2</declname>
        </param>
        <param>
          <type><ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Intersection test between line segments. &apos;p&apos; is the intersection point if it exists. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/LineSegment.hpp" line="53"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a407609360822ccccaa6c4a8de2ef6012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; DO::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const SmallPolygon&lt; N &gt; &amp;poly)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_small_polygon" kindref="compound">SmallPolygon</ref>&lt; N &gt; &amp;</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
<para>I/O ostream operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" line="59" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" bodystart="58" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1acbdf6671d04b1620b931360e817b0f03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double DO::signedArea</definition>
        <argsstring>(const SmallPolygon&lt; N &gt; &amp;polygon)</argsstring>
        <name>signedArea</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_small_polygon" kindref="compound">SmallPolygon</ref>&lt; N &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <briefdescription>
<para>Utility functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>Computation derived from Green&apos;s formula </para>        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" line="69" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" bodystart="68" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a910b0527f16234078d44ea3e38118fb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>double</type>
        <definition>double DO::area</definition>
        <argsstring>(const SmallPolygon&lt; N &gt; &amp;polygon)</argsstring>
        <name>area</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_small_polygon" kindref="compound">SmallPolygon</ref>&lt; N &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" line="84" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" bodystart="83" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a8600b6c9c14841aff8ae194f2f50354c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::inside</definition>
        <argsstring>(const Point2d &amp;p, const SmallPolygon&lt; N &gt; &amp;poly)</argsstring>
        <name>inside</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_small_polygon" kindref="compound">SmallPolygon</ref>&lt; N &gt; &amp;</type>
          <declname>poly</declname>
        </param>
        <briefdescription>
<para>Even-odd rule implementation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" line="89" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" bodystart="88" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ae43af60072a8377380937d5d5d5ebdc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::degenerate</definition>
        <argsstring>(const SmallPolygon&lt; N &gt; &amp;poly, double eps=std::numeric_limits&lt; double &gt;::epsilon())</argsstring>
        <name>degenerate</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_small_polygon" kindref="compound">SmallPolygon</ref>&lt; N &gt; &amp;</type>
          <declname>poly</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>std::numeric_limits&lt; double &gt;::epsilon()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" line="104" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1abe20745bf8d1008ab19baff50866afd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double DO::area</definition>
        <argsstring>(const std::vector&lt; Point2d &gt; &amp;polygon)</argsstring>
        <name>area</name>
        <param>
          <type>const std::vector&lt; <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &gt; &amp;</type>
          <declname>polygon</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Objects/Polygon.hpp" line="108"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1aba373e3ae6fde655241830c01659897a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::roots</definition>
        <argsstring>(const Polynomial&lt; T, 2 &gt; &amp;P, std::complex&lt; T &gt; &amp;x1, std::complex&lt; T &gt; &amp;x2, bool &amp;realRoots)</argsstring>
        <name>roots</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_polynomial" kindref="compound">Polynomial</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>realRoots</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/PolynomialRoots.hpp" line="22" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/PolynomialRoots.hpp" bodystart="20" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1afcb62ff856cdf27f1bdd9bbed238887a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::roots</definition>
        <argsstring>(const Polynomial&lt; T, 3 &gt; &amp;P, std::complex&lt; T &gt; &amp;z1, std::complex&lt; T &gt; &amp;z2, std::complex&lt; T &gt; &amp;z3, double eps=1e-3)</argsstring>
        <name>roots</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_polynomial" kindref="compound">Polynomial</ref>&lt; T, 3 &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>z1</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>z2</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>z3</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>1e-3</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/PolynomialRoots.hpp" line="40" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/PolynomialRoots.hpp" bodystart="37" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a57428b80d659cb17dcc3a7c0a01b5678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::roots</definition>
        <argsstring>(const Polynomial&lt; T, 4 &gt; &amp;P, std::complex&lt; T &gt; &amp;z1, std::complex&lt; T &gt; &amp;z2, std::complex&lt; T &gt; &amp;z3, std::complex&lt; T &gt; &amp;z4, double eps=1e-6)</argsstring>
        <name>roots</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_polynomial" kindref="compound">Polynomial</ref>&lt; T, 4 &gt; &amp;</type>
          <declname>P</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>z1</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>z2</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>z3</declname>
        </param>
        <param>
          <type>std::complex&lt; T &gt; &amp;</type>
          <declname>z4</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eps</declname>
          <defval>1e-6</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/PolynomialRoots.hpp" line="88" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/PolynomialRoots.hpp" bodystart="85" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1aa5082d908a4608dbeeda5c8fa722a5ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int DO::signum</definition>
        <argsstring>(T val)</argsstring>
        <name>signum</name>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <briefdescription>
<para>Sign function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="27" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="26" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a054ede9831d0e75f9a8ded8c06ac6812" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T DO::toRadian</definition>
        <argsstring>(T degree)</argsstring>
        <name>toRadian</name>
        <param>
          <type>T</type>
          <declname>degree</declname>
        </param>
        <briefdescription>
<para>Degree to radian conversion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="32" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="31" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a622e3597040a046d4197f5c2fe3f2479" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T DO::toDegree</definition>
        <argsstring>(T radian)</argsstring>
        <name>toDegree</name>
        <param>
          <type>T</type>
          <declname>radian</declname>
        </param>
        <briefdescription>
<para>Radian to degree conversion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="41" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="40" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1abbbce817d58092d902d6c6ab6f2cb4ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T DO::cross</definition>
        <argsstring>(const Matrix&lt; T, 2, 1 &gt; &amp;u, const Matrix&lt; T, 2, 1 &gt; &amp;v)</argsstring>
        <name>cross</name>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>u</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Check if the basis [u, v] is counter-clockwise. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="50" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="49" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1aaff7fd63f186cec9b49cfcf18bf2f301" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T DO::cross</definition>
        <argsstring>(const Matrix&lt; T, 2, 1 &gt; &amp;a, const Matrix&lt; T, 2, 1 &gt; &amp;b, const Matrix&lt; T, 2, 1 &gt; &amp;c)</argsstring>
        <name>cross</name>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="60" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="58" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a821f3033cf0269961d707a8062a383dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int DO::ccw</definition>
        <argsstring>(const Matrix&lt; T, 2, 1 &gt; &amp;a, const Matrix&lt; T, 2, 1 &gt; &amp;b, const Matrix&lt; T, 2, 1 &gt; &amp;c)</argsstring>
        <name>ccw</name>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Suppose the &apos;b-a&apos; is an upfront vector. There are three cases:<itemizedlist>
<listitem><para>If point &apos;c&apos; is on the left, then det([b-a, c-a]) &gt; 0.</para></listitem><listitem><para>If point &apos;c&apos; is on the right, then det([b-a, c-a]) &lt; 0.</para></listitem><listitem><para>If point &apos;c&apos; is on the line (a,b), then det([b-a, c-a]) = 0. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="72" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="70" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a186592089934f49bb87ffedda745222b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 2, 1 &gt;</type>
        <definition>Matrix&lt;T, 2, 1&gt; DO::unitVector2</definition>
        <argsstring>(T radian)</argsstring>
        <name>unitVector2</name>
        <param>
          <type>T</type>
          <declname>radian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="76" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="75" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a1ffd26654663099b670203b11d7ddc0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 2, 2 &gt;</type>
        <definition>Matrix&lt;T, 2, 2&gt; DO::rotation2</definition>
        <argsstring>(T radian)</argsstring>
        <name>rotation2</name>
        <param>
          <type>T</type>
          <declname>radian</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="84" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a4d490649bc10d4865316f407701b1f92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 2, 2 &gt;</type>
        <definition>Matrix&lt;T, 2, 2&gt; DO::isometry2</definition>
        <argsstring>(T radian, T scale)</argsstring>
        <name>isometry2</name>
        <param>
          <type>T</type>
          <declname>radian</declname>
        </param>
        <param>
          <type>T</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="92" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="91" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a0d7b6a1c8f13302ffb31e8f6159694f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 2, 2 &gt;</type>
        <definition>Matrix&lt;T, 2, 2&gt; DO::linearTransform2</definition>
        <argsstring>(const Matrix&lt; T, 2, 1 &gt; &amp;p1, const Matrix&lt; T, 2, 1 &gt; &amp;p2, const Matrix&lt; T, 2, 1 &gt; &amp;q1, const Matrix&lt; T, 2, 1 &gt; &amp;q2)</argsstring>
        <name>linearTransform2</name>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="103" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="99" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a4c33046722b0654bdd89aa7fde725a1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 3 &gt;</type>
        <definition>Matrix&lt;T, 3, 3&gt; DO::affineTransform2</definition>
        <argsstring>(const Matrix&lt; T, 2, 1 &gt; &amp;p1, const Matrix&lt; T, 2, 1 &gt; &amp;p2, const Matrix&lt; T, 2, 1 &gt; &amp;p3, const Matrix&lt; T, 2, 1 &gt; &amp;q1, const Matrix&lt; T, 2, 1 &gt; &amp;q2, const Matrix&lt; T, 2, 1 &gt; &amp;q3)</argsstring>
        <name>affineTransform2</name>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q2</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="129" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="123" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a25ba581da5c7ab48657761d4c8cfcded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 2, 2 &gt;</type>
        <definition>Matrix&lt;T, 2, 2&gt; DO::linearPartFromAffineTransform2</definition>
        <argsstring>(const Matrix&lt; T, 3, 3 &gt; &amp;A)</argsstring>
        <name>linearPartFromAffineTransform2</name>
        <param>
          <type>const Matrix&lt; T, 3, 3 &gt; &amp;</type>
          <declname>A</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="153" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="152" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a3a7d5b78999bec3e2543a765b315f5ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 3, 3 &gt;</type>
        <definition>Matrix&lt;T, 3, 3&gt; DO::homography</definition>
        <argsstring>(const Matrix&lt; T, 2, 1 &gt; &amp;p1, const Matrix&lt; T, 2, 1 &gt; &amp;p2, const Matrix&lt; T, 2, 1 &gt; &amp;p3, const Matrix&lt; T, 2, 1 &gt; &amp;p4, const Matrix&lt; T, 2, 1 &gt; &amp;q1, const Matrix&lt; T, 2, 1 &gt; &amp;q2, const Matrix&lt; T, 2, 1 &gt; &amp;q3, const Matrix&lt; T, 2, 1 &gt; &amp;q4)</argsstring>
        <name>homography</name>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p3</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p4</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q1</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q2</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q3</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>q4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="164" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="156" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ad3f38f2806816488c32003de8487d0e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 2, 2 &gt;</type>
        <definition>Matrix&lt;T, 2, 2&gt; DO::homographyJacobianMatrix</definition>
        <argsstring>(const Matrix&lt; T, 3, 3 &gt; &amp;H, const Matrix&lt; T, 2, 1 &gt; &amp;x)</argsstring>
        <name>homographyJacobianMatrix</name>
        <param>
          <type>const Matrix&lt; T, 3, 3 &gt; &amp;</type>
          <declname>H</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="192" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="190" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a4cf54eafd49a086dbbe8c9d648997ca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, 2, 1 &gt;</type>
        <definition>Matrix&lt;T, 2, 1&gt; DO::apply</definition>
        <argsstring>(const Matrix&lt; T, 3, 3 &gt; H, const Matrix&lt; T, 2, 1 &gt; &amp;p)</argsstring>
        <name>apply</name>
        <param>
          <type>const Matrix&lt; T, 3, 3 &gt;</type>
          <declname>H</declname>
        </param>
        <param>
          <type>const Matrix&lt; T, 2, 1 &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" line="206" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Utilities.hpp" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="group___draw3_d_1ga07235b9568ca2bcaaa75fcd401e6ded3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::displayMesh</definition>
        <argsstring>(const SimpleTriangleMesh3f &amp;mesh)</argsstring>
        <name>displayMesh</name>
        <param>
          <type>const <ref refid="group___draw3_d_1ga545ca8d3fe8778a7a0ba8307d7fd9bf0" kindref="member">SimpleTriangleMesh3f</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
<para>Display a mesh in the active <ref refid="class_d_o_1_1_open_g_l_window" kindref="compound">OpenGLWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Draw3D.hpp" line="28"/>
      </memberdef>
      <memberdef kind="function" id="group___event_1ga691df2a744335cf4257816068a74c95d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_d_o_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event DO::noEvent</definition>
        <argsstring>()</argsstring>
        <name>noEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="90" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="89" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="group___event_1ga9792eb8a29625073de75c93f80773e87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_d_o_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event DO::keyPressed</definition>
        <argsstring>(int key, int keyModifiers=KEY_NOMODIFIER)</argsstring>
        <name>keyPressed</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keyModifiers</declname>
          <defval>KEY_NOMODIFIER</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="101" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="100" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="group___event_1ga1a58098edb5d5eaa10e12263b06b7824" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_d_o_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event DO::keyReleased</definition>
        <argsstring>(int key, int keyModifiers=KEY_NOMODIFIER)</argsstring>
        <name>keyReleased</name>
        <param>
          <type>int</type>
          <declname>key</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keyModifiers</declname>
          <defval>KEY_NOMODIFIER</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="112" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="111" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="group___event_1ga6377782633eca50b5350eda5bd127c61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_d_o_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event DO::mousePressed</definition>
        <argsstring>(int x, int y, int buttons, int keyModifiers=KEY_NOMODIFIER)</argsstring>
        <name>mousePressed</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keyModifiers</declname>
          <defval>KEY_NOMODIFIER</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="124" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="122" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="group___event_1ga22c6b561d5442b11c37a9110335959d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_d_o_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event DO::mouseReleased</definition>
        <argsstring>(int x, int y, int buttons, int keyModifiers=KEY_NOMODIFIER)</argsstring>
        <name>mouseReleased</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keyModifiers</declname>
          <defval>KEY_NOMODIFIER</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="136" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="134" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group___event_1ga35b8ceb4fa4de0a699462f2363c518ee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_d_o_1_1_event" kindref="compound">Event</ref></type>
        <definition>Event DO::mouseMoved</definition>
        <argsstring>(int x, int y, int buttons, int keyModifiers=KEY_NOMODIFIER)</argsstring>
        <name>mouseMoved</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>buttons</declname>
        </param>
        <param>
          <type>int</type>
          <declname>keyModifiers</declname>
          <defval>KEY_NOMODIFIER</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" line="148" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/Events.hpp" bodystart="146" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="group___graphics_internal_1ga4812e822c16c7b8ae54bb08d05f2adf9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_graphics_application_1_1_impl" kindref="compound">GraphicsApplication::Impl</ref> *</type>
        <definition>GraphicsApplication::Impl* DO::getGuiApp</definition>
        <argsstring>()</argsstring>
        <name>getGuiApp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp" line="30" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp" bodystart="29" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="group___graphics_internal_1ga36229db0f4c4bec217e0829ae308d3e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_user_thread" kindref="compound">UserThread</ref> &amp;</type>
        <definition>UserThread&amp; DO::getUserThread</definition>
        <argsstring>()</argsstring>
        <name>getUserThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp" line="33" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp" bodystart="32" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="group___graphics_internal_1gaffca2d4c12a458a3de219b805b1741d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::activeWindowIsVisible</definition>
        <argsstring>()</argsstring>
        <name>activeWindowIsVisible</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp" line="36" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp" bodystart="35" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="group___graphics_view_1ga26dd076d57f9e1e5e6ea70fb5383a0f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT <ref refid="class_d_o_1_1_image_item" kindref="compound">ImageItem</ref></type>
        <definition>DO_EXPORT ImageItem DO::addImage</definition>
        <argsstring>(const Image&lt; Rgb8 &gt; &amp;I, bool randomPos=false)</argsstring>
        <name>addImage</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>randomPos</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Add image <bold>I</bold> to the active <ref refid="class_d_o_1_1_graphics_view" kindref="compound">GraphicsView</ref> window. The added window can be: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>rescaled by hitting key <bold>+</bold> or key <bold>-</bold>,</para></listitem><listitem><para>selected and moved in the <ref refid="class_d_o_1_1_graphics_view" kindref="compound">GraphicsView</ref> window using the mouse. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsViewCommands.hpp" line="38"/>
      </memberdef>
      <memberdef kind="function" id="group___graphics_view_1gae24b6fc4e3898246eff487e6f227c4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoint</definition>
        <argsstring>(ImageItem pixItem, int x, int y, const Rgb8 &amp;c)</argsstring>
        <name>drawPoint</name>
        <param>
          <type><ref refid="class_d_o_1_1_image_item" kindref="compound">ImageItem</ref></type>
          <declname>pixItem</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000010"><xreftitle>Todo</xreftitle><xrefdescription><para>Not yet implemented I think. Check that. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsViewCommands.hpp" line="42"/>
      </memberdef>
      <memberdef kind="function" id="group___image_drawing_1gac01a694d079363a4ee4e0c06baaddcb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoint</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;image, int x, int y, const Color3ub &amp;c)</argsstring>
        <name>drawPoint</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw point on image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageDraw.hpp" line="66"/>
      </memberdef>
      <memberdef kind="function" id="group___image_drawing_1gaf99b9267edc72d74cda95f33baaa7e2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawCircle</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;image, int xc, int yc, int r, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawCircle</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw circle on image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xc</parametername>
<parametername direction="in">yc</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>circle radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageDraw.hpp" line="77"/>
      </memberdef>
      <memberdef kind="function" id="group___image_drawing_1ga451047caac18dd6bfb59bdc9b983eed1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawLine</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;image, int x1, int y1, int x2, int y2, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawLine</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw line on image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x1</parametername>
<parametername direction="in">y1</parametername>
<parametername direction="in">x2</parametername>
<parametername direction="in">y2</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageDraw.hpp" line="88"/>
      </memberdef>
      <memberdef kind="function" id="group___image_drawing_1ga6c2140a7a5e0cf130a3dd51abe4376ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawRect</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;image, int x, int y, int w, int h, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawRect</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw rectangle on image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageDraw.hpp" line="99"/>
      </memberdef>
      <memberdef kind="function" id="group___image_drawing_1gafe36fdf2a8b63bc7fd18457c28064346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillRect</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;image, int x, int y, int w, int h, const Color3ub &amp;c)</argsstring>
        <name>fillRect</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw color-filled rectangle on image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageDraw.hpp" line="108"/>
      </memberdef>
      <memberdef kind="function" id="group___image_drawing_1gae92bc8aef0c29edc577c531d505b04bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillCircle</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;image, int x, int y, int r, const Color3ub &amp;c)</argsstring>
        <name>fillCircle</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw color-filled circle on image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>circle radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageDraw.hpp" line="118"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1ga3f159548cda10d37b3ffcb6edc45d6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT bool</type>
        <definition>DO_EXPORT bool DO::load</definition>
        <argsstring>(Image&lt; Color3ub &gt; &amp;I, const std::string &amp;name)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="31"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1ga863c35bb044665359b8c170480f1e98e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT bool</type>
        <definition>DO_EXPORT bool DO::load</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;I, const std::string &amp;name)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Load color image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">I</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB image with unsigned char channel type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>path of the image file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if image is successfully loaded. </para><simplesectsep/><para>false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="40"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1ga55434e11aa6293606de098414d7b5ae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::load</definition>
        <argsstring>(Image&lt; T &gt; &amp;I, const std::string &amp;name)</argsstring>
        <name>load</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Load image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">I</parametername>
</parameternamelist>
<parameterdescription>
<para>image where color is of type T. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>path of the image file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if image is successfully loaded. </para><simplesectsep/><para>false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="50" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1ga4a26960f04d5aa85afb1883f7fd6956b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT bool</type>
        <definition>DO_EXPORT bool DO::loadFromDialogBox</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;I)</argsstring>
        <name>loadFromDialogBox</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Load image from a dialog box. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>image file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if image is successfully loaded. </para><simplesectsep/><para>false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="64"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1ga5fead3977bbe969d001d0abd115fe4b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT bool</type>
        <definition>DO_EXPORT bool DO::loadFromDialogBox</definition>
        <argsstring>(Image&lt; Color3ub &gt; &amp;I)</argsstring>
        <name>loadFromDialogBox</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Load image from a dialog box. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>image file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if image is successfully loaded. </para><simplesectsep/><para>false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="72"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1ga3fb8d2fc4fd39bbf6352d316fd656bea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::loadFromDialogBox</definition>
        <argsstring>(Image&lt; T &gt; &amp;I)</argsstring>
        <name>loadFromDialogBox</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Load image from a dialog box. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>image file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if image is successfully loaded. </para><simplesectsep/><para>false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="81" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1ga3f0ee657c0f4be4681c9d21536b0f947" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::save</definition>
        <argsstring>(const Image&lt; unsigned char &gt; &amp;image, const std::string &amp;name, int quality=85)</argsstring>
        <name>save</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned char &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
          <defval>85</defval>
        </param>
        <briefdescription>
<para>Save grayscale image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>path of the output image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quality</parametername>
</parameternamelist>
<parameterdescription>
<para>image quality in <formula id="61">$[0, 100]$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if image is successfully saved. </para><simplesectsep/><para>false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="100"/>
      </memberdef>
      <memberdef kind="function" id="group___image_i_o_1gaf541e8b122867ea926cb55aa686633c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::save</definition>
        <argsstring>(const Image&lt; Rgb8 &gt; &amp;image, const std::string &amp;name, int quality=85)</argsstring>
        <name>save</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quality</declname>
          <defval>85</defval>
        </param>
        <briefdescription>
<para>Save color image. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">I</parametername>
</parameternamelist>
<parameterdescription>
<para>image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">name</parametername>
</parameternamelist>
<parameterdescription>
<para>path of the output image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">quality</parametername>
</parameternamelist>
<parameterdescription>
<para>image quality in <formula id="61">$[0, 100]$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if image is successfully saved. </para><simplesectsep/><para>false otherwise. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/ImageIO.hpp" line="110"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gac5a7d7f69f27b67a54658d70fd2ecf92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoint</definition>
        <argsstring>(int x, int y, const Color3ub &amp;c)</argsstring>
        <name>drawPoint</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a point in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="36"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga404236e564421c6870b162167e459491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoint</definition>
        <argsstring>(int x, int y, const Color4ub &amp;c)</argsstring>
        <name>drawPoint</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1gafbaf169ec84e5b80caba534234407e57" kindref="member">Color4ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a point in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinates. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGBA color in <formula id="63">$[0, 255]^4$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="43"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gafd722a4bc47cf9ce5110ee6b639b2b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoint</definition>
        <argsstring>(const Point2f &amp;p, const Color3ub &amp;c)</argsstring>
        <name>drawPoint</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a point in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>coordinates where scalar is of float type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="50"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga3a5f1861fa6d1300657c037e4ee6fc95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawCircle</definition>
        <argsstring>(int xc, int yc, int r, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawCircle</name>
        <param>
          <type>int</type>
          <declname>xc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>yc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">xc</parametername>
<parametername direction="in">yc</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>circle radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="59"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga0dcd2c6ad80005cf9fc3e92198fc508f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawCircle</definition>
        <argsstring>(const Point2i &amp;center, int r, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawCircle</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">center</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="68" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="66" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga222b3771f2dc60e8887d125479ae3dee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawCircle</definition>
        <argsstring>(const Point2f &amp;center, float r, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawCircle</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">center</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="77"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga111d4a73e9c29daceed106df45f57564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawCircle</definition>
        <argsstring>(const Point2d &amp;center, double r, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawCircle</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">center</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="86"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga7f9dee248b78883c0948e13612831835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawEllipse</definition>
        <argsstring>(int x, int y, int w, int h, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawEllipse</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw an axis-aligned ellipse in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>bounding box parameters of the ellipse. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="95"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gad48ba1e8253e2f9308cc1b6c4c3eec22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawEllipse</definition>
        <argsstring>(const Point2f &amp;center, float r1, float r2, float degree, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawEllipse</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw an oriented ellipse in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">center</parametername>
</parameternamelist>
<parameterdescription>
<para>ellipse center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r1</parametername>
<parametername direction="in">r2</parametername>
</parameternamelist>
<parameterdescription>
<para>ellipse radii. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">degree</parametername>
</parameternamelist>
<parameterdescription>
<para>ellipse orientation in degree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="106"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gaadf22a6d4ea37ab6bd73d02d15252857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawEllipse</definition>
        <argsstring>(const Point2d &amp;center, double r1, double r2, double degree, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawEllipse</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>center</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r1</declname>
        </param>
        <param>
          <type>double</type>
          <declname>r2</declname>
        </param>
        <param>
          <type>double</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="109"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga768901f98aa242de772e32e0aaad4bd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawLine</definition>
        <argsstring>(int x1, int y1, int x2, int y2, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawLine</name>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a line in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x1</parametername>
<parametername direction="in">y1</parametername>
<parametername direction="in">x2</parametername>
<parametername direction="in">y2</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="118"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gab6fedda279868c00c6e6b905cfabf6ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawLine</definition>
        <argsstring>(const Point2f &amp;p1, const Point2f &amp;p2, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawLine</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a line in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p1</parametername>
<parametername direction="in">p2</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="127"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga89406d15592ca2c54fa17468c6ce7fa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawLine</definition>
        <argsstring>(const Point2d &amp;p1, const Point2d &amp;p2, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawLine</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a line in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p1</parametername>
<parametername direction="in">p2</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="136"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga949db317830adf652591ff57a1f23a4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawLine</definition>
        <argsstring>(const Point2i &amp;p1, const Point2i &amp;p2, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawLine</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a line in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p1</parametername>
<parametername direction="in">p2</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="146" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga9b53d46ef158cd6e3cbe1bf7a7845b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawRect</definition>
        <argsstring>(int x, int y, int w, int h, const Color3ub &amp;c, int penWidth=1)</argsstring>
        <name>drawRect</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a rectangle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>rectangle parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">penWidth</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="155"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga52558e3f2f1212919480f8bbae221782" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoly</definition>
        <argsstring>(const QPolygonF &amp;poly, const Color3ub &amp;c, int width=1)</argsstring>
        <name>drawPoly</name>
        <param>
          <type>const QPolygonF &amp;</type>
          <declname>poly</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a polygon in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">poly</parametername>
</parameternamelist>
<parameterdescription>
<para>polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="163"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga046ecaf871cc43b13a63fbe84a7074af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoly</definition>
        <argsstring>(const int x[], const int y[], int n, const Color3ub &amp;c, int width=1)</argsstring>
        <name>drawPoly</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a polygon in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>array of vertices of the polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of vertices in the polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="173"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gaf83f860ff583d8ea177703d589d43568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawPoly</definition>
        <argsstring>(const Point2i *p, int n, const Color3ub &amp;c, int width=1)</argsstring>
        <name>drawPoly</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw a polygon in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>array of vertices of the polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of vertices in the polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="182"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gabc402ab820b0c16d0179e526de04949d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawString</definition>
        <argsstring>(int x, int y, const std::string &amp;s, const Color3ub &amp;c, int fontSize=12, double alpha=0, bool italic=false, bool bold=false, bool underlined=false)</argsstring>
        <name>drawString</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fontSize</declname>
          <defval>12</defval>
        </param>
        <param>
          <type>double</type>
          <declname>alpha</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>italic</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>bold</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>underlined</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Draw text in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>array of vertices of the polygon. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">text</parametername>
</parameternamelist>
<parameterdescription>
<para>text. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="193"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga16d65640d0280fda29e54c359bf03357" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::drawArrow</definition>
        <argsstring>(int a, int b, int c, int d, const Color3ub &amp;col, int arrowWidth=8, int arrowHeight=5, int style=0, int width=1)</argsstring>
        <name>drawArrow</name>
        <param>
          <type>int</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>arrowWidth</declname>
          <defval>8</defval>
        </param>
        <param>
          <type>int</type>
          <declname>arrowHeight</declname>
          <defval>5</defval>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>Draw an arrow in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">a</parametername>
<parametername direction="in">b</parametername>
<parametername direction="in">c</parametername>
<parametername direction="in">d</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the arrow. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">arrowWidth</parametername>
<parametername direction="in">arrowHeight</parametername>
</parameternamelist>
<parameterdescription>
<para>arrow parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="204"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga23b2f26a1d7ffaa2c1e72aedeaa76dfa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawArrow</definition>
        <argsstring>(int x1, int y1, int x2, int y2, const Color3ub &amp;col, double ta, double tl, int style, int width)</argsstring>
        <name>drawArrow</name>
        <param>
          <type>int</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y2</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ta</declname>
        </param>
        <param>
          <type>double</type>
          <declname>tl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>style</declname>
        </param>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <briefdescription>
<para>Draw an arrow in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x1</parametername>
<parametername direction="in">y1</parametername>
<parametername direction="in">x2</parametername>
<parametername direction="in">y2</parametername>
</parameternamelist>
<parameterdescription>
<para>start and end points of the arrow. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">col</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">ta</parametername>
<parametername direction="in">tl</parametername>
</parameternamelist>
<parameterdescription>
<para>arrow parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">style</parametername>
</parameternamelist>
<parameterdescription>
<para>arrow style. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">width</parametername>
</parameternamelist>
<parameterdescription>
<para>width of the contour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="215" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="213" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga2e796325aec51e27a63c71d510b0acb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawArrow</definition>
        <argsstring>(const Point2f &amp;a, const Point2f &amp;b, const Color3ub &amp;col, int penWidth=1)</argsstring>
        <name>drawArrow</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="222" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="220" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga42939c8db1f5f1a6dcc4905e0d3bcdc8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::drawArrow</definition>
        <argsstring>(const Point2d &amp;a, const Point2d &amp;b, const Color3ub &amp;col, int penWidth=1)</argsstring>
        <name>drawArrow</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga17451c1ba65dc5ceb1f90e1fc710fa24" kindref="member">Point2d</ref> &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>penWidth</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="228" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="226" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga3ed03162b6c7f9878b29744b4ff93d08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillEllipse</definition>
        <argsstring>(int x, int y, int w, int h, const Color3ub &amp;c)</argsstring>
        <name>fillEllipse</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled ellipse in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>bounding box of the ellipse. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="242"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga857cc343c89d77047513cfffec925d83" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::fillEllipse</definition>
        <argsstring>(const Point2i &amp;p, int w, int h, const Color3ub &amp;c)</argsstring>
        <name>fillEllipse</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled ellipse in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>bounding box of the ellipse. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="249" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="248" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga0cd7ab76249b31006f12efb89e96930a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillEllipse</definition>
        <argsstring>(const Point2f &amp;p, float rx, float ry, float degree, const Color3ub &amp;c)</argsstring>
        <name>fillEllipse</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>rx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>ry</declname>
        </param>
        <param>
          <type>float</type>
          <declname>degree</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled ellipse in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>ellipse center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">rx</parametername>
<parametername direction="in">ry</parametername>
</parameternamelist>
<parameterdescription>
<para>ellipse radii. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">degree</parametername>
</parameternamelist>
<parameterdescription>
<para>ellipse orientation in degree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="259"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga0304730b10cb0cc85cf54fce55dd56f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillRect</definition>
        <argsstring>(int x, int y, int w, int h, const Color3ub &amp;c)</argsstring>
        <name>fillRect</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>rectangle parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="266"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga38298352a8d082ea8a9d26eb3be3b368" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::fillRect</definition>
        <argsstring>(const Point2i &amp;p, int w, int h, const Color3ub &amp;c)</argsstring>
        <name>fillRect</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>rectangle parameters. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="273" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="272" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga7758ea21077f78b7d312dcdc8f4e83ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillCircle</definition>
        <argsstring>(int x, int y, int r, const Color3ub &amp;c)</argsstring>
        <name>fillCircle</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>circle radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="281"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gaf463f29531934900d51e68c5533bdd9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::fillCircle</definition>
        <argsstring>(const Point2i &amp;p, int r, const Color3ub &amp;c)</argsstring>
        <name>fillCircle</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>circle radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="289" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="288" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gab52e27210e68ac177b681a7cdcbaa359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillCircle</definition>
        <argsstring>(const Point2f &amp;p, float r, const Color3ub &amp;c)</argsstring>
        <name>fillCircle</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga02df8c02295a7722cc3f5b89e8137464" kindref="member">Point2f</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>float</type>
          <declname>r</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>circle radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="297"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga4123a714c0d3f678e3b469f668166564" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillPoly</definition>
        <argsstring>(const QPolygonF &amp;polygon, const Color3ub &amp;c)</argsstring>
        <name>fillPoly</name>
        <param>
          <type>const QPolygonF &amp;</type>
          <declname>polygon</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled circle in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>circle center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">r</parametername>
</parameternamelist>
<parameterdescription>
<para>circle radius. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="305"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gaf22fdb89e30d4c6a3dfa955bca0f9d3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillPoly</definition>
        <argsstring>(const int x[], const int y[], int n, const Color3ub &amp;c)</argsstring>
        <name>fillPoly</name>
        <param>
          <type>const int</type>
          <declname>x</declname>
          <array>[]</array>
        </param>
        <param>
          <type>const int</type>
          <declname>y</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled polygon in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>array of vertices. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of vertices. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="313"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga601adc22394b6713b98872874f621179" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillPoly</definition>
        <argsstring>(const int p[], int n, const Color3ub &amp;c)</argsstring>
        <name>fillPoly</name>
        <param>
          <type>const int</type>
          <declname>p</declname>
          <array>[]</array>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled polygon in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>array of vertices <formula id="64">$(\mathbf{p}_i)_{1\leq i \leq n}$</formula> where <formula id="65">$\mathbf{p}_i = (p_{2i}, p_{2i+1}) \in R^2 $</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of vertices. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="322"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga9bce7ee3dfbf9d22449a4cd84ab15b87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::fillPoly</definition>
        <argsstring>(const Point2i *p, int n, const Color3ub &amp;c)</argsstring>
        <name>fillPoly</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> *</type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Draw a color-filled polygon in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>array of vertices. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">n</parametername>
</parameternamelist>
<parameterdescription>
<para>number of vertices. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>RGB color in <formula id="62">$[0, 255]^3$</formula>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="330"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga21ef0ec97c68ddfe1610831f9abad05a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::display</definition>
        <argsstring>(const QImage &amp;image, int xoff=0, int yoff=0, double fact=1.)</argsstring>
        <name>display</name>
        <param>
          <type>const QImage &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>yoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw an image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xoff</parametername>
<parametername direction="in">yoff</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="342"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga88a29cdb7128f7420a377be1a920ad26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::putColorImage</definition>
        <argsstring>(int x, int y, const Color3ub *data, int w, int h, double fact=1.)</argsstring>
        <name>putColorImage</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw an image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>image sizes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="352"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gad6d58648ab2826b1840c473af1565680" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::putColorImage</definition>
        <argsstring>(const Point2i &amp;p, const Color3ub *data, int w, int h, double fact=1.)</argsstring>
        <name>putColorImage</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw a color image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>image sizes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="362" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="360" bodyend="362"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga1993ea2ed50bb99cf5d1b38f3cfceaa3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::putGreyImage</definition>
        <argsstring>(int x, int y, const unsigned char *data, int w, int h, double fact=1.)</argsstring>
        <name>putGreyImage</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw a grayscale image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">x</parametername>
<parametername direction="in">y</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>image sizes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="372"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga77b23c010a8600ed62500731089e862d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::putGreyImage</definition>
        <argsstring>(const Point2i &amp;p, const unsigned char *data, int w, int h, double fact=1.)</argsstring>
        <name>putGreyImage</name>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>const unsigned char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw a grayscale image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">data</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">w</parametername>
<parametername direction="in">h</parametername>
</parameternamelist>
<parameterdescription>
<para>image sizes </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="382" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="380" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga0e5d4d3aadae2bf37d6faa1e8b84c5e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::display</definition>
        <argsstring>(const Image&lt; Color3ub &gt; &amp;image, int xoff=0, int yoff=0, double fact=1.)</argsstring>
        <name>display</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>yoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw a color image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xoff</parametername>
<parametername direction="in">yoff</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="391" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="389" bodyend="391"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga0e452fddc5470393c55af60e940bc624" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::display</definition>
        <argsstring>(const Image&lt; Color3ub &gt; &amp;image, const Point2i &amp;off=Point2i::Zero(), double fact=1.)</argsstring>
        <name>display</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga8ea7b916d3d292a30396a722c6098cb0" kindref="member">Color3ub</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>off</declname>
          <defval>Point2i::Zero()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw a color image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">off</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="400" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="398" bodyend="400"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gaff59f1e3836248047c31d6cb117ad733" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::display</definition>
        <argsstring>(const Image&lt; Rgb8 &gt; &amp;image, int xoff=0, int yoff=0, double fact=1.)</argsstring>
        <name>display</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>yoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw a color image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">off</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="409" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="407" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga295040f0084e284ebe3a020e10aff55e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::display</definition>
        <argsstring>(const Image&lt; Rgb8 &gt; &amp;image, const Point2i &amp;off, double fact=1.)</argsstring>
        <name>display</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>off</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw a color image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>color image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">off</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="421" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="419" bodyend="421"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga79613afee03373bbd813403651582f6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::display</definition>
        <argsstring>(const Image&lt; T &gt; &amp;image, int xoff=0, int yoff=0, double fact=1.)</argsstring>
        <name>display</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>yoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw an image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xoff</parametername>
<parametername direction="in">yoff</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="431" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="429" bodyend="431"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gab725fb61c4c95346186b4b64c842297d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::displayThreeChannelColorImageAsIs</definition>
        <argsstring>(const Image&lt; T &gt; &amp;image, int xoff=0, int yoff=0, double fact=1.)</argsstring>
        <name>displayThreeChannelColorImageAsIs</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>xoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>yoff</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.</defval>
        </param>
        <briefdescription>
<para>Draw an image in the active <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">image</parametername>
</parameternamelist>
<parameterdescription>
<para>image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">xoff</parametername>
<parametername direction="in">yoff</parametername>
</parameternamelist>
<parameterdescription>
<para>position of the top-left image corner. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">fact</parametername>
</parameternamelist>
<parameterdescription>
<para>image viewing scale. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="441" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="439" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1gafffa14be173576d6e5a3af58ed6bee3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::viewImage</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I, const std::string &amp;windowTitle=&quot;DO++&quot;, double fact=1.0)</argsstring>
        <name>viewImage</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
          <defval>1.0</defval>
        </param>
        <briefdescription>
<para>View an image in a new <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="455" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" bodystart="453" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga91250b6a86a927c0570061883fd5a21b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::clearWindow</definition>
        <argsstring>()</argsstring>
        <name>clearWindow</name>
        <briefdescription>
<para>Clear the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="471"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga05be071c9610f7b8df7af791ee6396b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::setAntialiasing</definition>
        <argsstring>(Window w=getActiveWindow(), bool on=true)</argsstring>
        <name>setAntialiasing</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval><ref refid="group___window_management_1gab5f08c396a83e394df40da185d530a42" kindref="member">getActiveWindow</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Activate anti-aliased drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="477"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga19ef396dbab3621673974af94cba293a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::setTransparency</definition>
        <argsstring>(Window w=getActiveWindow(), bool on=true)</argsstring>
        <name>setTransparency</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval><ref refid="group___window_management_1gab5f08c396a83e394df40da185d530a42" kindref="member">getActiveWindow</ref>()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>on</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="bug_1_bug000001"><xreftitle>Bug</xreftitle><xrefdescription><para>Buggy. Investigate... </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="480"/>
      </memberdef>
      <memberdef kind="function" id="group___draw2_d_1ga7f40424c6ecca2871552b0fdba3a9a70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT bool</type>
        <definition>DO_EXPORT bool DO::saveScreen</definition>
        <argsstring>(Window w, const std::string &amp;fileName)</argsstring>
        <name>saveScreen</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>Save contents on the screen. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/PaintingCommands.hpp" line="486"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gab5f08c396a83e394df40da185d530a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::getActiveWindow</definition>
        <argsstring>()</argsstring>
        <name>getActiveWindow</name>
        <briefdescription>
<para>Window getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="35"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga4d5f54d61c154cfa993e6ab5b36e8d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Vector2i</type>
        <definition>DO_EXPORT Vector2i DO::getWindowSizes</definition>
        <argsstring>(Window w)</argsstring>
        <name>getWindowSizes</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Window size getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="38"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga5b32fe29f473b4e4aad3ca328ad4270b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getWindowWidth</definition>
        <argsstring>(Window w)</argsstring>
        <name>getWindowWidth</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Window width getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="41" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gad8e92593c588337e8afea43277ef288b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getWindowHeight</definition>
        <argsstring>(Window w)</argsstring>
        <name>getWindowHeight</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Window height getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="44" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga0351d84c2f76eafe9ecbad9f28a2bd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openWindow</definition>
        <argsstring>(int w, int h, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openWindow</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Open a <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> for 2D drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="51"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga168c3bc45e43e1d57a5564ba28effccf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Window</type>
        <definition>Window DO::openWindow</definition>
        <argsstring>(const Vector2i &amp;sizes, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openWindow</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="55" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga54aa2a7fc6c38dc8f1cd7c08cf253aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openGLWindow</definition>
        <argsstring>(int w, int h, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGLWindow</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Open a <ref refid="class_d_o_1_1_open_g_l_window" kindref="compound">OpenGLWindow</ref> for 3D drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="59"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga7d50090fbe52d137add9c3a97b2f214e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Window</type>
        <definition>Window DO::openGLWindow</definition>
        <argsstring>(const Vector2i &amp;sizes, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGLWindow</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="63" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga6bc2d961019076295185e819b956dc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openGraphicsView</definition>
        <argsstring>(int w, int h, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGraphicsView</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Open a <ref refid="class_d_o_1_1_graphics_view" kindref="compound">GraphicsView</ref> for interactive viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="68"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gae979cf59df19241dc77cb364e05d59a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openGraphicsView</definition>
        <argsstring>(const Vector2i &amp;sizes, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGraphicsView</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="73" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga540df7e323c1ee64c9b67f8adf5975ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::closeWindow</definition>
        <argsstring>(Window w=getActiveWindow())</argsstring>
        <name>closeWindow</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval><ref refid="group___window_management_1gab5f08c396a83e394df40da185d530a42" kindref="member">getActiveWindow</ref>()</defval>
        </param>
        <briefdescription>
<para>Close the window <bold>w</bold> (regardless of its type). By default, the active window is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="77"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga7f5c45f54f7b8e9d300a45ee3d33d95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::setActiveWindow</definition>
        <argsstring>(Window w)</argsstring>
        <name>setActiveWindow</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_d_o_1_1_set" kindref="compound">Set</ref> the chosen window <bold>w</bold> as the current active window (regardless of its type). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="81"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga338a6964d1e52ea78b2f25766f6054ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::resizeWindow</definition>
        <argsstring>(int width, int height, Window w=getActiveWindow())</argsstring>
        <name>resizeWindow</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval><ref refid="group___window_management_1gab5f08c396a83e394df40da185d530a42" kindref="member">getActiveWindow</ref>()</defval>
        </param>
        <briefdescription>
<para>Resize the specified window <bold>w</bold> with the following parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="84"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga139e10a0099c79b95e148d2aa87e4eda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::resizeWindow</definition>
        <argsstring>(const Vector2i &amp;sizes, Window w=getActiveWindow())</argsstring>
        <name>resizeWindow</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval><ref refid="group___window_management_1gab5f08c396a83e394df40da185d530a42" kindref="member">getActiveWindow</ref>()</defval>
        </param>
        <briefdescription>
<para>Resize the specified window <bold>w</bold> with the following parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="87" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga1f4b17862a64245cfc8615ee2815b064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::milliSleep</definition>
        <argsstring>(int msec)</argsstring>
        <name>milliSleep</name>
        <param>
          <type>int</type>
          <declname>msec</declname>
        </param>
        <briefdescription>
<para>Wait <bold>msec</bold> milliseconds before the window resumes its drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="93"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gad2a382b821da01b199aa816d087cd265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::microSleep</definition>
        <argsstring>(int usec)</argsstring>
        <name>microSleep</name>
        <param>
          <type>int</type>
          <declname>usec</declname>
        </param>
        <briefdescription>
<para>Wait <bold>usec</bold> microseconds before the window resumes its drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="96"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga5f65aa168357a4f932ac14bf3767af4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getMouse</definition>
        <argsstring>(int &amp;x, int &amp;y)</argsstring>
        <name>getMouse</name>
        <param>
          <type>int &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Wait for a click from the user. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Works only on the <emphasis>active</emphasis> window.</para></listitem><listitem><para>Returns the clicked mouse button</para></listitem><listitem><para>store the click coordinates <formula id="50">$(x,y)$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="105"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gaa1b23139f5681ebfe40610f79e70de4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int DO::getMouse</definition>
        <argsstring>(Point2i &amp;p)</argsstring>
        <name>getMouse</name>
        <param>
          <type><ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Wait for a click from the user (only on the <emphasis>active</emphasis> window) </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Returns the clicked mouse button and</para></listitem><listitem><para>Stores the click coordinates <formula id="66">$p$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="110" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="109" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gac4b8452beab69863b0ccba5a91b55983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::anyGetMouse</definition>
        <argsstring>(Point2i &amp;p)</argsstring>
        <name>anyGetMouse</name>
        <param>
          <type><ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Wait for a click from the user (only on the <emphasis>active</emphasis> window) </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>The user can click on any opened windows.</para></listitem><listitem><para>Returns the clicked mouse button</para></listitem><listitem><para>store the click coordinates <formula id="66">$p$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="116"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga8330275bee3034e337eaeed23e2e49bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::click</definition>
        <argsstring>()</argsstring>
        <name>click</name>
        <briefdescription>
<para>Wait for a click from the user only on the <emphasis>active</emphasis> window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="119" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="118" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga0fda113cb57d325acd796bbb3bffc1e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::anyClick</definition>
        <argsstring>()</argsstring>
        <name>anyClick</name>
        <briefdescription>
<para>Wait for a click from the user on any opened windows. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="122" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="121" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga04118983b3f8f6a27943ecf1cae68e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getKey</definition>
        <argsstring>()</argsstring>
        <name>getKey</name>
        <briefdescription>
<para>Wait for a hit key from the user. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Works only on the <emphasis>active</emphasis> window.</para></listitem><listitem><para>Returns the hit key. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="127"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga74599c45badec95e5a89d49c843ed09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::anyGetKey</definition>
        <argsstring>()</argsstring>
        <name>anyGetKey</name>
        <briefdescription>
<para>Wait for a hit key from the user. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Works on any opened windows.</para></listitem><listitem><para>Returns the hit key. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="132"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga6c3fd81bfb6ea6b78349aa8cd0455061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::getEvent</definition>
        <argsstring>(int ms, Event &amp;e)</argsstring>
        <name>getEvent</name>
        <param>
          <type>int</type>
          <declname>ms</declname>
        </param>
        <param>
          <type><ref refid="struct_d_o_1_1_event" kindref="compound">Event</ref> &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Listens to events sent from the active window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="138"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a36dbad07df356b7f637d63405a64933d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::readExifInfo</definition>
        <argsstring>(EXIFInfo &amp;exifInfo, const std::string &amp;filePath)</argsstring>
        <name>readExifInfo</name>
        <param>
          <type>EXIFInfo &amp;</type>
          <declname>exifInfo</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" line="19"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a19d77ef95ca2399219b4f57325d3ead9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DO::print</definition>
        <argsstring>(const EXIFInfo &amp;exifInfo)</argsstring>
        <name>print</name>
        <param>
          <type>const EXIFInfo &amp;</type>
          <declname>exifInfo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" line="21"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a85f0346932bf418e6c01e196bf693480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::flip</definition>
        <argsstring>(Image&lt; T &gt; &amp;image, int exifOri)</argsstring>
        <name>flip</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>int</type>
          <declname>exifOri</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" line="25" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" bodystart="24" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a5323ecaff2f641fd7fb19a8096ceebbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::imread</definition>
        <argsstring>(Image&lt; unsigned char &gt; &amp;image, const std::string &amp;filePath)</argsstring>
        <name>imread</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; unsigned char &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" line="85"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1ad3a8314e2de256ea47da27294d61b256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DO::imread</definition>
        <argsstring>(Image&lt; Rgb8 &gt; &amp;image, const std::string &amp;filePath)</argsstring>
        <name>imread</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; <ref refid="group___color_types_1ga649315dc9bd6e95ef269f84d9bfc8b4c" kindref="member">Rgb8</ref> &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" line="87"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1a6133d093631d39208e15f6c709ca81db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::imread</definition>
        <argsstring>(Image&lt; T &gt; &amp;image, const std::string &amp;filePath)</argsstring>
        <name>imread</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>image</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filePath</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" line="91" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="group___deriche_1gab404ef785307b2382e9cecbd44df9de5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::inPlaceDeriche</definition>
        <argsstring>(Image&lt; T, N &gt; &amp;I, typename ColorTraits&lt; T &gt;::ChannelType sigma, int order, int d, bool neumann=true)</argsstring>
        <name>inPlaceDeriche</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>int</type>
          <declname>order</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>neumann</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Applies Deriche filter with specified order $o$ to dimension $d$. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" line="33" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" bodystart="30" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="group___deriche_1ga9146f525e5e87213cca064afb26a7a22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::inPlaceDericheBlur</definition>
        <argsstring>(Image&lt; T, N &gt; &amp;I, const Matrix&lt; typename ColorTraits&lt; T &gt;::ChannelType, N, 1 &gt; &amp;sigmas, bool neumann=true)</argsstring>
        <name>inPlaceDericheBlur</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>const Matrix&lt; typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType, N, 1 &gt; &amp;</type>
          <declname>sigmas</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>neumann</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Applies Deriche filter-based blurring. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" line="154" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="group___deriche_1ga5ede49623b76ef3c51bb98d16787d93b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::inPlaceDericheBlur</definition>
        <argsstring>(Image&lt; T, N &gt; &amp;I, typename ColorTraits&lt; T &gt;::ChannelType sigma, bool neumann=true)</argsstring>
        <name>inPlaceDericheBlur</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>neumann</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Applies Deriche filter-based blurring. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" line="163" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" bodystart="160" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="group___deriche_1gada6eccbcfa3374dfaf664ed16fbf260d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T,N&gt; DO::dericheBlur</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, typename ColorTraits&lt; T &gt;::ChannelType sigma, bool neumann=true)</argsstring>
        <name>dericheBlur</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>neumann</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns the blurred image using Deriche filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" line="173" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" bodystart="170" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="group___deriche_1ga7bd1e38b1cebd93f03405f4512b43e68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T,N&gt; DO::dericheBlur</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, const Matrix&lt; typename ColorTraits&lt; T &gt;::ChannelType, N, 1 &gt; &amp;sigmas, bool neumann=true)</argsstring>
        <name>dericheBlur</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>const Matrix&lt; typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType, N, 1 &gt; &amp;</type>
          <declname>sigmas</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>neumann</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Returns the blurred image using Deriche filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" line="183" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Deriche.hpp" bodystart="180" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga3b68fc0aa689b2bcdb6a1a556da93eec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, N, 1 &gt;</type>
        <definition>Matrix&lt;T,N,1&gt; DO::gradient</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;src, const Matrix&lt; int, N, 1 &gt; &amp;p)</argsstring>
        <name>gradient</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const Matrix&lt; int, N, 1 &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_gradient" kindref="compound">Gradient</ref> computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input grayscale image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>position in the image. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>2D gradient vector. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="273" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="272" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga19bf84abd269ae3dd5a322008cd7495b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::gradient</definition>
        <argsstring>(Image&lt; Matrix&lt; T, N, 1 &gt;, N &gt; &amp;dst, const Image&lt; T, N &gt; &amp;src)</argsstring>
        <name>gradient</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, N, 1 &gt;, N &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_gradient" kindref="compound">Gradient</ref> computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>gradient vector field </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="286" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="285" bodyend="289"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga96135e1292050104f2b02f99cc7df69d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, N, 1 &gt;, N &gt;</type>
        <definition>Image&lt;Matrix&lt;T,N,1&gt;, N&gt; DO::gradient</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;src)</argsstring>
        <name>gradient</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_gradient" kindref="compound">Gradient</ref> computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>gradient vector field </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="297" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="296" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1gad4dc35278f3799f4130399a34521c4eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T DO::laplacian</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;src, const Matrix&lt; int, N, 1 &gt; &amp;p)</argsstring>
        <name>laplacian</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const Matrix&lt; int, N, 1 &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>input grayscale image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>position in the image. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>laplacian value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="310" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="309" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga487ed381811c3871bd06cfe631f32f83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::laplacian</definition>
        <argsstring>(Image&lt; T, N &gt; &amp;dst, const Image&lt; T, N &gt; &amp;src)</argsstring>
        <name>laplacian</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">dst</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="321" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="320" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1ga0f34e33582aeb726da5f618f78c8ad7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T, N&gt; DO::laplacian</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;src)</argsstring>
        <name>laplacian</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>laplacian field. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="332" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="331" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1gac0b0ba5fdd1608dd1290e127fb3f22bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Matrix&lt; T, N, N &gt;</type>
        <definition>Matrix&lt;T,N,N&gt; DO::hessian</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;src, const Matrix&lt; int, N, 1 &gt; &amp;p)</argsstring>
        <name>hessian</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const Matrix&lt; int, N, 1 &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">p</parametername>
</parameternamelist>
<parameterdescription>
<para>position in the image. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="345" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="344" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1gaa0dfb4cdf49f06188df9b5fbb1f251d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::hessian</definition>
        <argsstring>(Image&lt; Matrix&lt; T, N, N &gt; &gt; &amp;dst, const Image&lt; T, N &gt; &amp;src)</argsstring>
        <name>hessian</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, N, N &gt; &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="inout">dst</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix field </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="358" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="357" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="group___differential_1gabce7c4e0432985de285764ff74bdae95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; Matrix&lt; T, N, N &gt; &gt;</type>
        <definition>Image&lt;Matrix&lt;T,N,N&gt; &gt; DO::hessian</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;src)</argsstring>
        <name>hessian</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para><ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix computation. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar field. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_d_o_1_1_hessian" kindref="compound">Hessian</ref> matrix field </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" line="369" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Differential.hpp" bodystart="368" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1ga95c749feff3d1a9b4cb1be05828485ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; class</type>
            <declname>Compare</declname>
            <defname>Compare</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::localExtrema</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I)</argsstring>
        <name>localExtrema</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Get local spatial extrema. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="74" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="73" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1gaed8171a877c2988aed0346dea279550e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>template&lt; typename &gt; class</type>
            <declname>Compare</declname>
            <defname>Compare</defname>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::localScaleSpaceExtrema</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;I, int s, int o)</argsstring>
        <name>localScaleSpaceExtrema</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Get local scale-space extrema at scale <formula id="51">$\sigma(s,o)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="88" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="86" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1ga6be4e0a86056c9a3863016d548cb8975" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::localMaxima</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I)</argsstring>
        <name>localMaxima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Get local spatial maxima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="126" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="125" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1ga72f11b8d935e267a7617a4f75af6d935" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::localMinima</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I)</argsstring>
        <name>localMinima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Get local spatial minima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="130" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="129" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1ga1bcb8f73e7a3ec33fb675c57f0d0f253" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::strictLocalMaxima</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I)</argsstring>
        <name>strictLocalMaxima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Get strict local spatial maxima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="134" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="133" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1gadb2379959164e3074294f29ceeb900c1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::strictLocalMinima</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I)</argsstring>
        <name>strictLocalMinima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Get strict local spatial minima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="138" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="137" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1gaf830b9ca561608d0e73f8c279bf7aaed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::localScaleSpaceMaxima</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;I, int s, int o)</argsstring>
        <name>localScaleSpaceMaxima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Get local scale space maxima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="144" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="143" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1gaf0308d9902926279ff4a44df0d42cba1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::localScaleSpaceMinima</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;I, int s, int o)</argsstring>
        <name>localScaleSpaceMinima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Get local scale space minima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="149" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="148" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1gaac5113209911a61d66ee3dd5d9d376cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::strictLocalScaleSpaceMaxima</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;I, int s, int o)</argsstring>
        <name>strictLocalScaleSpaceMaxima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Get strict local scale space maxima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="154" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="153" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="group___extrema_1ga0c693a917a000520346c242c6cdb2612" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; <ref refid="group___eigen_typedefs_1ga048a27763e58f682b1b91af86144f701" kindref="member">Point2i</ref> &gt;</type>
        <definition>std::vector&lt;Point2i&gt; DO::strictLocalScaleSpaceMinima</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;I, int s, int o)</argsstring>
        <name>strictLocalScaleSpaceMinima</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image_pyramid" kindref="compound">ImagePyramid</ref>&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>o</declname>
        </param>
        <briefdescription>
<para>Get strict local scale space minima. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" line="159" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Extrema.hpp" bodystart="158" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="group___interpolation_1ga923fda07163dc7662489c063c9fa5137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename F</type>
          </param>
        </templateparamlist>
        <type><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::Color64f</type>
        <definition>ColorTraits&lt;T&gt;::Color64f DO::interpolate</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, const Matrix&lt; F, N, 1 &gt; &amp;xx)</argsstring>
        <name>interpolate</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>const Matrix&lt; F, N, 1 &gt; &amp;</type>
          <declname>xx</declname>
        </param>
        <briefdescription>
<para>Interpolation function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Interpolation.hpp" line="31" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Interpolation.hpp" bodystart="29" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga3b622412cab63932a4531f7f481f0e1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::convolveArray</definition>
        <argsstring>(T *signal, const typename ColorTraits&lt; T &gt;::ChannelType *kernel, int signalSz, int kernelSz)</argsstring>
        <name>convolveArray</name>
        <param>
          <type>T *</type>
          <declname>signal</declname>
        </param>
        <param>
          <type>const typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType *</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>signalSz</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kernelSz</declname>
        </param>
        <briefdescription>
<para>&quot;Convolves&quot; a 1D signal <formula id="94">$f$</formula> (or 1D array), with a kernel <formula id="95">$g$</formula>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">signal</parametername>
</parameternamelist>
<parameterdescription>
<para>the 1D array containing the 1D signal <formula id="96">$ f = (f_i)_{1\leq i \leq N}$</formula>, the resulting signal <formula id="97">$f*g$</formula> is stored in signal. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>the &quot;convolution&quot; kernel <formula id="98">$g = (g_i)_{1 \leq i \leq K}$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">signalSz</parametername>
</parameternamelist>
<parameterdescription>
<para>the signal size <formula id="99">$N$</formula>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernelSz</parametername>
</parameternamelist>
<parameterdescription>
<para>the kernel size <formula id="100">$K$</formula>.</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that to be mathematically correct, the kernel must be symmetric, which is why every time, the term &quot;convolution&quot; is mentioned is put in quotes See the implementation for details. This function is used intensively in applyFastRowBasedFilter and applyFastColumnBasedFilter. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="47" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="44" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1gac78d2553d4b060a5bcb8caec356f4942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyRowBasedFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src, const typename ColorTraits&lt; T &gt;::ChannelType *kernel, int kernelSize)</argsstring>
        <name>applyRowBasedFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType *</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kernelSize</declname>
        </param>
        <briefdescription>
<para>Apply 1D filter to image rows. (Slow, deprecated). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the row-filtered image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>the input kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernelSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the kernel size</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that borders are replicated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="80" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="77" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1gae31e0e90ca788c9477f88d1243ce0896" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyColumnBasedFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src, const typename ColorTraits&lt; T &gt;::ChannelType *kernel, int kernelSize)</argsstring>
        <name>applyColumnBasedFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType *</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kernelSize</declname>
        </param>
        <briefdescription>
<para>Apply 1D filter to image columns. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the column-filtered image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>the input kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernelSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the kernel size</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that borders are replicated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="121" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="118" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1gad1076c16222836dcebaf4cc016283cb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyFastRowBasedFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src, const typename ColorTraits&lt; T &gt;::ChannelType *kernel, int kernelSize)</argsstring>
        <name>applyFastRowBasedFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType *</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kernelSize</declname>
        </param>
        <briefdescription>
<para>Apply 1D filter to image rows. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the row-filtered image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>the input kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernelSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the kernel size</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that borders are replicated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="164" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="161" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga09dc57c30263f9a027598e18c970464a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyFastColumnBasedFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src, const typename ColorTraits&lt; T &gt;::ChannelType *kernel, int kernelSize)</argsstring>
        <name>applyFastColumnBasedFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType *</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kernelSize</declname>
        </param>
        <briefdescription>
<para>Apply 1D filter to image columns. (Slow, deprecated). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">dst</parametername>
</parameternamelist>
<parameterdescription>
<para>the column-filtered image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">src</parametername>
</parameternamelist>
<parameterdescription>
<para>the input image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernel</parametername>
</parameternamelist>
<parameterdescription>
<para>the input kernel </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">kernelSize</parametername>
</parameternamelist>
<parameterdescription>
<para>the kernel size</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that borders are replicated. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="199" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="196" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1gaecdacf0a2cbb3b2ea97dda5f6d2c6536" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyRowDerivative</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyRowDerivative</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>brief Apply row-derivative to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="229" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="228" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga6a1a0a9d8ff920e034979ddde3258c9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyColumnDerivative</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyColumnDerivative</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply column-derivative to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="237" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="236" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga006a1d392ae9a9c5cf1284e748bdcc87" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyGaussianFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src, typename ColorTraits&lt; T &gt;::ChannelType sigma, typename ColorTraits&lt; T &gt;::ChannelType gaussTruncate=typename ColorTraits&lt; T &gt;::ChannelType(4))</argsstring>
        <name>applyGaussianFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType</type>
          <declname>sigma</declname>
        </param>
        <param>
          <type>typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType</type>
          <declname>gaussTruncate</declname>
          <defval>typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType(4)</defval>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_gaussian" kindref="compound">Gaussian</ref> smoothing to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="248" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="244" bodyend="282"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga0c789c6587c9a61cabd28387c21eec78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applySobelFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applySobelFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_sobel" kindref="compound">Sobel</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="286" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="285" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga8bf11e5f7d19e724fd16fac28ab2a5ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyScharrFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyScharrFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_scharr" kindref="compound">Scharr</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="302" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="301" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1gaa987c1ac33d95684536eb7550849df63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyPrewittFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyPrewittFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_prewitt" kindref="compound">Prewitt</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="320" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="319" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1gae316e1bacae047bf2a770b8594696ad4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::apply2DNonSeparableFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src, const typename ColorTraits&lt; T &gt;::ChannelType *kernel, int kWidth, int kHeight)</argsstring>
        <name>apply2DNonSeparableFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const typename <ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::ChannelType *</type>
          <declname>kernel</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kWidth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>kHeight</declname>
        </param>
        <briefdescription>
<para>Apply 2D non separable filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="343" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="340" bodyend="403"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga023bb2f35444bc0652aa0292bb2b554b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyLaplacianFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyLaplacianFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> filter (slow). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="407" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="406" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga36e0d65f2ffc247bf1a31c59501f457e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyRobertsCrossFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyRobertsCrossFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply Roberts-Cross filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="419" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="418" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga88b7c8c0e0aa57abab1cacd56cf30f8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyKirschFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyKirschFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_kirsch" kindref="compound">Kirsch</ref> filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="440" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="439" bodyend="481"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga9e790446a2fa0cba36f16b17e5d08a05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::applyRobinsonFilter</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src)</argsstring>
        <name>applyRobinsonFilter</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_robinson" kindref="compound">Robinson</ref> filter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="485" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="484" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga86dbb5545941f2bad6c3a718a11c1c63" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::rowDerivative</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>rowDerivative</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>brief Apply row-derivative to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="533" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="532" bodyend="537"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga7e121dca71a2d7b7be22871098266c0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::columnDerivative</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>columnDerivative</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>brief Apply column-derivative to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="541" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="540" bodyend="545"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga22af7004586fbfe6289a74490a603508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::gaussian</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src, S sigma, S gaussTruncate=S(4))</argsstring>
        <name>gaussian</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="struct_d_o_1_1_s" kindref="compound">S</ref></type>
          <declname>sigma</declname>
        </param>
        <param>
          <type><ref refid="struct_d_o_1_1_s" kindref="compound">S</ref></type>
          <declname>gaussTruncate</declname>
          <defval><ref refid="struct_d_o_1_1_s" kindref="compound">S</ref>(4)</defval>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_gaussian" kindref="compound">Gaussian</ref> smoothing to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="549" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="548" bodyend="553"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga9232c7c17367420cb0a5fc744e47f1d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::sobel</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>sobel</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_sobel" kindref="compound">Sobel</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="557" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="556" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga2d52311972db9b67db5b34fecc0ca778" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::scharr</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>scharr</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_scharr" kindref="compound">Scharr</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="565" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="564" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga2985ba2feb885ad4a15aba01b5f132a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::prewitt</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>prewitt</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_prewitt" kindref="compound">Prewitt</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="573" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="572" bodyend="577"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga2161c165dead682c9d34d8cac9dd214e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::robertsCross</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>robertsCross</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply Roberts-Cross filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="581" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="580" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga537b01359ef4d8bf3c99a830944e34a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::laplacianFilter</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>laplacianFilter</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_laplacian" kindref="compound">Laplacian</ref> filter to image (slow). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="589" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="588" bodyend="593"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1ga3c730e316d23b07baef040c122d4c040" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::kirsch</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>kirsch</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_kirsch" kindref="compound">Kirsch</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="597" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="596" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="group___linear_filtering_1gadf07aca2d19849bf56b6ef0011480411" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt;</type>
        <definition>Image&lt;T&gt; DO::robinson</definition>
        <argsstring>(const Image&lt; T &gt; &amp;src)</argsstring>
        <name>robinson</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Apply <ref refid="struct_d_o_1_1_robinson" kindref="compound">Robinson</ref> filter to image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" line="605" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/LinearFiltering.hpp" bodystart="604" bodyend="609"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1gad1722e482660c0ab4bc2353c7aa85299" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T, N&gt; DO::upscale</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, int fact)</argsstring>
        <name>upscale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="29" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="28" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1gaea62a65f0fd8ef0c43a5bb7cc4202a37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T, N&gt; DO::downscale</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, int fact)</argsstring>
        <name>downscale</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>fact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="39" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="38" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1ga1b1044c1416b07c29d6f3dbc60ec5085" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::pair&lt; T, T &gt;</type>
        <definition>std::pair&lt;T, T&gt; DO::range</definition>
        <argsstring>(const Matrix&lt; T, N, 1 &gt; &amp;v)</argsstring>
        <name>range</name>
        <param>
          <type>const Matrix&lt; T, N, 1 &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="49" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="48" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1gace65217e22b185d8b8004dfb6e4c037a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T, N&gt; DO::reduce</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, Matrix&lt; int, N, 1 &gt; newSizes, bool keepRatio=false)</argsstring>
        <name>reduce</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>Matrix&lt; int, N, 1 &gt;</type>
          <declname>newSizes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepRatio</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="59" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="57" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1gaf7a7a0b7133b062819b4e3260e40d6c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 2 &gt;</type>
        <definition>Image&lt;T,2&gt; DO::reduce</definition>
        <argsstring>(const Image&lt; T, 2 &gt; &amp;I, int w, int h, bool keepRatio=false)</argsstring>
        <name>reduce</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepRatio</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="97" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="96" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1gaaeb7d7a50b5256978e36412404de5ed5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 3 &gt;</type>
        <definition>Image&lt;T,3&gt; DO::reduce</definition>
        <argsstring>(const Image&lt; T, 3 &gt; &amp;I, int w, int h, int d, bool keepRatio=false)</argsstring>
        <name>reduce</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 3 &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepRatio</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="101" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="100" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1ga520f9e82111927f367454b3f2f988afc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T,N&gt; DO::reduce</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, double fact)</argsstring>
        <name>reduce</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="105" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1ga6ec1b584e258e3442657456bcf74e12a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T,N&gt; DO::enlarge</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, Matrix&lt; int, N, 1 &gt; newSizes, bool keepRatio=false)</argsstring>
        <name>enlarge</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>Matrix&lt; int, N, 1 &gt;</type>
          <declname>newSizes</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepRatio</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="114" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="112" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1ga5298efc3e40574a761a5007e3d686660" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 2 &gt;</type>
        <definition>Image&lt;T,2&gt; DO::enlarge</definition>
        <argsstring>(const Image&lt; T, 2 &gt; &amp;I, int w, int h, bool keepRatio=false)</argsstring>
        <name>enlarge</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 2 &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepRatio</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="142" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1gad9c20ed5d745c1475eb2c7dfe6a2f8d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 3 &gt;</type>
        <definition>Image&lt;T,3&gt; DO::enlarge</definition>
        <argsstring>(const Image&lt; T, 3 &gt; &amp;I, int w, int h, int d, bool keepRatio=false)</argsstring>
        <name>enlarge</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, 3 &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>keepRatio</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="147" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="group___scaling_1ga580f996fda091e5d0cd287a9d13ffde8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt;</type>
        <definition>Image&lt;T,N&gt; DO::enlarge</definition>
        <argsstring>(const Image&lt; T, N &gt; &amp;I, double fact)</argsstring>
        <name>enlarge</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T, N &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fact</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" line="151" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Scaling.hpp" bodystart="150" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_o_1acb1aebdcf3ff90d86a15a26b3fc6f866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename S</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool DO::warp</definition>
        <argsstring>(Image&lt; T &gt; &amp;dst, const Image&lt; T &gt; &amp;src, const Matrix&lt; S, 3, 3 &gt; &amp;homographyFromPatchToImg, const T &amp;defaultFillColor=ColorTraits&lt; T &gt;::min(), bool stopIfOutOfRange=false)</argsstring>
        <name>warp</name>
        <param>
          <type><ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const <ref refid="class_d_o_1_1_image" kindref="compound">Image</ref>&lt; T &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const Matrix&lt; <ref refid="struct_d_o_1_1_s" kindref="compound">S</ref>, 3, 3 &gt; &amp;</type>
          <declname>homographyFromPatchToImg</declname>
        </param>
        <param>
          <type>const T &amp;</type>
          <declname>defaultFillColor</declname>
          <defval><ref refid="struct_d_o_1_1_color_traits" kindref="compound">ColorTraits</ref>&lt; T &gt;::min()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>stopIfOutOfRange</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Warp.hpp" line="24" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing/Warp.hpp" bodystart="20" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The library namespace. </para>    </briefdescription>
    <detaileddescription>
<para><xrefsect id="todo_1_todo000007"><xreftitle>Todo</xreftitle><xrefdescription><para>: Implement simple geometric kernels. </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Color.hpp" line="21"/>
  </compounddef>
</doxygen>
