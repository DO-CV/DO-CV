<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_view_8hpp" kind="file">
    <compoundname>View.hpp</compoundname>
    <includes refid="_core_8hpp" local="no">DO/Core.hpp</includes>
    <includes refid="_graphics_8hpp" local="no">DO/Graphics.hpp</includes>
    <includes local="yes">GraphicsView/FeatureItem.h</includes>
    <incdepgraph>
      <node id="664">
        <label>Defines.hpp</label>
        <link refid="_defines_8hpp_source"/>
      </node>
      <node id="681">
        <label>queue</label>
      </node>
      <node id="696">
        <label>Graphics/ImageDraw.hpp</label>
        <link refid="_image_draw_8hpp"/>
      </node>
      <node id="671">
        <label>iterator</label>
      </node>
      <node id="673">
        <label>Core/MultiArray.hpp</label>
        <link refid="_multi_array_8hpp"/>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="674" relation="include">
        </childnode>
      </node>
      <node id="687">
        <label>Core/StdVectorHelpers.hpp</label>
        <link refid="_std_vector_helpers_8hpp"/>
        <childnode refid="688" relation="include">
        </childnode>
      </node>
      <node id="674">
        <label>numeric</label>
      </node>
      <node id="668">
        <label>Eigen/Eigen</label>
      </node>
      <node id="686">
        <label>string</label>
      </node>
      <node id="676">
        <label>map</label>
      </node>
      <node id="678">
        <label>Core/Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>Core/Tree.hpp</label>
        <link refid="_tree_8hpp"/>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="685">
        <label>Core/Stringify.hpp</label>
        <link refid="_stringify_8hpp"/>
        <childnode refid="669" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
      </node>
      <node id="683">
        <label>fstream</label>
      </node>
      <node id="698">
        <label>Graphics/Draw3D.hpp</label>
        <link refid="_draw3_d_8hpp"/>
      </node>
      <node id="670">
        <label>Core/Locator.hpp</label>
        <link refid="_locator_8hpp"/>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="671" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>Core/Timer.hpp</label>
        <link refid="_timer_8hpp"/>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
      </node>
      <node id="692">
        <label>Graphics/GraphicsApplication.hpp</label>
        <link refid="_graphics_application_8hpp"/>
      </node>
      <node id="699">
        <label>Graphics/GraphicsViewCommands.hpp</label>
        <link refid="_graphics_view_commands_8hpp"/>
      </node>
      <node id="689">
        <label>Core/DebugUtilities.hpp</label>
        <link refid="_debug_utilities_8hpp"/>
        <childnode refid="672" relation="include">
        </childnode>
      </node>
      <node id="691">
        <label>Graphics/Events.hpp</label>
        <link refid="_events_8hpp_source"/>
        <childnode refid="667" relation="include">
        </childnode>
      </node>
      <node id="679">
        <label>Core/Subimage.hpp</label>
        <link refid="_subimage_8hpp"/>
        <childnode refid="678" relation="include">
        </childnode>
      </node>
      <node id="665">
        <label>Core/Meta.hpp</label>
        <link refid="_meta_8hpp"/>
      </node>
      <node id="697">
        <label>Graphics/Mesh.hpp</label>
        <link refid="_mesh_8hpp"/>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
        <childnode refid="672" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
      </node>
      <node id="662">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp</label>
        <link refid="View.hpp"/>
        <childnode refid="663" relation="include">
        </childnode>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="700" relation="include">
        </childnode>
      </node>
      <node id="688">
        <label>vector</label>
      </node>
      <node id="682">
        <label>stack</label>
      </node>
      <node id="666">
        <label>Core/StaticAssert.hpp</label>
        <link refid="_static_assert_8hpp"/>
      </node>
      <node id="695">
        <label>Graphics/ImageIO.hpp</label>
        <link refid="_graphics_2_image_i_o_8hpp"/>
      </node>
      <node id="669">
        <label>sstream</label>
      </node>
      <node id="694">
        <label>Graphics/PaintingCommands.hpp</label>
        <link refid="_painting_commands_8hpp"/>
      </node>
      <node id="667">
        <label>Core/EigenExtension.hpp</label>
        <link refid="_eigen_extension_8hpp"/>
        <childnode refid="668" relation="include">
        </childnode>
        <childnode refid="669" relation="include">
        </childnode>
      </node>
      <node id="663">
        <label>DO/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="670" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
      </node>
      <node id="672">
        <label>iostream</label>
      </node>
      <node id="700">
        <label>GraphicsView/FeatureItem.h</label>
      </node>
      <node id="675">
        <label>Core/SparseMultiArray.hpp</label>
        <link refid="_sparse_multi_array_8hpp"/>
        <childnode refid="667" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
      </node>
      <node id="693">
        <label>Graphics/WindowManagement.hpp</label>
        <link refid="_window_management_8hpp"/>
        <childnode refid="691" relation="include">
        </childnode>
      </node>
      <node id="677">
        <label>Core/Color.hpp</label>
        <link refid="_color_8hpp"/>
        <childnode refid="665" relation="include">
        </childnode>
        <childnode refid="666" relation="include">
        </childnode>
        <childnode refid="667" relation="include">
        </childnode>
      </node>
      <node id="690">
        <label>DO/Graphics.hpp</label>
        <link refid="_graphics_8hpp"/>
        <childnode refid="664" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
        <childnode refid="695" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
        <childnode refid="699" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="class_d_o_1_1_image_features_item" prot="public">DO::ImageFeaturesItem</innerclass>
    <innerclass refid="struct_d_o_1_1_image_features_item_1_1_key_shape" prot="private">DO::ImageFeaturesItem::KeyShape</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_AFFINECOVARIANTFEATURES_VIEW_H</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_AFFINECOVARIANTFEATURES_VIEW_H</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_core_8hpp" kindref="compound" tooltip="Master header file of the Core module.">DO/Core.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="_graphics_8hpp" kindref="compound" tooltip="Master header file of the Graphics module.">DO/Graphics.hpp</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;GraphicsView/FeatureItem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="class_d_o_1_1_image_features_item" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_image_features_item" kindref="compound">ImageFeaturesItem</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>QGraphicsPixmapItem</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">KeyShape</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPointF<sp/>center;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qreal<sp/>radius;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>KeyShape(qreal<sp/>x,<sp/>qreal<sp/><ref refid="group___channel_accessors_1gac90c52c5b3a7b2a7e3761e6e84f25778" kindref="member" tooltip="Mutable channel accessor.">y</ref>,<sp/>qreal<sp/>r)<sp/>:<sp/>center(x,<sp/>y),<sp/>radius(r)<sp/>{}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image_features_item" kindref="compound">ImageFeaturesItem</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Keypoint&gt;&amp;<sp/>keys,<sp/>QGraphicsItem<sp/>*parent)</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>QGraphicsPixmapItem(0),<sp/>shapes_(toKeyShapes(keys)),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boundingRect_(parent-&gt;boundingRect()),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shape_(parent-&gt;shape())</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pen_.setWidth(2);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pen_.setColor(<ref refid="group___channel_accessors_1ga6829ee374a312a1029a0148235540de3" kindref="member" tooltip="Mutable channel accessor.">Qt::yellow</ref>);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setFlags(ItemSendsGeometryChanges<sp/>|</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ItemSendsScenePositionChanges);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setPos(0,<sp/>0);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setOpacity(0.8);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPixmap<sp/>pixmap(boundingRect().width(),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundingRect().height());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pixmap.fill(Qt::transparent);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QPainter<sp/>p(&amp;pixmap);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.setPen(pen_);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p.setRenderHints(QPainter::Antialiasing<sp/>|<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QPainter::SmoothPixmapTransform);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>keys.size();<sp/>++i)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.drawEllipse(keys[i].x(),<sp/>keys[i].y(),</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keys[i].scale(),<sp/>keys[i].scale());</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setPixmap(pixmap);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>paint(QPainter<sp/>*painter,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>QStyleOptionGraphicsItem<sp/>*option,</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QWidget<sp/>*widget)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>qreal<sp/>lod<sp/>=<sp/>option-&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelOfDetailFromTransform(painter-&gt;worldTransform());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;lod<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>lod;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lod<sp/>&gt;<sp/>2)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Careful<sp/>detailed<sp/>drawing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;setPen(pen_);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QGraphicsView<sp/>*<ref refid="group___channel_accessors_1ga1dd2524c5b8d3db33137eedb803fc2ce" kindref="member" tooltip="Mutable channel accessor.">v</ref><sp/>=<sp/>scene()-&gt;views().front();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRect<sp/>vRect<sp/>=<sp/>v-&gt;viewport()-&gt;rect();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QRectF<sp/>vRect_Scene<sp/>=<sp/>v-&gt;mapToScene(vRect).boundingRect();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>shapes_.size();<sp/>++i)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vRect_Scene.contains(mapToScene(shapes_[i].center))<sp/>)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>painter-&gt;drawEllipse(shapes_[i].center,<sp/></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shapes_[i].radius,<sp/>shapes_[i].radius);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lod<sp/>&lt;<sp/>0.1)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>qDebug(</highlight><highlight class="stringliteral">&quot;Default<sp/>pixmap<sp/>drawing&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>QGraphicsPixmapItem::paint(painter,<sp/>option,<sp/>widget);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>boundingRect()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boundingRect_;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainterPath<sp/>shape()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="107"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shape_;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyShape&gt;<sp/>toKeyShapes(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;Keypoint&gt;&amp;<sp/>keys)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;KeyShape&gt;<sp/>shapes;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>shapes.reserve(keys.size());</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>!=<sp/>keys.size();<sp/>++i)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shapes.push_back(KeyShape(keys[i].x(),<sp/>keys[i].<ref refid="group___channel_accessors_1gac90c52c5b3a7b2a7e3761e6e84f25778" kindref="member" tooltip="Mutable channel accessor.">y</ref>(),<sp/>keys[i].scale()));</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>shapes;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;KeyShape&gt;<sp/>shapes_;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>pen_;</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>QRectF<sp/>boundingRect_;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>QPainterPath<sp/>shape_;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>putFeatureOnPixmapItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Feature&amp;<sp/>f,</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>QGraphicsPixmapItem<sp/>*pixItem);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>FeatureOrKey&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>putFeaturesOnPixmapItem(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;FeatureOrKey&gt;&amp;<sp/>keys,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>QGraphicsPixmapItem<sp/>*pixItem)</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_features_item" kindref="compound">ImageFeaturesItem&lt;FeatureOrKey&gt;</ref><sp/>Features;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>QMetaObject::invokeMethod(scene(),<sp/></highlight><highlight class="stringliteral">&quot;insertItem&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Qt::QueuedConnection,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(QGraphicsItem<sp/>*,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Features(keys,<sp/>pixItem)),</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Q_ARG(QGraphicsItem<sp/>*,<sp/>pixItem));</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>DO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_AFFINECOVARIANTFEATURES_VIEW_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp"/>
  </compounddef>
</doxygen>
