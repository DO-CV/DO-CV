<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="group___window_management" kind="group">
    <compoundname>WindowManagement</compoundname>
    <title>Window management functions</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___window_management_1gab5f08c396a83e394df40da185d530a42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::getActiveWindow</definition>
        <argsstring>()</argsstring>
        <name>getActiveWindow</name>
        <briefdescription>
<para>Window getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="35"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga4d5f54d61c154cfa993e6ab5b36e8d2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Vector2i</type>
        <definition>DO_EXPORT Vector2i DO::getWindowSizes</definition>
        <argsstring>(Window w)</argsstring>
        <name>getWindowSizes</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Window size getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="38"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga5b32fe29f473b4e4aad3ca328ad4270b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getWindowWidth</definition>
        <argsstring>(Window w)</argsstring>
        <name>getWindowWidth</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Window width getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="41" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gad8e92593c588337e8afea43277ef288b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getWindowHeight</definition>
        <argsstring>(Window w)</argsstring>
        <name>getWindowHeight</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
<para>Window height getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="44" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga0351d84c2f76eafe9ecbad9f28a2bd84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openWindow</definition>
        <argsstring>(int w, int h, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openWindow</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Open a <ref refid="class_d_o_1_1_painting_window" kindref="compound">PaintingWindow</ref> for 2D drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="51"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga168c3bc45e43e1d57a5564ba28effccf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Window</type>
        <definition>Window DO::openWindow</definition>
        <argsstring>(const Vector2i &amp;sizes, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openWindow</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="55" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga54aa2a7fc6c38dc8f1cd7c08cf253aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openGLWindow</definition>
        <argsstring>(int w, int h, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGLWindow</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Open a <ref refid="class_d_o_1_1_open_g_l_window" kindref="compound">OpenGLWindow</ref> for 3D drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="59"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga7d50090fbe52d137add9c3a97b2f214e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Window</type>
        <definition>Window DO::openGLWindow</definition>
        <argsstring>(const Vector2i &amp;sizes, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGLWindow</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="63" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga6bc2d961019076295185e819b956dc48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openGraphicsView</definition>
        <argsstring>(int w, int h, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGraphicsView</name>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Open a <ref refid="class_d_o_1_1_graphics_view" kindref="compound">GraphicsView</ref> for interactive viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="68"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gae979cf59df19241dc77cb364e05d59a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>DO_EXPORT Window</type>
        <definition>DO_EXPORT Window DO::openGraphicsView</definition>
        <argsstring>(const Vector2i &amp;sizes, const std::string &amp;windowTitle=&quot;DO++&quot;, int x=-1, int y=-1)</argsstring>
        <name>openGraphicsView</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>windowTitle</declname>
          <defval>&quot;DO++&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
          <defval>-1</defval>
        </param>
        <param>
          <type>int</type>
          <declname>y</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="73" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga540df7e323c1ee64c9b67f8adf5975ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::closeWindow</definition>
        <argsstring>(Window w=getActiveWindow())</argsstring>
        <name>closeWindow</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval>getActiveWindow()</defval>
        </param>
        <briefdescription>
<para>Close the window <bold>w</bold> (regardless of its type). By default, the active window is closed. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="77"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga7f5c45f54f7b8e9d300a45ee3d33d95e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::setActiveWindow</definition>
        <argsstring>(Window w)</argsstring>
        <name>setActiveWindow</name>
        <param>
          <type>Window</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_d_o_1_1_set" kindref="compound">Set</ref> the chosen window <bold>w</bold> as the current active window (regardless of its type). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="81"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga338a6964d1e52ea78b2f25766f6054ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::resizeWindow</definition>
        <argsstring>(int width, int height, Window w=getActiveWindow())</argsstring>
        <name>resizeWindow</name>
        <param>
          <type>int</type>
          <declname>width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
        </param>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval>getActiveWindow()</defval>
        </param>
        <briefdescription>
<para>Resize the specified window <bold>w</bold> with the following parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="84"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga139e10a0099c79b95e148d2aa87e4eda" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::resizeWindow</definition>
        <argsstring>(const Vector2i &amp;sizes, Window w=getActiveWindow())</argsstring>
        <name>resizeWindow</name>
        <param>
          <type>const Vector2i &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>Window</type>
          <declname>w</declname>
          <defval>getActiveWindow()</defval>
        </param>
        <briefdescription>
<para>Resize the specified window <bold>w</bold> with the following parameters. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="87" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="86" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga1f4b17862a64245cfc8615ee2815b064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::milliSleep</definition>
        <argsstring>(int msec)</argsstring>
        <name>milliSleep</name>
        <param>
          <type>int</type>
          <declname>msec</declname>
        </param>
        <briefdescription>
<para>Wait <bold>msec</bold> milliseconds before the window resumes its drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="93"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gad2a382b821da01b199aa816d087cd265" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::microSleep</definition>
        <argsstring>(int usec)</argsstring>
        <name>microSleep</name>
        <param>
          <type>int</type>
          <declname>usec</declname>
        </param>
        <briefdescription>
<para>Wait <bold>usec</bold> microseconds before the window resumes its drawing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="96"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga5f65aa168357a4f932ac14bf3767af4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getMouse</definition>
        <argsstring>(int &amp;x, int &amp;y)</argsstring>
        <name>getMouse</name>
        <param>
          <type>int &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Wait for a click from the user. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Works only on the <emphasis>active</emphasis> window.</para></listitem><listitem><para>Returns the clicked mouse button</para></listitem><listitem><para>store the click coordinates <formula id="50">$(x,y)$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="105"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gaa1b23139f5681ebfe40610f79e70de4b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int DO::getMouse</definition>
        <argsstring>(Point2i &amp;p)</argsstring>
        <name>getMouse</name>
        <param>
          <type>Point2i &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Wait for a click from the user (only on the <emphasis>active</emphasis> window) </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Returns the clicked mouse button and</para></listitem><listitem><para>Stores the click coordinates <formula id="66">$p$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="110" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="109" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1gac4b8452beab69863b0ccba5a91b55983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::anyGetMouse</definition>
        <argsstring>(Point2i &amp;p)</argsstring>
        <name>anyGetMouse</name>
        <param>
          <type>Point2i &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Wait for a click from the user (only on the <emphasis>active</emphasis> window) </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>The user can click on any opened windows.</para></listitem><listitem><para>Returns the clicked mouse button</para></listitem><listitem><para>store the click coordinates <formula id="66">$p$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="116"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga8330275bee3034e337eaeed23e2e49bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::click</definition>
        <argsstring>()</argsstring>
        <name>click</name>
        <briefdescription>
<para>Wait for a click from the user only on the <emphasis>active</emphasis> window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="119" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="118" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga0fda113cb57d325acd796bbb3bffc1e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DO::anyClick</definition>
        <argsstring>()</argsstring>
        <name>anyClick</name>
        <briefdescription>
<para>Wait for a click from the user on any opened windows. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="122" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" bodystart="121" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga04118983b3f8f6a27943ecf1cae68e84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::getKey</definition>
        <argsstring>()</argsstring>
        <name>getKey</name>
        <briefdescription>
<para>Wait for a hit key from the user. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Works only on the <emphasis>active</emphasis> window.</para></listitem><listitem><para>Returns the hit key. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="127"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga74599c45badec95e5a89d49c843ed09a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT int</type>
        <definition>DO_EXPORT int DO::anyGetKey</definition>
        <argsstring>()</argsstring>
        <name>anyGetKey</name>
        <briefdescription>
<para>Wait for a hit key from the user. </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>Works on any opened windows.</para></listitem><listitem><para>Returns the hit key. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="132"/>
      </memberdef>
      <memberdef kind="function" id="group___window_management_1ga6c3fd81bfb6ea6b78349aa8cd0455061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DO_EXPORT void</type>
        <definition>DO_EXPORT void DO::getEvent</definition>
        <argsstring>(int ms, Event &amp;e)</argsstring>
        <name>getEvent</name>
        <param>
          <type>int</type>
          <declname>ms</declname>
        </param>
        <param>
          <type>Event &amp;</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Listens to events sent from the active window. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/WindowManagement.hpp" line="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Open, close windows, wait for a click or a key, listen to events. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
