<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_d_o_1_1_range_iterator_base" kind="class" prot="public">
    <compoundname>DO::RangeIteratorBase</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::iterator&lt; std::random_access_iterator_tag, T, std::ptrdiff_t, Meta::Choose&lt; IsConst, const T *, T * &gt;::Type, Meta::Choose&lt; IsConst, const T &amp;, T &amp; &gt;::Type &gt;</basecompoundref>
    <derivedcompoundref refid="class_d_o_1_1_range_iterator" prot="public" virt="non-virtual">RangeIterator&lt; IsConst, T, N, StorageOrder &gt;</derivedcompoundref>
    <derivedcompoundref refid="class_d_o_1_1_subrange_iterator" prot="public" virt="non-virtual">SubrangeIterator&lt; IsConst, T, N, StorageOrder &gt;</derivedcompoundref>
    <includes refid="_locator_8hpp" local="no">Locator.hpp</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
      <param>
        <type>typename T</type>
      </param>
      <param>
        <type>int</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>int</type>
        <declname>StorageOrder</declname>
        <defname>StorageOrder</defname>
        <defval>ColMajor</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1ae0fad1d0505b8ef2c9c121853fe62d76" prot="private" static="no">
        <type><ref refid="struct_d_o_1_1_offset" kindref="compound">Offset</ref>&lt; N, StorageOrder &gt;</type>
        <definition>typedef Offset&lt;N, StorageOrder&gt; offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="895" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="895" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a0dda3d099be46b4f4d24899245b9e216" prot="private" static="no">
        <type>std::iterator&lt; std::random_access_iterator_tag, T, std::ptrdiff_t, typename <ref refid="struct_d_o_1_1_meta_1_1_choose" kindref="compound">Meta::Choose</ref>&lt; IsConst, const T *, T * &gt;::Type, typename <ref refid="struct_d_o_1_1_meta_1_1_choose" kindref="compound">Meta::Choose</ref>&lt; IsConst, const T &amp;, T &amp; &gt;::Type &gt;</type>
        <definition>typedef std::iterator&lt;std::random_access_iterator_tag, T, std::ptrdiff_t, typename Meta::Choose&lt; IsConst , const T *, T *&gt;::Type, typename Meta::Choose&lt; IsConst , const T&amp;, T&amp;&gt;::Type&gt; base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="896" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="896" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1afabdc9b5f48b286e2d7676557d2b66ed" prot="public" static="no">
        <type>base_type::value_type</type>
        <definition>typedef base_type::value_type value_type</definition>
        <argsstring></argsstring>
        <name>value_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="899" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a7f1b8fde63313dfc323ad4f7cb81b188" prot="public" static="no">
        <type>base_type::difference_type</type>
        <definition>typedef base_type::difference_type difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="899" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a68ecfc7edab9c677fab5affc459305f2" prot="public" static="no">
        <type>base_type::pointer</type>
        <definition>typedef base_type::pointer pointer</definition>
        <argsstring></argsstring>
        <name>pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="899" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1aa5c002ab42a75cdabd182cdde72b474f" prot="public" static="no">
        <type>base_type::reference</type>
        <definition>typedef base_type::reference reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="899" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a4ac840b4eee6b513081e58a865f59c88" prot="public" static="no">
        <type>base_type::iterator_category</type>
        <definition>typedef base_type::iterator_category iterator_category</definition>
        <argsstring></argsstring>
        <name>iterator_category</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="899" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="899" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a4c7a1431ef6caec23ef603d93da7be24" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">RangeIteratorBase</ref></type>
        <definition>typedef RangeIteratorBase self_type</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="900" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="900" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1af94cd6f98815d838c630d458ffbd5d88" prot="public" static="no">
        <type>Matrix&lt; int, N, 1 &gt;</type>
        <definition>typedef Matrix&lt;int, N, 1&gt; coords_type</definition>
        <argsstring></argsstring>
        <name>coords_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="901" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1aacf98e49e90f9aeead0ff8885fae3ac7" prot="public" static="no">
        <type>Matrix&lt; int, N, 1 &gt;</type>
        <definition>typedef Matrix&lt;int, N, 1&gt; vector_type</definition>
        <argsstring></argsstring>
        <name>vector_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="901" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="901" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a111124f64347b08446fa9e42742afab7" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_axis_iterator" kindref="compound">AxisIterator</ref>&lt; IsConst, value_type, 0, N &gt;</type>
        <definition>typedef AxisIterator&lt;IsConst, value_type, 0, N&gt; x_iterator</definition>
        <argsstring></argsstring>
        <name>x_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="902" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="902" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a36a0bd2bff9cd50874741e23b1d1003f" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_axis_iterator" kindref="compound">AxisIterator</ref>&lt; IsConst, value_type, 1, N &gt;</type>
        <definition>typedef AxisIterator&lt;IsConst, value_type, 1, N&gt; y_iterator</definition>
        <argsstring></argsstring>
        <name>y_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="903" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="903" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_range_iterator_base_1a194e30682c3df76f852e97b4096f6dc6" prot="public" static="no">
        <type><ref refid="class_d_o_1_1_axis_iterator" kindref="compound">AxisIterator</ref>&lt; IsConst, value_type, 2, N &gt;</type>
        <definition>typedef AxisIterator&lt;IsConst, value_type, 2, N&gt; z_iterator</definition>
        <argsstring></argsstring>
        <name>z_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="904" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="904" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" prot="protected" static="no" mutable="no">
        <type>pointer</type>
        <definition>pointer cur_pos_</definition>
        <argsstring></argsstring>
        <name>cur_pos_</name>
        <briefdescription>
<para>current pointer. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1012" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1012" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" prot="protected" static="no" mutable="no">
        <type>coords_type</type>
        <definition>coords_type cur_coords_</definition>
        <argsstring></argsstring>
        <name>cur_coords_</name>
        <briefdescription>
<para>current coordinates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1013" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1013" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" prot="protected" static="no" mutable="no">
        <type>const vector_type &amp;</type>
        <definition>const vector_type&amp; sizes_</definition>
        <argsstring></argsstring>
        <name>sizes_</name>
        <briefdescription>
<para>sizes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1014" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1014" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" prot="protected" static="no" mutable="no">
        <type>const vector_type &amp;</type>
        <definition>const vector_type&amp; strides_</definition>
        <argsstring></argsstring>
        <name>strides_</name>
        <briefdescription>
<para>strides. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1015" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1015" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_d_o_1_1_range_iterator_base_1adc52b9a89f713950bde219e658905261" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool stop_</definition>
        <argsstring></argsstring>
        <name>stop_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1016" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1016" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1aceb239ee1378f3ce3f078ecfb07d0989" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RangeIteratorBase</definition>
        <argsstring>(pointer pos, const coords_type &amp;coords, const vector_type &amp;sizes, const vector_type &amp;strides, bool stop)</argsstring>
        <name>RangeIteratorBase</name>
        <param>
          <type>pointer</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>const coords_type &amp;</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>const vector_type &amp;</type>
          <declname>sizes</declname>
        </param>
        <param>
          <type>const vector_type &amp;</type>
          <declname>strides</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stop</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="916" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="908" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a8e4ae9a334bff2158857557c1d26b390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>RangeIteratorBase</definition>
        <argsstring>(const self_type &amp;l)</argsstring>
        <name>RangeIteratorBase</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
          <declname>l</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="922" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="918" bodyend="922"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1aa149c2249879e7727f33688b76bf2c99" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator*</definition>
        <argsstring>() const </argsstring>
        <name>operator*</name>
        <briefdescription>
<para>Dereferencing operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="927" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="926" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>pointer</type>
        <definition>pointer operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
<para>Dereferencing operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="930" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="929" bodyend="930"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a6b17c884f5a18c847944e567d71ad97e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator()</definition>
        <argsstring>(int i, int j) const </argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Special dereferencing operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="933" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="932" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a5755d4768b1c9721e052999ee4f7aa11" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator()</definition>
        <argsstring>(int i, int j, int k) const </argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Special dereferencing operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="936" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="935" bodyend="936"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1afa077c4f1e1d6c36024842404b8574bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference operator()</definition>
        <argsstring>(const vector_type &amp;t) const </argsstring>
        <name>operator()</name>
        <param>
          <type>const vector_type &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>Special dereferencing operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="939" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="938" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a4fba766bcdf579e201e6ccc83e64f790" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>reference</type>
        <definition>reference delta</definition>
        <argsstring>(int i, int di, int j, int dj) const </argsstring>
        <name>delta</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <param>
          <type>int</type>
          <declname>di</declname>
        </param>
        <param>
          <type>int</type>
          <declname>j</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dj</declname>
        </param>
        <briefdescription>
<para>Special dereferencing operator (mostly for the hessian matrix). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="946" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="945" bodyend="946"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1adbb11983bbd38288c38b34f3ba66ed5a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>I</declname>
            <defname>I</defname>
          </param>
          <param>
            <type>int</type>
            <declname>J</declname>
            <defname>J</defname>
          </param>
        </templateparamlist>
        <type>reference</type>
        <definition>reference delta</definition>
        <argsstring>(int di, int dj) const </argsstring>
        <name>delta</name>
        <param>
          <type>int</type>
          <declname>di</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dj</declname>
        </param>
        <briefdescription>
<para>Special dereferencing operator (mostly for the hessian matrix). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="950" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="949" bodyend="954"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a9c808e11699e1a2d9f806f3bdd829ae7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>Axis</declname>
            <defname>Axis</defname>
          </param>
        </templateparamlist>
        <type><ref refid="class_d_o_1_1_axis_iterator" kindref="compound">AxisIterator</ref>&lt; IsConst, T, Axis, N &gt;</type>
        <definition>AxisIterator&lt;IsConst, T, Axis, N&gt; axis</definition>
        <argsstring>()</argsstring>
        <name>axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Axis iterator getter. The axes matches with the Cartesian view if the data is stored in a row major fashion. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="961" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="960" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a73957d210565fc1dcf018c748cc7942c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_axis_iterator" kindref="compound">x_iterator</ref></type>
        <definition>x_iterator x</definition>
        <argsstring>()</argsstring>
        <name>x</name>
        <briefdescription>
<para>X-axis iterator getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="966" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="966" bodyend="966"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1af33cd0d6e05af68f0f5d58c905493f7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_axis_iterator" kindref="compound">y_iterator</ref></type>
        <definition>y_iterator y</definition>
        <argsstring>()</argsstring>
        <name>y</name>
        <briefdescription>
<para>Y-axis iterator getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="968" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="968" bodyend="968"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a67d32d4fcfd807176852b6dfbaa11f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_d_o_1_1_axis_iterator" kindref="compound">z_iterator</ref></type>
        <definition>z_iterator z</definition>
        <argsstring>()</argsstring>
        <name>z</name>
        <briefdescription>
<para>Z-Axis iterator getter. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="970" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="970" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(const self_type &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="975" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="974" bodyend="975"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1ad3e7caef9082dd2b3f65ea3867336476" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator==</definition>
        <argsstring>(pointer pos) const </argsstring>
        <name>operator==</name>
        <param>
          <type>pointer</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Equality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="978" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="977" bodyend="978"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1afc84f4470aad70894501ebf4900b374f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(const self_type &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="class_d_o_1_1_range_iterator_base" kindref="compound">self_type</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="981" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="980" bodyend="981"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1ac966afbaec9c16d1cc1bb6819810ab10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator!=</definition>
        <argsstring>(pointer pos) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>pointer</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Inequality operator. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="984" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="983" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const coords_type &amp;</type>
        <definition>const coords_type&amp; coords</definition>
        <argsstring>() const </argsstring>
        <name>coords</name>
        <briefdescription>
<para>Get the current coordinates. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="989" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="988" bodyend="989"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const vector_type &amp;</type>
        <definition>const vector_type&amp; sizes</definition>
        <argsstring>() const </argsstring>
        <name>sizes</name>
        <briefdescription>
<para>Get the sizes. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="992" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="991" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1ab243ad95876992f71bfc9043b9a713bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int size</definition>
        <argsstring>(int i) const </argsstring>
        <name>size</name>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Get the size of the i-th dimension. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="995" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="994" bodyend="995"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1a4f69d9df692bff019419ca9b3b656c7f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check</definition>
        <argsstring>() const </argsstring>
        <name>check</name>
        <briefdescription>
<para>Debugging method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="998" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="997" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_range_iterator_base_1aad7f0d952b12caba65ea4fa3043d2411" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void check_strides</definition>
        <argsstring>() const </argsstring>
        <name>check_strides</name>
        <briefdescription>
<para>Debugging method. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="1005" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="1004" bodyend="1009"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>N-dimensional iterator class. In any case the &apos;Locator2&apos; class is a heavy object. It is slower than the &apos;Locator&apos; class for incremental iteration. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="501">
        <label>SubrangeIterator&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_subrange_iterator"/>
        <childnode refid="498" relation="public-inheritance">
        </childnode>
      </node>
      <node id="499">
        <label>iterator&lt;std::random_access_iterator_tag, T, std::ptrdiff_t, Meta::Choose&lt; IsConst , const T *, T *&gt;::Type, Meta::Choose&lt; IsConst , const T&amp;, T&amp;&gt;::Type&gt;</label>
      </node>
      <node id="498">
        <label>RangeIteratorBase&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_range_iterator_base"/>
        <childnode refid="499" relation="public-inheritance">
        </childnode>
      </node>
      <node id="500">
        <label>RangeIterator&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_range_iterator"/>
        <childnode refid="498" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="503">
        <label>iterator&lt;std::random_access_iterator_tag, T, std::ptrdiff_t, Meta::Choose&lt; IsConst , const T *, T *&gt;::Type, Meta::Choose&lt; IsConst , const T&amp;, T&amp;&gt;::Type&gt;</label>
      </node>
      <node id="502">
        <label>RangeIteratorBase&lt; IsConst, T, N, StorageOrder &gt;</label>
        <link refid="class_d_o_1_1_range_iterator_base"/>
        <childnode refid="503" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="894" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="893" bodyend="1017"/>
    <listofallmembers>
      <member refid="class_d_o_1_1_range_iterator_base_1a9c808e11699e1a2d9f806f3bdd829ae7" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>axis</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a0dda3d099be46b4f4d24899245b9e216" prot="private" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>base_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a4f69d9df692bff019419ca9b3b656c7f" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>check</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aad7f0d952b12caba65ea4fa3043d2411" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>check_strides</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>coords</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1af94cd6f98815d838c630d458ffbd5d88" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>coords_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" prot="protected" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>cur_coords_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" prot="protected" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>cur_pos_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a4fba766bcdf579e201e6ccc83e64f790" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>delta</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1adbb11983bbd38288c38b34f3ba66ed5a" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>delta</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a7f1b8fde63313dfc323ad4f7cb81b188" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>difference_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a4ac840b4eee6b513081e58a865f59c88" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>iterator_category</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1ae0fad1d0505b8ef2c9c121853fe62d76" prot="private" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>offset</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1afc84f4470aad70894501ebf4900b374f" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1ac966afbaec9c16d1cc1bb6819810ab10" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a6b17c884f5a18c847944e567d71ad97e" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a5755d4768b1c9721e052999ee4f7aa11" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1afa077c4f1e1d6c36024842404b8574bd" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aa149c2249879e7727f33688b76bf2c99" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator*</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator-&gt;</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1ad3e7caef9082dd2b3f65ea3867336476" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a68ecfc7edab9c677fab5affc459305f2" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>pointer</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aceb239ee1378f3ce3f078ecfb07d0989" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>RangeIteratorBase</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a8e4ae9a334bff2158857557c1d26b390" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>RangeIteratorBase</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aa5c002ab42a75cdabd182cdde72b474f" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>reference</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a4c7a1431ef6caec23ef603d93da7be24" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>self_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1ab243ad95876992f71bfc9043b9a713bd" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>size</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>sizes</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" prot="protected" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>sizes_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1adc52b9a89f713950bde219e658905261" prot="protected" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>stop_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" prot="protected" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>strides_</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1afabdc9b5f48b286e2d7676557d2b66ed" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>value_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1aacf98e49e90f9aeead0ff8885fae3ac7" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>vector_type</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a73957d210565fc1dcf018c748cc7942c" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>x</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a111124f64347b08446fa9e42742afab7" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>x_iterator</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1af33cd0d6e05af68f0f5d58c905493f7c" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>y</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a36a0bd2bff9cd50874741e23b1d1003f" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>y_iterator</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a67d32d4fcfd807176852b6dfbaa11f74" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>z</name></member>
      <member refid="class_d_o_1_1_range_iterator_base_1a194e30682c3df76f852e97b4096f6dc6" prot="public" virt="non-virtual"><scope>DO::RangeIteratorBase</scope><name>z_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
