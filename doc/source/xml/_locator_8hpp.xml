<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_locator_8hpp" kind="file">
    <compoundname>Locator.hpp</compoundname>
    <includes refid="_static_assert_8hpp" local="yes">StaticAssert.hpp</includes>
    <includes refid="_meta_8hpp" local="yes">Meta.hpp</includes>
    <includes refid="_eigen_extension_8hpp" local="yes">EigenExtension.hpp</includes>
    <includes local="no">iterator</includes>
    <includes local="no">iostream</includes>
    <includedby refid="_multi_array_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp</includedby>
    <includedby refid="_core_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</includedby>
    <incdepgraph>
      <node id="174">
        <label>iterator</label>
      </node>
      <node id="172">
        <label>Eigen/Eigen</label>
      </node>
      <node id="168">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp</label>
        <link refid="Locator.hpp"/>
        <childnode refid="169" relation="include">
        </childnode>
        <childnode refid="170" relation="include">
        </childnode>
        <childnode refid="171" relation="include">
        </childnode>
        <childnode refid="174" relation="include">
        </childnode>
        <childnode refid="175" relation="include">
        </childnode>
      </node>
      <node id="170">
        <label>Meta.hpp</label>
        <link refid="_meta_8hpp"/>
      </node>
      <node id="169">
        <label>StaticAssert.hpp</label>
        <link refid="_static_assert_8hpp"/>
      </node>
      <node id="173">
        <label>sstream</label>
      </node>
      <node id="171">
        <label>EigenExtension.hpp</label>
        <link refid="_eigen_extension_8hpp"/>
        <childnode refid="172" relation="include">
        </childnode>
        <childnode refid="173" relation="include">
        </childnode>
      </node>
      <node id="175">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="194">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp</label>
        <link refid="_graphics_utilities_8hpp"/>
      </node>
      <node id="188">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree.hpp</label>
        <link refid="_k_d_tree_8hpp_source"/>
      </node>
      <node id="190">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp</label>
        <link refid="_draw_polygon_8hpp_source"/>
        <childnode refid="191" relation="include">
        </childnode>
      </node>
      <node id="192">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry.hpp</label>
        <link refid="_geometry_8hpp_source"/>
      </node>
      <node id="193">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/DerivedQObjects/GraphicsApplicationImpl.hpp</label>
        <link refid="_graphics_application_impl_8hpp"/>
        <childnode refid="194" relation="include">
        </childnode>
      </node>
      <node id="177">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/MultiArray.hpp</label>
        <link refid="_multi_array_8hpp"/>
        <childnode refid="178" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
      <node id="183">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features.hpp</label>
        <link refid="_features_8hpp"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="178">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp</label>
        <link refid="_image_8hpp"/>
        <childnode refid="179" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
        <childnode refid="189" relation="include">
        </childnode>
        <childnode refid="195" relation="include">
        </childnode>
      </node>
      <node id="196">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing.hpp</label>
        <link refid="_image_drawing_8hpp_source"/>
      </node>
      <node id="176">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp</label>
        <link refid="Locator.hpp"/>
        <childnode refid="177" relation="include">
        </childnode>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
      <node id="184">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors.hpp</label>
        <link refid="_feature_descriptors_8hpp"/>
      </node>
      <node id="185">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors.hpp</label>
        <link refid="_feature_detectors_8hpp"/>
      </node>
      <node id="179">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp</label>
        <link refid="_subimage_8hpp"/>
        <childnode refid="180" relation="include">
        </childnode>
      </node>
      <node id="182">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp</label>
        <link refid="_view_8hpp"/>
      </node>
      <node id="186">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing.hpp</label>
        <link refid="_image_processing_8hpp"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
      </node>
      <node id="180">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="181" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="183" relation="include">
        </childnode>
        <childnode refid="186" relation="include">
        </childnode>
        <childnode refid="187" relation="include">
        </childnode>
      </node>
      <node id="191">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics.hpp</label>
        <link refid="_geometry_2_graphics_8hpp_source"/>
        <childnode refid="192" relation="include">
        </childnode>
      </node>
      <node id="181">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/FeatureItem.hpp</label>
        <link refid="_feature_item_8hpp_source"/>
      </node>
      <node id="195">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp</label>
        <link refid="_image_drawing_2_image_i_o_8hpp_source"/>
        <childnode refid="196" relation="include">
        </childnode>
      </node>
      <node id="189">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics.hpp</label>
        <link refid="_graphics_8hpp"/>
        <childnode refid="184" relation="include">
        </childnode>
        <childnode refid="185" relation="include">
        </childnode>
        <childnode refid="182" relation="include">
        </childnode>
        <childnode refid="190" relation="include">
        </childnode>
        <childnode refid="193" relation="include">
        </childnode>
      </node>
      <node id="187">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree/KDTree.hpp</label>
        <link refid="_k_d_tree_2_k_d_tree_8hpp_source"/>
        <childnode refid="188" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_o_1_1_offset" prot="public">DO::Offset</innerclass>
    <innerclass refid="struct_d_o_1_1_offset2" prot="public">DO::Offset2</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4" prot="public">DO::Offset&lt; N, RowMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4" prot="public">DO::Offset&lt; 1, RowMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4" prot="public">DO::Offset&lt; N, ColMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4" prot="public">DO::Offset&lt; 1, ColMajor &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_offset2" prot="public">DO::Offset2</innerclass>
    <innerclass refid="struct_d_o_1_1_offset2_3_011_01_4" prot="public">DO::Offset2&lt; 1 &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_axis_iterator" prot="public">DO::AxisIterator</innerclass>
    <innerclass refid="class_d_o_1_1_range_iterator_base" prot="public">DO::RangeIteratorBase</innerclass>
    <innerclass refid="class_d_o_1_1_range_iterator" prot="public">DO::RangeIterator</innerclass>
    <innerclass refid="class_d_o_1_1_subrange_iterator" prot="public">DO::SubrangeIterator</innerclass>
    <innerclass refid="class_d_o_1_1_coords_iterator" prot="public">DO::CoordsIterator</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___locator_1ga4b163dc010e22d5ad597d78fbff447f6" prot="public" static="no">
        <name>ITERATOR_BASE_TYPE</name>
        <param><defname>IsConst</defname></param>
        <initializer>std::iterator&lt;std::random_access_iterator_tag, T, std::ptrdiff_t, \
    typename Meta::Choose&lt;IsConst, const T *, T *&gt;::Type,           \
    typename Meta::Choose&lt;IsConst, const T&amp;, T&amp;&gt;::Type&gt;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="763" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="760" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___locator_1gaf8b2ed23c6d577cce5b244460bedb876" prot="public" static="no">
        <name>TYPEDEF_ITERATOR_TYPES</name>
        <param><defname>IteratorType</defname></param>
        <initializer>typedef typename base_type::value_type value_type;              \
  typedef typename base_type::difference_type difference_type;    \
  typedef typename base_type::pointer pointer;                    \
  typedef typename base_type::reference reference;                \
  typedef typename base_type::iterator_category iterator_category</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" line="770" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp" bodystart="765" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of N-dimensional iterators. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_CORE_LOCATOR_HPP</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_CORE_LOCATOR_HPP</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_static_assert_8hpp" kindref="compound" tooltip="Implementation from: http://stackoverflow.com/questions/1980012/boost-static-assert-without-boost.">StaticAssert.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_meta_8hpp" kindref="compound">Meta.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_eigen_extension_8hpp" kindref="compound" tooltip="Eigen matrices and vector typedefs.">EigenExtension.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"></codeline>
<codeline lineno="32" refid="struct_d_o_1_1_offset" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder<sp/>=<sp/>RowMajor&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset</ref>;</highlight></codeline>
<codeline lineno="33" refid="struct_d_o_1_1_offset2" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_offset2" kindref="compound">Offset2</ref>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="38" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset</ref>&lt;N,<sp/>RowMajor&gt;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="41" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1aea3de4635d641f6f73a4362e52c4e6c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(N<sp/>&gt;<sp/>0,<sp/>N_MUST_BE_POSITIVE);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="45" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a156c0b86b1e62dfdfe3f957ef54c619c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>coords[N-1]<sp/>+<sp/>size[N-1]*<ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, RowMajor&gt;::eval</ref>(coords,<sp/>size);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="53" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1affb094f082ace3f8d9949275933b888b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(Index<sp/>i,<sp/>Index<sp/>j,<sp/>Index<sp/>size1,<sp/>Index<sp/>size2)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i*size2<sp/>+<sp/>j;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="61" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1aa4c5802a75e5a07cc68e458b9242f8a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(Index<sp/>i,<sp/>Index<sp/>j,<sp/>Index<sp/>k,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>size1,<sp/>Index<sp/>size2,<sp/>Index<sp/>size3)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(i*size2<sp/>+<sp/>j)<sp/>*<sp/>size3<sp/>+<sp/>k;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="72" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1ad02911d67da0ad2bcf95bf5957f37553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_strides(Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strides[N-1]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>N-2;<sp/>i<sp/>&gt;=<sp/>0;<sp/>--i)</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strides[i]<sp/>=<sp/>strides[i+1]*size[i+1];</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="82" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a0b52d46c505c64599af0ed217401d2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset(Index<sp/>*coords,<sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(int<sp/>i<sp/>=<sp/>N-1;<sp/>i<sp/>&gt;<sp/>1;<sp/>--i)</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords[i]<sp/>=<sp/>offset<sp/>%<sp/>dims[i];</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>(offset<sp/>-<sp/>coords[i])/dims[i];</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>coords[0]<sp/>=<sp/>(offset<sp/>-<sp/>coords[1])<sp/>/<sp/>dims[1];*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, RowMajor&gt;::eval_coords_from_offset_</ref>(coords+N-1,<sp/>offset,<sp/>dims+N-1);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="97" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1aacfaf9567f24a89ec57f519c3eaba471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset_(Index<sp/>*coords,<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>offset<sp/>%<sp/>*dims;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>(offset<sp/>-<sp/>*coords)<sp/>/<sp/>*dims;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--coords;<sp/>--dims;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, RowMajor&gt;::eval_coords_from_off_</ref>(coords,<sp/>offset,<sp/>dims);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="108" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a197c87541b2f7ceca6df994e3f933dca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>axis<sp/>=<sp/>n-1;<sp/>axis<sp/>&gt;=<sp/>0;<sp/>--axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>++coords[axis];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(coords[axis]<sp/>&lt;<sp/>size[axis])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>coords[axis]<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, RowMajor&gt;::increment_coords_</ref>(coords+N-1,<sp/>size+N-1,<sp/>stop);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="124" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a5e4f52f6fce1f306223b7efda4ea1186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*coords<sp/>&lt;<sp/>*size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>!=<sp/>*size)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--coords;<sp/>--size;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1&gt;::increment_coords_</ref>(coords,<sp/>size,<sp/>stop);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="138" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a03d8bb7719e368c749c854315197a6ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, RowMajor&gt;::increment_coords_</ref>(coords+N-1,<sp/>start+N-1,<sp/>end+N-1,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="147" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a8953400b698926cd8d544cec97ed6927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*start<sp/>&lt;=<sp/>*coords<sp/>&amp;&amp;<sp/>*coords<sp/>&lt;<sp/>*end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>!=<sp/>*end)</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>*start;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--coords;<sp/>--start;<sp/>--end;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, RowMajor&gt;::increment_coords_</ref>(coords,<sp/>start,<sp/>end,<sp/>stop);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="162" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1aa2c7a84c84fd8cafee697efb4db62c42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>axis<sp/>=<sp/>N-1;<sp/>axis<sp/>&gt;=<sp/>0;<sp/>--axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(coords[axis]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>coords[axis]<sp/>!=<sp/>size[axis])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>--coords[axis];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>coords[axis]<sp/>=<sp/>size[axis]-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, RowMajor&gt;::decrement_coords_</ref>(coords+N-1,<sp/>size+N-1,<sp/>stop);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="180" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a4b61b1eedc0e83692372a953a637b576" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>0<sp/>&lt;=<sp/>*coords<sp/>&amp;&amp;<sp/>*coords<sp/>&lt;<sp/>*size</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>*size-1;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--coords;<sp/>--size;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1&gt;::decrement_coords_</ref>(coords,<sp/>size,<sp/>stop);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="196" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a1d543cc7b3cbf75393b4fe8539fd059a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>(int<sp/>axis<sp/>=<sp/>N-1;<sp/>axis<sp/>&gt;=<sp/>0;<sp/>--axis)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(coords[axis]<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>coords[axis]<sp/>!=<sp/>size[axis])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>--coords[axis];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>coords[axis]<sp/>=<sp/>size[axis]-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, RowMajor&gt;::decrement_coords_</ref>(coords+N-1,<sp/>start+N-1,<sp/>end+N-1,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="216" refid="struct_d_o_1_1_offset_3_01_n_00_01_row_major_01_4_1a8b30f9594b8ab4d69bb830cb137dc3d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*start<sp/>&lt;=<sp/>*coords<sp/>&amp;&amp;<sp/>*coords<sp/>&lt;<sp/>*end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>&gt;<sp/>*start)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>*end-1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--coords;<sp/>--start;<sp/>--end;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1&gt;::decrement_coords_</ref>(coords,<sp/>start,<sp/>end,<sp/>stop);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="236" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset</ref>&lt;1,<sp/>RowMajor&gt;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="240" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a1ffa69ab4cc1df64eaa174cfbfb1839d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*coords;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="248" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1ad02911d67da0ad2bcf95bf5957f37553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_strides(Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*strides<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="256" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a0b52d46c505c64599af0ed217401d2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset(Index<sp/>*coords,<sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="265" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1aacfaf9567f24a89ec57f519c3eaba471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset_(Index<sp/>*coords,<sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>(offset<sp/>-<sp/>*(coords+1))<sp/>/<sp/>*(dims+1);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="272" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a197c87541b2f7ceca6df994e3f933dca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*size-1)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="286" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a5e4f52f6fce1f306223b7efda4ea1186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*size-1)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="298" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a03d8bb7719e368c749c854315197a6ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*end-1)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="313" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a8953400b698926cd8d544cec97ed6927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*end-1)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="326" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1aa2c7a84c84fd8cafee697efb4db62c42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="340" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a4b61b1eedc0e83692372a953a637b576" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="352" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a1d543cc7b3cbf75393b4fe8539fd059a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="367" refid="struct_d_o_1_1_offset_3_011_00_01_row_major_01_4_1a8b30f9594b8ab4d69bb830cb137dc3d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*start)</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="383" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset</ref>&lt;N,<sp/>ColMajor&gt;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="386" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1aea3de4635d641f6f73a4362e52c4e6c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(N<sp/>&gt;<sp/>0,<sp/>N_MUST_BE_POSITIVE);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="390" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a156c0b86b1e62dfdfe3f957ef54c619c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*coords)<sp/>+<sp/>(*size)*<ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, ColMajor&gt;::eval</ref>(coords+1,<sp/>size+1);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="398" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1affb094f082ace3f8d9949275933b888b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(Index<sp/>i,<sp/>Index<sp/>j,<sp/>Index<sp/>size1,<sp/>Index<sp/>size2)</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>+<sp/>j*size1;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="406" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1aa4c5802a75e5a07cc68e458b9242f8a2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(Index<sp/>i,<sp/>Index<sp/>j,<sp/>Index<sp/>k,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>size1,<sp/>Index<sp/>size2,<sp/>Index<sp/>size3)</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i<sp/>+<sp/>size1<sp/>*<sp/>(j<sp/>+<sp/>k*size2);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="415" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1ad02911d67da0ad2bcf95bf5957f37553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_strides(Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size)</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strides[0]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strides[i]<sp/>=<sp/>strides[i-1]*size[i-1];</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="425" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a0b52d46c505c64599af0ed217401d2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset(Index<sp/>*coords,<sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N-1;<sp/>++i)</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords[i]<sp/>=<sp/>offset<sp/>%<sp/>dims[i];</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>(offset<sp/>-<sp/>coords[i])/dims[i];</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>coords[N-1]<sp/>=<sp/>(offset<sp/>-<sp/>coords[N-2])<sp/>/<sp/>dims[N-2];*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, ColMajor&gt;::eval_coords_from_offset_</ref>(coords,<sp/>offset,<sp/>dims);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="440" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1aacfaf9567f24a89ec57f519c3eaba471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset_(Index<sp/>*coords,<sp/></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>offset<sp/>%<sp/>*dims;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>(offset<sp/>-<sp/>*coords)<sp/>/<sp/>*dims;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++coords;<sp/>++dims;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, ColMajor&gt;::eval_coords_from_offset_</ref>(coords,<sp/>offset,<sp/>dims);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="451" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a197c87541b2f7ceca6df994e3f933dca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>axis<sp/>=<sp/>0;<sp/>axis<sp/>&lt;<sp/>N;<sp/>++axis,<sp/>++coords,<sp/>++size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(*coords<sp/>&lt;<sp/>*size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>0;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, ColMajor&gt;::increment_coords_</ref>(coords,<sp/>size,<sp/>stop);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="467" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a5e4f52f6fce1f306223b7efda4ea1186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>&lt;<sp/>*size)</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++coords;<sp/>++size;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, ColMajor&gt;::increment_coords_</ref>(coords,<sp/>size,<sp/>stop);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="479" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a03d8bb7719e368c749c854315197a6ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, ColMajor&gt;::increment_coords_</ref>(coords,<sp/>start,<sp/>end,<sp/>stop);</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="487" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a8953400b698926cd8d544cec97ed6927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*start<sp/>&lt;=<sp/>*coords<sp/>&amp;&amp;<sp/>*coords<sp/>&lt;<sp/>*end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>!=<sp/>*end)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>*start;</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++coords;<sp/>++start;<sp/>++end;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, ColMajor&gt;::increment_coords_</ref>(coords,<sp/>start,<sp/>end,<sp/>stop);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="502" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1aa2c7a84c84fd8cafee697efb4db62c42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>axis<sp/>=<sp/>0;<sp/>axis<sp/>&lt;<sp/>N;<sp/>++axis,<sp/>++coords,<sp/>++size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(*coords<sp/>&gt;<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>break;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>*size-1;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, ColMajor&gt;::decrement_coords_</ref>(coords,<sp/>size,<sp/>stop);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="520" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a4b61b1eedc0e83692372a953a637b576" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>*size<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++coords;<sp/>++size;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, ColMajor&gt;::decrement_coords_</ref>(coords,<sp/>size,<sp/>stop);</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="534" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a1d543cc7b3cbf75393b4fe8539fd059a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, ColMajor&gt;::decrement_coords_</ref>(coords,<sp/>start,<sp/>end,<sp/>stop);</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="542" refid="struct_d_o_1_1_offset_3_01_n_00_01_col_major_01_4_1a8b30f9594b8ab4d69bb830cb137dc3d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*start<sp/>&lt;=<sp/>*coords<sp/>&amp;&amp;<sp/>*coords<sp/>&lt;<sp/>*end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>&gt;<sp/>*start)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>*end-1;</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++coords;<sp/>++start;<sp/>++end;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N-1, ColMajor&gt;::decrement_coords_</ref>(coords,<sp/>start,<sp/>end,<sp/>stop);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="562" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset</ref>&lt;1,<sp/>ColMajor&gt;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="566" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a1ffa69ab4cc1df64eaa174cfbfb1839d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*coords;<sp/></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="574" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1ad02911d67da0ad2bcf95bf5957f37553" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_strides(Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size)</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*strides<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="582" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a0b52d46c505c64599af0ed217401d2fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset(Index<sp/>*coords,<sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>offset;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="591" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1aacfaf9567f24a89ec57f519c3eaba471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>eval_coords_from_offset_(Index<sp/>*coords,<sp/>Index<sp/>offset,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*dims)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*coords<sp/>=<sp/>(offset<sp/>-<sp/>*(coords-1))<sp/>/<sp/>*(dims-1);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="598" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a197c87541b2f7ceca6df994e3f933dca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*size-1)</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="612" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a5e4f52f6fce1f306223b7efda4ea1186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*size-1)</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="624" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a03d8bb7719e368c749c854315197a6ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*end-1)</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="639" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a8953400b698926cd8d544cec97ed6927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>increment_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*start<sp/>&lt;=<sp/>*coords<sp/>&amp;&amp;<sp/>*coords<sp/>&lt;<sp/>*end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*end-1)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++(*coords);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="654" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1aa2c7a84c84fd8cafee697efb4db62c42" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="668" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a4b61b1eedc0e83692372a953a637b576" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*size,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="680" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a1d543cc7b3cbf75393b4fe8539fd059a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*start)</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="695" refid="struct_d_o_1_1_offset_3_011_00_01_col_major_01_4_1a8b30f9594b8ab4d69bb830cb137dc3d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>decrement_coords_(Index<sp/>*coords,</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*end,</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">&amp;<sp/>stop)</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>precondition:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>*start<sp/>&lt;=<sp/>*coords<sp/>&amp;&amp;<sp/>*coords<sp/>&lt;<sp/>*end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*coords<sp/>==<sp/>*start)</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--(*coords);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Offset2</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">er,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance(Pointer&amp;<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*t)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>*strides++<sp/>*<sp/>*t++;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Offset2&lt;N-1&gt;::advance(p,<sp/>strides,<sp/>t);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">er,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverse(Pointer&amp;<sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*t)</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>-=<sp/>*strides++<sp/>*<sp/>*t++;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Offset2&lt;N-1&gt;::reverse(pos,<sp/>strides,<sp/>t);</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*strides)</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*coords)*(*strides)+Offset2&lt;N-1&gt;::eval(coords+1,<sp/>strides+1);</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="737" refid="struct_d_o_1_1_offset2_3_011_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_offset2" kindref="compound">Offset2</ref>&lt;1&gt;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">er,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>advance(Pointer&amp;<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*t)</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>+=<sp/>*strides<sp/>*<sp/>*t;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Po</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">er,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reverse(Pointer&amp;<sp/>ptr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*t)</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(std::numeric_limits&lt;Index&gt;::is_integer,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INDEX_MUST_BE_INTEGRAL);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>-=<sp/>*strides<sp/>*<sp/>*t;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Index&gt;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Index<sp/>eval(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*coords,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>*strides)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*coords)*(*strides);</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ITERATOR_BASE_TYPE(IsConst)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="761"><highlight class="preprocessor"><sp/><sp/>std::iterator&lt;std::random_access_iterator_tag,<sp/>T,<sp/>std::ptrdiff_t,<sp/>\</highlight></codeline>
<codeline lineno="762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>Meta::Choose&lt;IsConst,<sp/>const<sp/>T<sp/>*,<sp/>T<sp/>*&gt;::Type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typename<sp/>Meta::Choose&lt;IsConst,<sp/>const<sp/>T&amp;,<sp/>T&amp;&gt;::Type&gt;</highlight></codeline>
<codeline lineno="764"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TYPEDEF_ITERATOR_TYPES(IteratorType)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="766"><highlight class="preprocessor"><sp/><sp/>typedef<sp/>typename<sp/>base_type::value_type<sp/>value_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="767"><highlight class="preprocessor"><sp/><sp/>typedef<sp/>typename<sp/>base_type::difference_type<sp/>difference_type;<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="768"><highlight class="preprocessor"><sp/><sp/>typedef<sp/>typename<sp/>base_type::pointer<sp/>pointer;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="769"><highlight class="preprocessor"><sp/><sp/>typedef<sp/>typename<sp/>base_type::reference<sp/>reference;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="770"><highlight class="preprocessor"><sp/><sp/>typedef<sp/>typename<sp/>base_type::iterator_category<sp/>iterator_category</highlight></codeline>
<codeline lineno="771"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsConst,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Axis,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="774" refid="class_d_o_1_1_axis_iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ITERATOR_BASE_TYPE(IsConst)</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(Axis<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>Axis<sp/>&lt;<sp/>N,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>AXIS_MUST_BE_NONNEGATIVE_AND_LESS_THAN_N);</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ITERATOR_BASE_TYPE(IsConst)<sp/>base_type;</highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>STL-like<sp/>typedefs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPEDEF_ITERATOR_TYPES(base_type);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator</ref><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref>;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;int,<sp/>N,<sp/>1&gt;<sp/>coords_type,<sp/>vector_type;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/>coords_reference;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>pointer&amp;<sp/>pointer_reference;</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>interface<sp/>*/</highlight></codeline>
<codeline lineno="789" refid="class_d_o_1_1_axis_iterator_1a160239099dab920a25e35d660c7d38d1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator_1a160239099dab920a25e35d660c7d38d1" kindref="member" tooltip="Constructor.">AxisIterator</ref>(pointer_reference<sp/>pos,<sp/>coords_reference<sp/>coords,<sp/></highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>strides,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_axis_iterator_1ab8e4e3e2a7bf18888b71bdf9dda0770b" kindref="member" tooltip="Constant size accessor.">size</ref>)</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pos_(pos),<sp/>coords_(coords),<sp/>strides_(strides),<sp/>sizes_(size)<sp/>{}</highlight></codeline>
<codeline lineno="793" refid="class_d_o_1_1_axis_iterator_1a94cc353f1334b1d367d4df72ceb61071" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator_1a160239099dab920a25e35d660c7d38d1" kindref="member" tooltip="Constructor.">AxisIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref>&amp;<sp/>it)</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>pos_(it.pos_),<sp/>coords_(it.coords_)</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>strides_(it.strides_),<sp/>sizes_(it.sizes_)<sp/>{}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>dereferencing,<sp/>access<sp/>functions.<sp/>*/</highlight></codeline>
<codeline lineno="799" refid="class_d_o_1_1_axis_iterator_1aa149c2249879e7727f33688b76bf2c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_axis_iterator_1aa149c2249879e7727f33688b76bf2c99" kindref="member" tooltip="Dereferencing operator.">operator*</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="800"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pos_;<sp/>}</highlight></codeline>
<codeline lineno="802" refid="class_d_o_1_1_axis_iterator_1a33ce448509e9cc0d73861e4c1919c7a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pointer<sp/><ref refid="class_d_o_1_1_axis_iterator_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member" tooltip="Dereferencing operator.">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="803"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_;<sp/>}</highlight></codeline>
<codeline lineno="805" refid="class_d_o_1_1_axis_iterator_1a32d919fd1ac974efa89582486e7752de" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_axis_iterator_1a32d919fd1ac974efa89582486e7752de" kindref="member" tooltip="Access operator.">operator[]</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="806"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords_[Axis]+n<sp/>&gt;=<sp/>0<sp/><sp/>&amp;&amp;<sp/>coords_[Axis]+n<sp/>&lt;<sp/>sizes_[Axis])</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(pos_+strides_[Axis]*n);</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pos_;</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>comparison<sp/>functions.<sp/>*/</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="815" refid="class_d_o_1_1_axis_iterator_1a74e10c48af258faf471b5ff616c6395a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator_1a74e10c48af258faf471b5ff616c6395a" kindref="member" tooltip="Equality operator.">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Iterator&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="816"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_<sp/>==<sp/>rhs.operator-&gt;();<sp/>}</highlight></codeline>
<codeline lineno="818" refid="class_d_o_1_1_axis_iterator_1ad3e7caef9082dd2b3f65ea3867336476" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator_1a74e10c48af258faf471b5ff616c6395a" kindref="member" tooltip="Equality operator.">operator==</ref>(pointer<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="819"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_<sp/>==<sp/>pos;<sp/>}</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Iterator&gt;</highlight></codeline>
<codeline lineno="822" refid="class_d_o_1_1_axis_iterator_1a46311058c789c83df9d72020c4334da7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator_1a46311058c789c83df9d72020c4334da7" kindref="member" tooltip="Inequality operator.">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Iterator&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="823"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_<sp/>!=<sp/>rhs.operator-&gt;();<sp/>}</highlight></codeline>
<codeline lineno="825" refid="class_d_o_1_1_axis_iterator_1ac966afbaec9c16d1cc1bb6819810ab10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator_1a46311058c789c83df9d72020c4334da7" kindref="member" tooltip="Inequality operator.">operator!=</ref>(pointer<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="826"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_<sp/>!=<sp/>pos;<sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>iterator<sp/>functionalities.<sp/>*/</highlight></codeline>
<codeline lineno="830" refid="class_d_o_1_1_axis_iterator_1a68c6d6abdde9fef27d6a4f2904212559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_axis_iterator_1a68c6d6abdde9fef27d6a4f2904212559" kindref="member" tooltip="Prefix increment operator.">operator++</ref>()</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords_[Axis]+1<sp/>&lt;<sp/>sizes_[Axis])</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_<sp/>+=<sp/>strides_[Axis];</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++coords_[Axis];</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="840" refid="class_d_o_1_1_axis_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_axis_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" kindref="member" tooltip="Prefix decrement operator.">operator--</ref>()</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords_[Axis]-1<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_<sp/>-=<sp/>strides_[Axis];</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--coords_[Axis];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850" refid="class_d_o_1_1_axis_iterator_1a39f7c37604fd9845ff487b36b6f88602" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref><sp/><ref refid="class_d_o_1_1_axis_iterator_1a68c6d6abdde9fef27d6a4f2904212559" kindref="member" tooltip="Prefix increment operator.">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><ref refid="class_d_o_1_1_axis_iterator_1a39f7c37604fd9845ff487b36b6f88602" kindref="member" tooltip="Postfix increment operator.">operator++</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="853" refid="class_d_o_1_1_axis_iterator_1ac8142815f977b8411faf27f7b8d804b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref><sp/><ref refid="class_d_o_1_1_axis_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" kindref="member" tooltip="Prefix decrement operator.">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><ref refid="class_d_o_1_1_axis_iterator_1ac8142815f977b8411faf27f7b8d804b3" kindref="member" tooltip="Postfix decrement operator.">operator--</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="856" refid="class_d_o_1_1_axis_iterator_1a2930986847b626523fbc0748b586fcdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_axis_iterator_1a2930986847b626523fbc0748b586fcdb" kindref="member" tooltip="Arithmetic operator.">operator+=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords_[Axis]+n<sp/>&gt;=<sp/>0<sp/><sp/>&amp;&amp;<sp/>coords_[Axis]+n<sp/>&lt;<sp/>sizes_[Axis])</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_<sp/>+=<sp/>strides_[Axis]*n;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords_[Axis]<sp/>+=<sp/>n;</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="866" refid="class_d_o_1_1_axis_iterator_1a742e3ed31b69f8f5dcf0b681f638b24b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_axis_iterator_1a742e3ed31b69f8f5dcf0b681f638b24b" kindref="member" tooltip="Arithmetic operator.">operator-=</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(coords_[Axis]-n<sp/>&gt;=<sp/>0<sp/><sp/>&amp;&amp;<sp/>coords_[Axis]-n<sp/>&lt;<sp/>sizes_[Axis])</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_<sp/>-=<sp/>strides_[Axis]*n;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coords_[Axis]<sp/>-=<sp/>n;</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>additional<sp/>functionalities.<sp/>*/</highlight></codeline>
<codeline lineno="878" refid="class_d_o_1_1_axis_iterator_1ab8e4e3e2a7bf18888b71bdf9dda0770b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator_1ab8e4e3e2a7bf18888b71bdf9dda0770b" kindref="member" tooltip="Constant size accessor.">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sizes_[Axis];<sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>data<sp/>members.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer_reference<sp/>pos_;<sp/></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>coords_reference<sp/>coords_;<sp/></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>strides_;<sp/></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>sizes_;<sp/></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsConst,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder<sp/>=<sp/>ColMajor&gt;</highlight></codeline>
<codeline lineno="893" refid="class_d_o_1_1_range_iterator_base" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">RangeIteratorBase</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ITERATOR_BASE_TYPE(IsConst)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, StorageOrder&gt;</ref><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">offset</ref>;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ITERATOR_BASE_TYPE(IsConst)<sp/>base_type;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>typedefs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPEDEF_ITERATOR_TYPES(base_type);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">RangeIteratorBase</ref><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;int,<sp/>N,<sp/>1&gt;<sp/>coords_type,<sp/>vector_type;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator&lt;IsConst, value_type, 0, N&gt;</ref><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">x_iterator</ref>;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator&lt;IsConst, value_type, 1, N&gt;</ref><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">y_iterator</ref>;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator&lt;IsConst, value_type, 2, N&gt;</ref><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">z_iterator</ref>;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>interface<sp/>*/</highlight></codeline>
<codeline lineno="908" refid="class_d_o_1_1_range_iterator_base_1aceb239ee1378f3ce3f078ecfb07d0989" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1aceb239ee1378f3ce3f078ecfb07d0989" kindref="member" tooltip="Constructor.">RangeIteratorBase</ref>(pointer<sp/>pos,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" kindref="member" tooltip="Get the current coordinates.">coords</ref>,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Get the sizes.">sizes</ref>,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>strides,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop)</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base_type()</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>(pos),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>(coords)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>(sizes),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>(strides)</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>stop_(stop)<sp/>{}</highlight></codeline>
<codeline lineno="918" refid="class_d_o_1_1_range_iterator_base_1a8e4ae9a334bff2158857557c1d26b390" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1aceb239ee1378f3ce3f078ecfb07d0989" kindref="member" tooltip="Constructor.">RangeIteratorBase</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base_type()</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>(l.<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>(l.<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>)</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>(l.<ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>(l.<ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>stop_(l.stop_)<sp/>{}</highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>dereferencing<sp/>functions.<sp/>*/</highlight></codeline>
<codeline lineno="926" refid="class_d_o_1_1_range_iterator_base_1aa149c2249879e7727f33688b76bf2c99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_range_iterator_base_1aa149c2249879e7727f33688b76bf2c99" kindref="member" tooltip="Dereferencing operator.">operator*</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="927"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="929" refid="class_d_o_1_1_range_iterator_base_1a33ce448509e9cc0d73861e4c1919c7a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>pointer<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a33ce448509e9cc0d73861e4c1919c7a7" kindref="member" tooltip="Dereferencing operator.">operator-&gt;</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="930"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="932" refid="class_d_o_1_1_range_iterator_base_1a6b17c884f5a18c847944e567d71ad97e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a6b17c884f5a18c847944e567d71ad97e" kindref="member" tooltip="Special dereferencing operator.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="933"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[0]*i<sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[1]*j);<sp/>}</highlight></codeline>
<codeline lineno="935" refid="class_d_o_1_1_range_iterator_base_1a5755d4768b1c9721e052999ee4f7aa11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a6b17c884f5a18c847944e567d71ad97e" kindref="member" tooltip="Special dereferencing operator.">operator()</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="936"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[0]*i<sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[1]*j<sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[2]*k);<sp/>}</highlight></codeline>
<codeline lineno="938" refid="class_d_o_1_1_range_iterator_base_1afa077c4f1e1d6c36024842404b8574bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a6b17c884f5a18c847944e567d71ad97e" kindref="member" tooltip="Special dereferencing operator.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>t)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="939"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>pos<sp/>=<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset2" kindref="compound">Offset2&lt;N&gt;::advance</ref>(pos,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>.data(),<sp/>t.data());</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*pos;</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="945" refid="class_d_o_1_1_range_iterator_base_1a4fba766bcdf579e201e6ccc83e64f790" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a4fba766bcdf579e201e6ccc83e64f790" kindref="member" tooltip="Special dereferencing operator (mostly for the hessian matrix).">delta</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>di,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dj)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="946"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[i]*di<sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[j]*dj);<sp/>}</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>I,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>J&gt;</highlight></codeline>
<codeline lineno="949" refid="class_d_o_1_1_range_iterator_base_1adbb11983bbd38288c38b34f3ba66ed5a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>reference<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a4fba766bcdf579e201e6ccc83e64f790" kindref="member" tooltip="Special dereferencing operator (mostly for the hessian matrix).">delta</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>di,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dj)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="950"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___meta_1ga2b69d33b4b707fde292f656c4e27b6a9" kindref="member" tooltip="Static assertion macro.">DO_STATIC_ASSERT</ref>(I<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>I<sp/>&lt;<sp/>N<sp/>&amp;&amp;<sp/>J<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>J<sp/>&lt;<sp/>N,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I_AND_J_MUST_BETWEEN_0_AND_N);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[I]*di<sp/>+<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>[J]*dj);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Axis&gt;</highlight></codeline>
<codeline lineno="960" refid="class_d_o_1_1_range_iterator_base_1a9c808e11699e1a2d9f806f3bdd829ae7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator&lt;IsConst, T, Axis, N&gt;</ref><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a9c808e11699e1a2d9f806f3bdd829ae7" kindref="member">axis</ref>()</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">AxisIterator&lt;IsConst, T, Axis, N&gt;</ref>(</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>);<sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966" refid="class_d_o_1_1_range_iterator_base_1a73957d210565fc1dcf018c748cc7942c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">x_iterator</ref><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a73957d210565fc1dcf018c748cc7942c" kindref="member" tooltip="X-axis iterator getter.">x</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>axis&lt;0&gt;();<sp/>}</highlight></codeline>
<codeline lineno="968" refid="class_d_o_1_1_range_iterator_base_1af33cd0d6e05af68f0f5d58c905493f7c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">y_iterator</ref><sp/><ref refid="class_d_o_1_1_range_iterator_base_1af33cd0d6e05af68f0f5d58c905493f7c" kindref="member" tooltip="Y-axis iterator getter.">y</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>axis&lt;1&gt;();<sp/>}</highlight></codeline>
<codeline lineno="970" refid="class_d_o_1_1_range_iterator_base_1a67d32d4fcfd807176852b6dfbaa11f74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_axis_iterator" kindref="compound" tooltip="Axis iterator class for N-dimensional arrays.">z_iterator</ref><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a67d32d4fcfd807176852b6dfbaa11f74" kindref="member" tooltip="Z-Axis iterator getter.">z</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>axis&lt;2&gt;();<sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>comparison<sp/>functions<sp/>*/</highlight></codeline>
<codeline lineno="974" refid="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" kindref="member" tooltip="Equality operator.">operator==</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const<sp/></highlight></codeline>
<codeline lineno="975"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stop_<sp/>?<sp/>rhs.stop_<sp/>:<sp/>(!rhs.stop_<sp/>&amp;&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>==<sp/>rhs.<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>);<sp/>}</highlight></codeline>
<codeline lineno="977" refid="class_d_o_1_1_range_iterator_base_1ad3e7caef9082dd2b3f65ea3867336476" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" kindref="member" tooltip="Equality operator.">operator==</ref>(pointer<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="978"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>==<sp/>pos;<sp/>}</highlight></codeline>
<codeline lineno="980" refid="class_d_o_1_1_range_iterator_base_1afc84f4470aad70894501ebf4900b374f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1afc84f4470aad70894501ebf4900b374f" kindref="member" tooltip="Inequality operator.">operator!=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/>rhs)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="981"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;<ref refid="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" kindref="member" tooltip="Equality operator.">operator==</ref>(rhs);<sp/>}</highlight></codeline>
<codeline lineno="983" refid="class_d_o_1_1_range_iterator_base_1ac966afbaec9c16d1cc1bb6819810ab10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1afc84f4470aad70894501ebf4900b374f" kindref="member" tooltip="Inequality operator.">operator!=</ref>(pointer<sp/>pos)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="984"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>!this-&gt;<ref refid="class_d_o_1_1_range_iterator_base_1a1d893679af27db625590457f8e265eee" kindref="member" tooltip="Equality operator.">operator==</ref>(pos);<sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>additional<sp/>features.<sp/>*/</highlight></codeline>
<codeline lineno="988" refid="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" kindref="member" tooltip="Get the current coordinates.">coords</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="989"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="991" refid="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Get the sizes.">sizes</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="992"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>;<sp/>}</highlight></codeline>
<codeline lineno="994" refid="class_d_o_1_1_range_iterator_base_1ab243ad95876992f71bfc9043b9a713bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1ab243ad95876992f71bfc9043b9a713bd" kindref="member" tooltip="Get the size of the i-th dimension.">size</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="995"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>[i];<sp/>}</highlight></codeline>
<codeline lineno="997" refid="class_d_o_1_1_range_iterator_base_1a4f69d9df692bff019419ca9b3b656c7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a4f69d9df692bff019419ca9b3b656c7f" kindref="member" tooltip="Debugging method.">check</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="998"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>locator&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Coords<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>.transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl<sp/>&lt;&lt;<sp/>*<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004" refid="class_d_o_1_1_range_iterator_base_1aad7f0d952b12caba65ea4fa3043d2411" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1aad7f0d952b12caba65ea4fa3043d2411" kindref="member" tooltip="Debugging method.">check_strides</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1005"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Checking<sp/>locator<sp/>strides&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Strides<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>.transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Sizes<sp/>=<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>.transpose()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>data<sp/>members<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012" refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>;<sp/></highlight></codeline>
<codeline lineno="1013" refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>coords_type<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>;<sp/></highlight></codeline>
<codeline lineno="1014" refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>;<sp/></highlight></codeline>
<codeline lineno="1015" refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>;<sp/></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop_;</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsConst,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder<sp/>=<sp/>ColMajor&gt;</highlight></codeline>
<codeline lineno="1024" refid="class_d_o_1_1_range_iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">RangeIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">RangeIteratorBase</ref>&lt;IsConst,<sp/>T,<sp/>N,<sp/>StorageOrder&gt;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, StorageOrder&gt;</ref><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">offset</ref>;</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">RangeIteratorBase&lt;IsConst, T, N, StorageOrder&gt;</ref><sp/>base_type;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">base_type::cur_pos_</ref>;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">base_type::cur_coords_</ref>;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">base_type::sizes_</ref>;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">base_type::strides_</ref>;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::stop_;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>typedefs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPEDEF_ITERATOR_TYPES(base_type);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;RangeIterator&amp;#39; class is a heavy object. It is mostly useful for differential calculus. Otherwise prefer using other iterator instead.">RangeIterator</ref><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;int,<sp/>N,<sp/>1&gt;<sp/>coords_type,<sp/>vector_type;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>constructors.<sp/>*/</highlight></codeline>
<codeline lineno="1041" refid="class_d_o_1_1_range_iterator_1aeb132d90693dc65a1092d0afcaea9072" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_1aeb132d90693dc65a1092d0afcaea9072" kindref="member" tooltip="Constructor.">RangeIterator</ref>(pointer<sp/>pos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" kindref="member" tooltip="Get the current coordinates.">coords</ref>,</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>first,<sp/>pointer<sp/>last,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Get the sizes.">sizes</ref>,</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>strides,</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base_type(pos,<sp/>coords,<sp/>sizes,<sp/>strides,<sp/>stop)</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>first_(first),<sp/>last_(last)</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1050" refid="class_d_o_1_1_range_iterator_1a0b4e860c0d327d9044416df1c73709ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_1aeb132d90693dc65a1092d0afcaea9072" kindref="member" tooltip="Constructor.">RangeIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base_type(l.<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>,<sp/>l.<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>,<sp/>l.<ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>,<sp/>l.<ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>,<sp/>l.stop_)</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>first_(l.first_),<sp/>last_(l.last_)</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>iterator<sp/>functionalities.<sp/>*/</highlight></codeline>
<codeline lineno="1057" refid="class_d_o_1_1_range_iterator_1a68c6d6abdde9fef27d6a4f2904212559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_1a68c6d6abdde9fef27d6a4f2904212559" kindref="member" tooltip="Prefix increment operator.">operator++</ref>()</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset::increment_coords(<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>.data(),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>.data(),<sp/>stop_);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1064" refid="class_d_o_1_1_range_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" kindref="member" tooltip="Prefix decrement operator.">operator--</ref>()</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset::decrement_coords(<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>.data(),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>.data(),<sp/>stop_);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071" refid="class_d_o_1_1_range_iterator_1a39f7c37604fd9845ff487b36b6f88602" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/><ref refid="class_d_o_1_1_range_iterator_1a68c6d6abdde9fef27d6a4f2904212559" kindref="member" tooltip="Prefix increment operator.">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><ref refid="class_d_o_1_1_range_iterator_1a39f7c37604fd9845ff487b36b6f88602" kindref="member" tooltip="Postfix increment operator (slow: avoid using it).">operator++</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="1074" refid="class_d_o_1_1_range_iterator_1ac8142815f977b8411faf27f7b8d804b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/><ref refid="class_d_o_1_1_range_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" kindref="member" tooltip="Prefix decrement operator.">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><ref refid="class_d_o_1_1_range_iterator_1ac8142815f977b8411faf27f7b8d804b3" kindref="member" tooltip="Postfix decrement operator (slow: avoid using it).">operator--</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="1077" refid="class_d_o_1_1_range_iterator_1a6c0808c388428f119495e5ba1d9fbbed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_1a6c0808c388428f119495e5ba1d9fbbed" kindref="member" tooltip="Arithmetic operator (slow: avoid using it).">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_<sp/>+=<sp/>strides_[i]*t[i];*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref><sp/>-<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>-<sp/>t).minCoeff()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset2" kindref="compound">Offset2&lt;N&gt;::advance</ref>(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>.data(),<sp/>t.data());</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>+=<sp/>t;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1089" refid="class_d_o_1_1_range_iterator_1afced994f988f5373b78393cab267065a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_1afced994f988f5373b78393cab267065a" kindref="member" tooltip="Arithmetic operator (slow: avoid using it)">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)</highlight></codeline>
<codeline lineno="1092"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_<sp/>-=<sp/>strides_[i]*t[i];*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>-<sp/>t).minCoeff()<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset2" kindref="compound">Offset2&lt;N&gt;::reverse</ref>(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>.data(),<sp/>t.data());</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>-=<sp/>t;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>additional<sp/>features.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_anchor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/>c<sp/>=<sp/>coords_type::Zero())</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>pos<sp/>=<sp/>first_<sp/>+<sp/>offset::eval(c.data(),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>.data());</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(first_<sp/>&lt;=<sp/>pos<sp/>&amp;&amp;<sp/>pos<sp/>&lt;<sp/>last_)</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>=<sp/>first_<sp/>+<sp/>offset::eval(c.data(),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>.data());</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_anchor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a73957d210565fc1dcf018c748cc7942c" kindref="member" tooltip="X-axis iterator getter.">x</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1af33cd0d6e05af68f0f5d58c905493f7c" kindref="member" tooltip="Y-axis iterator getter.">y</ref>)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>reset_anchor(coords_type(x,y));<sp/>}</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset_anchor(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a67d32d4fcfd807176852b6dfbaa11f74" kindref="member" tooltip="Z-Axis iterator getter.">z</ref>)</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/>reset_anchor(coords_type(x,y,z));<sp/>}</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>first_,<sp/>last_;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsConst,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>StorageOrder<sp/>=<sp/>ColMajor&gt;</highlight></codeline>
<codeline lineno="1127" refid="class_d_o_1_1_subrange_iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_subrange_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;SubrangeIterator&amp;#39; class is a heavy object...">SubrangeIterator</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">RangeIteratorBase</ref>&lt;IsConst,T,N,StorageOrder&gt;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">Offset&lt;N, StorageOrder&gt;</ref><sp/><ref refid="struct_d_o_1_1_offset" kindref="compound" tooltip="The offset computer class for N-dimensional arrays. StorageOrder must be either &amp;#39;Eigen::RowMajor&amp;#39; or ...">offset</ref>;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">RangeIteratorBase&lt;IsConst, T, N, StorageOrder&gt;</ref><sp/>base_type;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">base_type::cur_pos_</ref>;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">base_type::cur_coords_</ref>;</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">base_type::sizes_</ref>;</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">base_type::strides_</ref>;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::stop_;</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>typedefs.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/>TYPEDEF_ITERATOR_TYPES(base_type);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_subrange_iterator" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;SubrangeIterator&amp;#39; class is a heavy object...">SubrangeIterator</ref><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;int,<sp/>N,<sp/>1&gt;<sp/>coords_type,<sp/>vector_type;</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>constructors<sp/>*/</highlight></codeline>
<codeline lineno="1144" refid="class_d_o_1_1_subrange_iterator_1a15cc9c7d35fb2db3e2f2b0fb6f872a12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_subrange_iterator_1a15cc9c7d35fb2db3e2f2b0fb6f872a12" kindref="member" tooltip="Constructor.">SubrangeIterator</ref>(pointer<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1afb44c4cbe26265d288f5384066c0346d" kindref="member" tooltip="Get the current coordinates.">coords</ref>,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>start,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>end,</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>pos,</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Get the sizes.">sizes</ref>,</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>strides)</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base_type(pos,<sp/>coords,<sp/>sizes,<sp/>strides,<sp/>stop)</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>data_(data),<sp/>start_(start),<sp/>end_(end)</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1154" refid="class_d_o_1_1_subrange_iterator_1a3bcee2c43f9a2901c3a2109b4ccd8b10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_subrange_iterator_1a15cc9c7d35fb2db3e2f2b0fb6f872a12" kindref="member" tooltip="Constructor.">SubrangeIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/>l)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>base_type(l.<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>,<sp/>l.<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l.<ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>,<sp/>l.<ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>l.stop_)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>data_(l.data_),<sp/>start_(l.start_),<sp/>end_(l.end_)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>{}</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>iterator<sp/>functionalities.<sp/>*/</highlight></codeline>
<codeline lineno="1163" refid="class_d_o_1_1_subrange_iterator_1a68c6d6abdde9fef27d6a4f2904212559" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_subrange_iterator_1a68c6d6abdde9fef27d6a4f2904212559" kindref="member" tooltip="Prefix increment operator.">operator++</ref>()</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset::increment_coords(</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>.data(),<sp/>start_.data(),<sp/>end_.data(),<sp/>stop_);</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>=<sp/>data_<sp/>+<sp/>offset::eval(<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>.data(),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>.data());</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171" refid="class_d_o_1_1_subrange_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_subrange_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" kindref="member" tooltip="Prefix decrement operator.">operator--</ref>()</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>offset::decrement_coords(</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>.data(),<sp/>start_.data(),<sp/>end_.data(),<sp/>stop_);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref><sp/>=<sp/>data_<sp/>+<sp/>offset::eval(<ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref>.data(),<sp/><ref refid="class_d_o_1_1_range_iterator_base_1acc3c4c5d00d37bbc0ed318ca59e1e5c8" kindref="member" tooltip="sizes.">sizes_</ref>.data());</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1179" refid="class_d_o_1_1_subrange_iterator_1a39f7c37604fd9845ff487b36b6f88602" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/><ref refid="class_d_o_1_1_subrange_iterator_1a68c6d6abdde9fef27d6a4f2904212559" kindref="member" tooltip="Prefix increment operator.">operator++</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><ref refid="class_d_o_1_1_subrange_iterator_1a39f7c37604fd9845ff487b36b6f88602" kindref="member" tooltip="Postfix increment operator (slow: avoid using it).">operator++</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="1182" refid="class_d_o_1_1_subrange_iterator_1ac8142815f977b8411faf27f7b8d804b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/><ref refid="class_d_o_1_1_subrange_iterator_1a2fa8797c1ff9e6c2ac6f879a53f60601" kindref="member" tooltip="Prefix decrement operator.">operator--</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref><sp/>old(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/><ref refid="class_d_o_1_1_subrange_iterator_1ac8142815f977b8411faf27f7b8d804b3" kindref="member" tooltip="Postfix increment operator (slow: avoid using it).">operator--</ref>();<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old;<sp/>}</highlight></codeline>
<codeline lineno="1185" refid="class_d_o_1_1_subrange_iterator_1a6c0808c388428f119495e5ba1d9fbbed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_subrange_iterator_1a6c0808c388428f119495e5ba1d9fbbed" kindref="member" tooltip="Arithmetic operator (slow: avoid using it).">operator+=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((end_<sp/>-<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>-<sp/>t).minCoeff()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>+=<sp/>t;</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset2" kindref="compound">Offset2&lt;N&gt;::advance</ref>(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>.data(),<sp/>t.data());</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1195" refid="class_d_o_1_1_subrange_iterator_1afced994f988f5373b78393cab267065a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_range_iterator_base" kindref="compound" tooltip="N-dimensional iterator class. In any case the &amp;#39;Locator2&amp;#39; class is a heavy object. It is slower than t...">self_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_subrange_iterator_1afced994f988f5373b78393cab267065a" kindref="member" tooltip="Arithmetic operator (slow: avoid using it).">operator-=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector_type&amp;<sp/>t)</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((start_<sp/>-<sp/>t).minCoeff()<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_range_iterator_base_1a82692beb3bc7e875f7b0cad244c4ad3d" kindref="member" tooltip="current coordinates.">cur_coords_</ref><sp/>-=<sp/>t;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_offset2" kindref="compound">Offset2&lt;N&gt;::reverse</ref>(<ref refid="class_d_o_1_1_range_iterator_base_1a74532bdb15ae1a54d699c150490f022d" kindref="member" tooltip="current pointer.">cur_pos_</ref>,<sp/><ref refid="class_d_o_1_1_range_iterator_base_1a75797003a07a37c392447be7a21a9cd7" kindref="member" tooltip="strides.">strides_</ref>.data(),<sp/>t.data());</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>data<sp/>members.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>data_;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_type<sp/>start_;</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_type<sp/>end_;</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>ITERATOR_BASE_TYPE</highlight></codeline>
<codeline lineno="1212"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#undef<sp/>TYPEDEF_ITERATOR_TYPES</highlight></codeline>
<codeline lineno="1213"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1217" refid="class_d_o_1_1_coords_iterator" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">CoordsIterator</ref></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">CoordsIterator</ref><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">self_type</ref>;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Matrix&lt;int,<sp/>N,<sp/>1&gt;<sp/>coords_type;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/>coords_type<sp/>a_;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/>coords_type<sp/>b_;</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>coords_type<sp/>pos_;</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stop_;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">CoordsIterator</ref>()</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>stop_(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">CoordsIterator</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type&amp;<sp/>b)</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>a_(a),<sp/>b_(b),<sp/>pos_(a),<sp/>stop_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">CoordsIterator</ref>&amp;<sp/>operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">self_type</ref>&amp;<sp/>it)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a_<sp/>=<sp/>it.a_;</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>b_<sp/>=<sp/>it.b_;</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pos_<sp/>=<sp/>it.pos_;</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stop_<sp/>=<sp/>it.stop_;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">self_type</ref>&amp;<sp/>it)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1245"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stop_<sp/>?<sp/>it.stop_<sp/>:<sp/>!it.stop_<sp/>&amp;&amp;<sp/>pos_<sp/>==<sp/>it.pos_);<sp/>}</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">self_type</ref>&amp;<sp/>it)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1248"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(stop_<sp/>?<sp/>!it.stop_<sp/>:<sp/>it.stop_<sp/>||<sp/>pos_<sp/>!=<sp/>it.pos_);<sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">self_type</ref>&amp;<sp/>operator++()</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;N;i++)<sp/>{</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos_[i]!=b_[i])<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_[i]++;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos_[i]=a_[i];</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stop_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">self_type</ref><sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_coords_iterator" kindref="compound" tooltip="Coords iterator class for N-dimensional array. See if loop unrolling makes them faster.">CoordsIterator</ref><sp/>tmp(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>++(*this);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tmp;<sp/>}</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>coords_type<sp/>operator*()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1267"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pos_;<sp/>}</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>coords_type*<sp/>operator-&gt;()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="1270"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;pos_;<sp/>}</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>DO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_CORE_LOCATOR_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Locator.hpp"/>
  </compounddef>
</doxygen>
