<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_conic_8hpp" kind="file">
    <compoundname>Conic.hpp</compoundname>
    <includes refid="_matrix_based_object_8hpp" local="no">DO/Geometry/Tools/MatrixBasedObject.hpp</includes>
    <includedby refid="_tools_8hpp" local="no">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools.hpp</includedby>
    <incdepgraph>
      <node id="1180">
        <label>Eigen/Eigen</label>
      </node>
      <node id="1181">
        <label>sstream</label>
      </node>
      <node id="1179">
        <label>DO/Core/EigenExtension.hpp</label>
        <link refid="_eigen_extension_8hpp"/>
        <childnode refid="1180" relation="include">
        </childnode>
        <childnode refid="1181" relation="include">
        </childnode>
      </node>
      <node id="1177">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Conic.hpp</label>
        <link refid="Conic.hpp"/>
        <childnode refid="1178" relation="include">
        </childnode>
      </node>
      <node id="1178">
        <label>DO/Geometry/Tools/MatrixBasedObject.hpp</label>
        <link refid="_matrix_based_object_8hpp_source"/>
        <childnode refid="1179" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1184">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry.hpp</label>
        <link refid="_geometry_8hpp_source"/>
      </node>
      <node id="1183">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools.hpp</label>
        <link refid="_tools_8hpp_source"/>
        <childnode refid="1184" relation="include">
        </childnode>
      </node>
      <node id="1182">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Conic.hpp</label>
        <link refid="Conic.hpp"/>
        <childnode refid="1183" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_d_o_1_1_projective_1_1_conic" prot="public">DO::Projective::Conic</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
    <innernamespace refid="namespace_d_o_1_1_projective">DO::Projective</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2014<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_GEOMETRY_TOOLS_CONIC_HPP</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_GEOMETRY_TOOLS_CONIC_HPP</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;DO/Geometry/Tools/MatrixBasedObject.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{<sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">Projective<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="20" refid="class_d_o_1_1_projective_1_1_conic" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_projective_1_1_conic" kindref="compound">Conic</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject</ref>&lt;T,N&gt;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">MatrixBasedObject&lt;T,N&gt;</ref><sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">Base</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Base::mat_;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Base::Dimension;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::Mat<sp/><sp/>Mat;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::HVec<sp/>HVec;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base::Vec<sp/><sp/>Vec;</highlight></codeline>
<codeline lineno="30" refid="class_d_o_1_1_projective_1_1_conic_1afa8a28b353f5fb54ca7faddb101a08fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_conic_1afa8a28b353f5fb54ca7faddb101a08fb" kindref="member" tooltip="Common constructors.">Conic</ref>()<sp/>:<sp/><ref refid="class_d_o_1_1_projective_1_1_matrix_based_object" kindref="compound" tooltip="Rudimentary polynomial class.">Base</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_conic_1afa8a28b353f5fb54ca7faddb101a08fb" kindref="member" tooltip="Common constructors.">Conic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Base&amp;<sp/>other)<sp/>:<sp/>Base(other)<sp/>{}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_conic_1afa8a28b353f5fb54ca7faddb101a08fb" kindref="member" tooltip="Common constructors.">Conic</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Mat&amp;<sp/>data)<sp/>:<sp/>Base(data)<sp/>{}</highlight></codeline>
<codeline lineno="34" refid="class_d_o_1_1_projective_1_1_conic_1ac246b2b30ffc1c4051a06f11c44f61dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_d_o_1_1_projective_1_1_conic_1ac246b2b30ffc1c4051a06f11c44f61dc" kindref="member" tooltip="Evaluation at point &amp;#39;x&amp;#39;.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>HVec&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="35"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>x.transpose()*mat_*x;<sp/>}</highlight></codeline>
<codeline lineno="37" refid="class_d_o_1_1_projective_1_1_conic_1a9ee277790cf90d5be80d3db3e042e770" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>T<sp/><ref refid="class_d_o_1_1_projective_1_1_conic_1ac246b2b30ffc1c4051a06f11c44f61dc" kindref="member" tooltip="Evaluation at point &amp;#39;x&amp;#39;.">operator()</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vec&amp;<sp/>x)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="38"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)((HVec()<sp/>&lt;&lt;<sp/>x,<sp/>1).finished());<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/>std::ostream&amp;<sp/><ref refid="class_d_o_1_1_projective_1_1_conic_1a206f8bff4134b802a022c53282ee7fe7" kindref="member" tooltip="I/O.">operator&lt;&lt;</ref>(std::ostream&amp;<sp/>os,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_projective_1_1_conic" kindref="compound">Conic</ref>&amp;<sp/>P);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>Projective<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>DO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_GEOMETRY_TOOLS_CONIC_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Tools/Conic.hpp"/>
  </compounddef>
</doxygen>
