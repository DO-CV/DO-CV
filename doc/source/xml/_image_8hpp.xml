<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="_image_8hpp" kind="file">
    <compoundname>Image.hpp</compoundname>
    <includes refid="_color_8hpp" local="yes">Color.hpp</includes>
    <includes refid="_multi_array_8hpp" local="yes">MultiArray.hpp</includes>
    <includedby refid="_subimage_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp</includedby>
    <includedby refid="_core_8hpp" local="yes">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</includedby>
    <includedby refid="_graphics_8hpp" local="no">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics.hpp</includedby>
    <includedby refid="_image_drawing_2_image_i_o_8hpp" local="no">C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp</includedby>
    <incdepgraph>
      <node id="146">
        <label>iterator</label>
      </node>
      <node id="144">
        <label>MultiArray.hpp</label>
        <link refid="_multi_array_8hpp"/>
        <childnode refid="145" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
        <childnode refid="148" relation="include">
        </childnode>
      </node>
      <node id="148">
        <label>numeric</label>
      </node>
      <node id="142">
        <label>Eigen/Eigen</label>
      </node>
      <node id="137">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp</label>
        <link refid="Image.hpp"/>
        <childnode refid="138" relation="include">
        </childnode>
        <childnode refid="144" relation="include">
        </childnode>
      </node>
      <node id="145">
        <label>Locator.hpp</label>
        <link refid="_locator_8hpp"/>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
        <childnode refid="146" relation="include">
        </childnode>
        <childnode refid="147" relation="include">
        </childnode>
      </node>
      <node id="139">
        <label>Meta.hpp</label>
        <link refid="_meta_8hpp"/>
      </node>
      <node id="140">
        <label>StaticAssert.hpp</label>
        <link refid="_static_assert_8hpp"/>
      </node>
      <node id="143">
        <label>sstream</label>
      </node>
      <node id="141">
        <label>EigenExtension.hpp</label>
        <link refid="_eigen_extension_8hpp"/>
        <childnode refid="142" relation="include">
        </childnode>
        <childnode refid="143" relation="include">
        </childnode>
      </node>
      <node id="147">
        <label>iostream</label>
      </node>
      <node id="138">
        <label>Color.hpp</label>
        <link refid="_color_8hpp"/>
        <childnode refid="139" relation="include">
        </childnode>
        <childnode refid="140" relation="include">
        </childnode>
        <childnode refid="141" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="165">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/GraphicsUtilities.hpp</label>
        <link refid="_graphics_utilities_8hpp"/>
      </node>
      <node id="159">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree.hpp</label>
        <link refid="_k_d_tree_8hpp_source"/>
      </node>
      <node id="161">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics/DrawPolygon.hpp</label>
        <link refid="_draw_polygon_8hpp_source"/>
        <childnode refid="162" relation="include">
        </childnode>
      </node>
      <node id="163">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry.hpp</label>
        <link refid="_geometry_8hpp_source"/>
      </node>
      <node id="164">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics/DerivedQObjects/GraphicsApplicationImpl.hpp</label>
        <link refid="_graphics_application_impl_8hpp"/>
        <childnode refid="165" relation="include">
        </childnode>
      </node>
      <node id="154">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features.hpp</label>
        <link refid="_features_8hpp"/>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="149">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp</label>
        <link refid="Image.hpp"/>
        <childnode refid="150" relation="include">
        </childnode>
        <childnode refid="151" relation="include">
        </childnode>
        <childnode refid="160" relation="include">
        </childnode>
        <childnode refid="166" relation="include">
        </childnode>
      </node>
      <node id="167">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing.hpp</label>
        <link refid="_image_drawing_8hpp_source"/>
      </node>
      <node id="155">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors.hpp</label>
        <link refid="_feature_descriptors_8hpp"/>
      </node>
      <node id="156">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDetectors.hpp</label>
        <link refid="_feature_detectors_8hpp"/>
      </node>
      <node id="150">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Subimage.hpp</label>
        <link refid="_subimage_8hpp"/>
        <childnode refid="151" relation="include">
        </childnode>
      </node>
      <node id="153">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/View.hpp</label>
        <link refid="_view_8hpp"/>
      </node>
      <node id="157">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageProcessing.hpp</label>
        <link refid="_image_processing_8hpp"/>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
      </node>
      <node id="151">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core.hpp</label>
        <link refid="_core_8hpp"/>
        <childnode refid="152" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="154" relation="include">
        </childnode>
        <childnode refid="157" relation="include">
        </childnode>
        <childnode refid="158" relation="include">
        </childnode>
      </node>
      <node id="162">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Geometry/Graphics.hpp</label>
        <link refid="_geometry_2_graphics_8hpp_source"/>
        <childnode refid="163" relation="include">
        </childnode>
      </node>
      <node id="152">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Features/GraphicsView/FeatureItem.hpp</label>
        <link refid="_feature_item_8hpp_source"/>
      </node>
      <node id="166">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/ImageDrawing/ImageIO.hpp</label>
        <link refid="_image_drawing_2_image_i_o_8hpp_source"/>
        <childnode refid="167" relation="include">
        </childnode>
      </node>
      <node id="160">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Graphics.hpp</label>
        <link refid="_graphics_8hpp"/>
        <childnode refid="155" relation="include">
        </childnode>
        <childnode refid="156" relation="include">
        </childnode>
        <childnode refid="153" relation="include">
        </childnode>
        <childnode refid="161" relation="include">
        </childnode>
        <childnode refid="164" relation="include">
        </childnode>
      </node>
      <node id="158">
        <label>C:/Users/David/Desktop/GitHub/DO-CV/src/DO/KDTree/KDTree.hpp</label>
        <link refid="_k_d_tree_2_k_d_tree_8hpp_source"/>
        <childnode refid="159" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4" prot="public">DO::ElementTraits&lt; Color&lt; T, Layout &gt; &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_image" prot="public">DO::Image</innerclass>
    <innerclass refid="class_d_o_1_1_image" prot="public">DO::Image</innerclass>
    <innerclass refid="struct_d_o_1_1_convert_image" prot="public">DO::ConvertImage</innerclass>
    <innerclass refid="struct_d_o_1_1_convert_image_3_01_t_00_01_t_00_01_n_01_4" prot="public">DO::ConvertImage&lt; T, T, N &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_rescale" prot="public">DO::ColorRescale</innerclass>
    <innernamespace refid="namespace_d_o">DO</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___image_1ga3589d93d904fd25e83198258d03d44e6" prot="public" static="no">
        <name>DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY</name>
        <param><defname>Colorspace</defname></param>
        <initializer>/*! \brief Reinterpret column-major matrix as an image. */            \
  template &lt;typename T&gt;                                                 \
  inline Image&lt;Color&lt;T, Colorspace&gt;, Colorspace::size&gt;                  \
  as##Colorspace##Image(const MultiArray&lt;Matrix&lt;T,3,1&gt;,                 \
                                         Colorspace::size,              \
                                         ColMajor&gt;&amp; M)                  \
  {                                                                     \
    return Image&lt;Color&lt;T, Colorspace&gt; &gt;(                                \
      reinterpret_cast&lt;Color&lt;T, Colorspace&gt; *&gt;(M.data()),               \
      M.sizes() );                                                      \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Check this functionality... </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="134" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___image_1gab9988e0f3093c7ea96879529b44d3a05" prot="public" static="no">
        <name>DEFINE_FINDMINMAX_GRAY</name>
        <param><defname>T</defname></param>
        <initializer>/*! \brief Find min and max grayscale values of the image. */ \
  template &lt;int N&gt;                                              \
  inline void findMinMax(T&amp; min, T&amp; max, const Image&lt;T, N&gt;&amp; src)\
  {                                                             \
    const T *src_first = src.data();                            \
    const T *src_last = src_first + src.size();                 \
                                                                \
    min = *std::min_element(src_first, src_last);               \
    max = *std::max_element(src_first, src_last);               \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro that defines min-max value functions for a specific grayscale color types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="214" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___image_1gae46f4594b176ee37843b58e67de94b2f" prot="public" static="no">
        <name>DEFINE_RESCALE_GRAY</name>
        <param><defname>T</defname></param>
        <initializer>/*! \brief Rescales color values properly for viewing. */     \
  template &lt;int N&gt;                                              \
  inline Image&lt;T, N&gt; colorRescale(const Image&lt;T, N&gt;&amp; src,       \
                                  T a = ColorTraits&lt;T&gt;::min(),  \
                                  T b = ColorTraits&lt;T&gt;::max())  \
  {                                                             \
    Image&lt;T, N&gt; dst(src.sizes());                               \
                                                                \
    const T *src_first = src.data();                            \
    const T *src_last = src_first + src.size();                 \
    T *dst_first  = dst.data();                                 \
                                                                \
    T min = *std::min_element(src_first, src_last);             \
    T max = *std::max_element(src_first, src_last);             \
                                                                \
    if (min == max)                                             \
    {                                                           \
      std::cerr &lt;&lt; &quot;Warning: min == max!&quot; &lt;&lt; std::endl;         \
      return dst;                                               \
    }                                                           \
                                                                \
    for ( ; src_first != src_last; ++src_first, ++dst_first)    \
      *dst_first = a + (b-a)*(*src_first-min)/(max-min);        \
                                                                \
    return dst;                                                 \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro that defines a color rescaling function for a specific grayscale color type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="292" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>DO++,<sp/>a<sp/>basic<sp/>set<sp/>of<sp/>libraries<sp/>in<sp/>C++<sp/>for<sp/>computer<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>vision.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>(C)<sp/>2013<sp/>David<sp/>Ok<sp/>&lt;david.ok8@gmail.com&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>Source<sp/>Code<sp/>Form<sp/>is<sp/>subject<sp/>to<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>Mozilla<sp/>Public<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>License<sp/>v.<sp/>2.0.<sp/>If<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>MPL<sp/>was<sp/>not<sp/>distributed<sp/>with<sp/>this<sp/>file,<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>obtain<sp/>one<sp/>at<sp/>http://mozilla.org/MPL/2.0/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>==========================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DO_CORE_IMAGE_HPP</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DO_CORE_IMAGE_HPP</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_color_8hpp" kindref="compound">Color.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_multi_array_8hpp" kindref="compound" tooltip="This contains the implementation of the N-dimensional array class.">MultiArray.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DO<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>========================================================================<sp/>//</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Layout&gt;</highlight></codeline>
<codeline lineno="31" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_element_traits" kindref="compound">ElementTraits</ref>&lt;<ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color</ref>&lt;T,<sp/>Layout&gt;<sp/>&gt;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="33" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>Array&lt;T,<sp/>Layout::size,<sp/>1&gt;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" kindref="member" tooltip="STL-like typedef.">value_type</ref>;<sp/></highlight></codeline>
<codeline lineno="34" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1a49b489a408a211a90e766329c0732d7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1a49b489a408a211a90e766329c0732d7b" kindref="member" tooltip="STL-like typedef.">size_type</ref>;<sp/></highlight></codeline>
<codeline lineno="35" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ad25b518036b886d8f35a3c059301d007" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ad25b518036b886d8f35a3c059301d007" kindref="member" tooltip="STL-like typedef.">pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="36" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1a13c57dab17e2c903cadfa5e35ba84064" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1a13c57dab17e2c903cadfa5e35ba84064" kindref="member" tooltip="STL-like typedef.">const_pointer</ref>;<sp/></highlight></codeline>
<codeline lineno="37" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1abe8933d436779a43cb5c1896ff5f2918" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" kindref="member" tooltip="STL-like typedef.">value_type</ref>&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1abe8933d436779a43cb5c1896ff5f2918" kindref="member" tooltip="STL-like typedef.">reference</ref>;<sp/></highlight></codeline>
<codeline lineno="38" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1afdb67657e63a66ed3fae7b0c9fd81b48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" kindref="member" tooltip="STL-like typedef.">value_type</ref>&amp;<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1afdb67657e63a66ed3fae7b0c9fd81b48" kindref="member" tooltip="STL-like typedef.">const_reference</ref>;<sp/></highlight></codeline>
<codeline lineno="39" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1a4b0424da8c99197075d119ba0959bf1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1a4b0424da8c99197075d119ba0959bf1e" kindref="member" tooltip="STL-like typedef.">iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="40" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1aad40b6f664e3f2f7ab960886c2f7e325" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1ae79d568f7cb02e0f36a97a7e904791af" kindref="member" tooltip="STL-like typedef.">value_type</ref><sp/>*<sp/><ref refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1aad40b6f664e3f2f7ab960886c2f7e325" kindref="member" tooltip="STL-like typedef.">const_iterator</ref>;<sp/></highlight></codeline>
<codeline lineno="41" refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4_1a083611162fed7f6427026ec1d5cd6678" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_element_traits_1a083611162fed7f6427026ec1d5cd6678" kindref="member" tooltip="STL-like typedef.">is_scalar</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="class_d_o_1_1_image" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Color,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>2&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref>;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___image_1ga4e5c520a37ac3ab27aa74f10d3c47b25" kindref="member" tooltip="Helper function for color conversion.">convert</ref>(<ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;U, N&gt;</ref>&amp;<sp/>src);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Color,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound" tooltip="The N-dimensional array class.">MultiArray</ref>&lt;Color,<sp/>N,<sp/>ColMajor&gt;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">MultiArray&lt;Color, N, ColMajor&gt;</ref><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="comment">/*<sp/>interface<sp/>*/</highlight></codeline>
<codeline lineno="59" refid="class_d_o_1_1_image_1aaf4d853a31ce96e5aa073ec56f14ed7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::vector_type<sp/><ref refid="class_d_o_1_1_image_1aaf4d853a31ce96e5aa073ec56f14ed7a" kindref="member" tooltip="N-dimensional integral vector type.">vector_type</ref>,<sp/>Vector;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="class_d_o_1_1_image_1a66d0d6da3b89580352c28d37b57df5bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a66d0d6da3b89580352c28d37b57df5bb" kindref="member" tooltip="Default constructor.">Image</ref>()</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="class_d_o_1_1_image_1a034700cf7007fcf802aa8f9fa7547173" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a66d0d6da3b89580352c28d37b57df5bb" kindref="member" tooltip="Default constructor.">Image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1aaf4d853a31ce96e5aa073ec56f14ed7a" kindref="member" tooltip="N-dimensional integral vector type.">vector_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>(sizes)<sp/>{}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="class_d_o_1_1_image_1a7707276fc5910b5fee9896ba3d5af2e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a66d0d6da3b89580352c28d37b57df5bb" kindref="member" tooltip="Default constructor.">Image</ref>(<ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color</ref><sp/>*<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1aaf4d853a31ce96e5aa073ec56f14ed7a" kindref="member" tooltip="N-dimensional integral vector type.">vector_type</ref>&amp;<sp/><ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>getOwnership<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>(data,<sp/>sizes,<sp/>getOwnership)<sp/>{}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="class_d_o_1_1_image_1af01766f2360b125ef9131ad1c613c013" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a66d0d6da3b89580352c28d37b57df5bb" kindref="member" tooltip="Default constructor.">Image</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a369399896761e31ae71db57fdd0ba431" kindref="member" tooltip="Constant width accessor.">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1ae26bcfe2f33f5873dbdfb6948cf1f59f" kindref="member" tooltip="Constant height accessor.">height</ref>)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>(width,<sp/>height)<sp/>{}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="class_d_o_1_1_image_1ab4c9fa2662875ab1542a5c01ed74373f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a66d0d6da3b89580352c28d37b57df5bb" kindref="member" tooltip="Default constructor.">Image</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a369399896761e31ae71db57fdd0ba431" kindref="member" tooltip="Constant width accessor.">width</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1ae26bcfe2f33f5873dbdfb6948cf1f59f" kindref="member" tooltip="Constant height accessor.">height</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a3275d1392d01b26af1c8cd52b0d10745" kindref="member" tooltip="Constant depth accessor (only for volumetric image.)">depth</ref>)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>(width,<sp/>height,<sp/>depth)<sp/>{}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="class_d_o_1_1_image_1a197aeb02bcf7f870ba76dc87462d5cdc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a66d0d6da3b89580352c28d37b57df5bb" kindref="member" tooltip="Default constructor.">Image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>&amp;<sp/>x)</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="class_d_o_1_1_multi_array" kindref="compound">base_type</ref>(x)<sp/>{}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_d_o_1_1_image_1aaa0c10be1945418c23ef52974a4dadaa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref>&amp;<sp/><ref refid="class_d_o_1_1_image_1aaa0c10be1945418c23ef52974a4dadaa" kindref="member" tooltip="Assignment operators.">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref>&amp;<sp/>I)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><ref refid="class_d_o_1_1_multi_array_1a6c4f23db722b5e9bf57ef750c5fd18bd" kindref="member" tooltip="Assignment operator uses the copy-swap idiom.">base_type::operator=</ref>(I);<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="class_d_o_1_1_image_1a369399896761e31ae71db57fdd0ba431" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a369399896761e31ae71db57fdd0ba431" kindref="member" tooltip="Constant width accessor.">width</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_d_o_1_1_multi_array_1a48cdd99e4e82f74c1adae2bd69970220" kindref="member" tooltip="Number of rows getter.">base_type::rows</ref>();<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="class_d_o_1_1_image_1ae26bcfe2f33f5873dbdfb6948cf1f59f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1ae26bcfe2f33f5873dbdfb6948cf1f59f" kindref="member" tooltip="Constant height accessor.">height</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_d_o_1_1_multi_array_1a3cefa469a7524d4bbc80531ebb9b5df4" kindref="member" tooltip="Number of cols getter.">base_type::cols</ref>();<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="class_d_o_1_1_image_1a3275d1392d01b26af1c8cd52b0d10745" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image_1a3275d1392d01b26af1c8cd52b0d10745" kindref="member" tooltip="Constant depth accessor (only for volumetric image.)">depth</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>this-&gt;<ref refid="class_d_o_1_1_multi_array_1a3275d1392d01b26af1c8cd52b0d10745" kindref="member" tooltip="Depth getter.">base_type::depth</ref>();<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Color2&gt;</highlight></codeline>
<codeline lineno="101" refid="class_d_o_1_1_image_1a3b35c07b31609437c194be2614e2e594" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;Color2, N&gt;</ref><sp/><ref refid="class_d_o_1_1_image_1a3b35c07b31609437c194be2614e2e594" kindref="member" tooltip="Color conversion method.">convert</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="102"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;Color2, N&gt;</ref><sp/>dst(<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">base_type::sizes</ref>());</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___image_1ga4e5c520a37ac3ab27aa74f10d3c47b25" kindref="member" tooltip="Helper function for color conversion.">DO::convert</ref>(dst,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Filter&gt;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Filter&lt;Color,<sp/>N&gt;::ReturnType</highlight></codeline>
<codeline lineno="111" refid="class_d_o_1_1_image_1af7d231173bd98166d38adba831612175" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image_1af7d231173bd98166d38adba831612175" kindref="member" tooltip="Convenient helper for chaining filters.">compute</ref>()</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="112"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Filter&lt;Color,<sp/>N&gt;(*this)();<sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Filter&gt;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Filter&lt;Color,<sp/>N&gt;::ReturnType</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image_1af7d231173bd98166d38adba831612175" kindref="member" tooltip="Convenient helper for chaining filters.">compute</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Filter&lt;Color,<sp/>N&gt;::ParamType&amp;<sp/>param)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="117"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Filter&lt;Color,<sp/>N&gt;(*this)(param);<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>======================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Construct<sp/>image<sp/>views<sp/>from<sp/>row<sp/>major<sp/>multi-array.</highlight></codeline>
<codeline lineno="123" refid="group___image_1ga3589d93d904fd25e83198258d03d44e6" refkind="member"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY(Colorspace)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;typename<sp/>T&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/>inline<sp/>Image&lt;Color&lt;T,<sp/>Colorspace&gt;,<sp/>Colorspace::size&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/>as##Colorspace##Image(const<sp/>MultiArray&lt;Matrix&lt;T,3,1&gt;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Colorspace::size,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ColMajor&gt;&amp;<sp/>M)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>Image&lt;Color&lt;T,<sp/>Colorspace&gt;<sp/>&gt;(<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>reinterpret_cast&lt;Color&lt;T,<sp/>Colorspace&gt;<sp/>*&gt;(M.data()),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>M.sizes()<sp/>);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="group___image_1ga6ca7c2968f16fe642348e58d2d72c3d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1ga3589d93d904fd25e83198258d03d44e6" kindref="member">DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY</ref>(<ref refid="struct_d_o_1_1_meta_1_1_vector3" kindref="compound" tooltip="3D vector of types.">Rgb</ref>)</highlight></codeline>
<codeline lineno="137" refid="group___image_1ga4392375bc20250c8f8cf6c571ab3e5c8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1ga3589d93d904fd25e83198258d03d44e6" kindref="member">DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY</ref>(<ref refid="struct_d_o_1_1_meta_1_1_vector4" kindref="compound" tooltip="4D vector of types.">Rgba</ref>)</highlight></codeline>
<codeline lineno="138" refid="group___image_1ga03047b50e8796b06624fbd45ac3c46ec" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1ga3589d93d904fd25e83198258d03d44e6" kindref="member">DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY</ref>(<ref refid="struct_d_o_1_1_meta_1_1_vector4" kindref="compound" tooltip="4D vector of types.">Cmyk</ref>)</highlight></codeline>
<codeline lineno="139" refid="group___image_1gac9273f843fb0d04b3be0c254e920896b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1ga3589d93d904fd25e83198258d03d44e6" kindref="member">DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY</ref>(<ref refid="struct_d_o_1_1_meta_1_1_vector3" kindref="compound" tooltip="3D vector of types.">Yuv</ref>)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>======================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Generic<sp/>image<sp/>conversion<sp/>function.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="147" refid="struct_d_o_1_1_convert_image" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_convert_image" kindref="compound" tooltip="Generic image converter class.">ConvertImage</ref><sp/>{</highlight></codeline>
<codeline lineno="149" refid="struct_d_o_1_1_convert_image_1afe48b50d9ed6115f19df98129e540c47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_convert_image_1afe48b50d9ed6115f19df98129e540c47" kindref="member" tooltip="Implementation of the image conversion.">apply</ref>(<ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;U, N&gt;</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dst.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>()<sp/>!=<sp/>src.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>())</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst.<ref refid="class_d_o_1_1_multi_array_1a3f049389446e1c60e25f09be5b64f192" kindref="member" tooltip="Resizing method.">resize</ref>(src.<ref refid="class_d_o_1_1_multi_array_1a15f0ce2877b385c9505f042faa705694" kindref="member" tooltip="Size getter.">sizes</ref>());</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_u" kindref="compound" tooltip="First chrominance name (YUV).">U</ref><sp/>*src_first<sp/>=<sp/>src.<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>();</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_u" kindref="compound" tooltip="First chrominance name (YUV).">U</ref><sp/>*src_last<sp/>=<sp/>src_first<sp/>+<sp/>src.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*dst_first<sp/><sp/>=<sp/>dst.<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>src_first<sp/>!=<sp/>src_last;<sp/>++src_first,<sp/>++dst_first)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group___color_conversion_1gaf425c8b1868616a6840c61fe4a3e60c7" kindref="member" tooltip="Color conversion function with same color layout but different channel types.">convertColor</ref>(*dst_first,<sp/>*src_first);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="167" refid="struct_d_o_1_1_convert_image_3_01_t_00_01_t_00_01_n_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_convert_image" kindref="compound" tooltip="Generic image converter class.">ConvertImage</ref>&lt;T,T,N&gt;<sp/>{</highlight></codeline>
<codeline lineno="169" refid="struct_d_o_1_1_convert_image_3_01_t_00_01_t_00_01_n_01_4_1aa5b8da65afada1738fd9f08d33d5520f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="struct_d_o_1_1_convert_image_1afe48b50d9ed6115f19df98129e540c47" kindref="member" tooltip="Implementation of the image conversion.">apply</ref>(<ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst<sp/>=<sp/>src;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="176" refid="group___image_1ga4e5c520a37ac3ab27aa74f10d3c47b25" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___image_1ga4e5c520a37ac3ab27aa74f10d3c47b25" kindref="member" tooltip="Helper function for color conversion.">convert</ref>(<ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref>&amp;<sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;U, N&gt;</ref>&amp;<sp/>src)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_convert_image_1afe48b50d9ed6115f19df98129e540c47" kindref="member" tooltip="Implementation of the image conversion.">ConvertImage&lt;T,U,N&gt;::apply</ref>(dst,<sp/>src);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>======================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>min<sp/>and<sp/>max<sp/>values<sp/>in<sp/>images<sp/>according<sp/>to<sp/>point-wise<sp/>comparison.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Layout&gt;</highlight></codeline>
<codeline lineno="186" refid="group___image_1ga21de6940367133734d08916371bdf437" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___image_1ga21de6940367133734d08916371bdf437" kindref="member" tooltip="Find min and max pixel values of the image.">findMinMax</ref>(<ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T, Layout&gt;</ref>&amp;<sp/>min,<sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T, Layout&gt;</ref>&amp;<sp/>max,</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref>&lt;<ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T, Layout&gt;</ref>,<sp/>N&gt;&amp;<sp/>src)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref><sp/>*src_first<sp/>=<sp/>src.data();</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref><sp/>*src_last<sp/>=<sp/>src_first<sp/>+<sp/>src.size();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>min<sp/>=<sp/>*src_first;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>*src_first;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>src_first<sp/>!=<sp/>src_last;<sp/>++src_first)</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>min.cwiseMin(*src_first);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>max.cwiseMax(*src_first);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" refkind="member"><highlight class="preprocessor">#define<sp/>DEFINE_FINDMINMAX_GRAY(T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/>\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;int<sp/>N&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/>inline<sp/>void<sp/>findMinMax(T&amp;<sp/>min,<sp/>T&amp;<sp/>max,<sp/>const<sp/>Image&lt;T,<sp/>N&gt;&amp;<sp/>src)\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>T<sp/>*src_first<sp/>=<sp/>src.data();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>T<sp/>*src_last<sp/>=<sp/>src_first<sp/>+<sp/>src.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>min<sp/>=<sp/>*std::min_element(src_first,<sp/>src_last);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>max<sp/>=<sp/>*std::max_element(src_first,<sp/>src_last);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="group___image_1ga79e5852d1e9a85c8cfb247699e811591" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="217" refid="group___image_1gae77f9fc828bccd7a66f092b5f0a9b5d3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="218" refid="group___image_1ga07c9523d912baa0152f001e5613d1b40" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="219" refid="group___image_1ga12e66e7dfc90903cf9cda77e1ee9caa1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="220" refid="group___image_1gab1e882348bd53acd83f60a913c7dfe5b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="221" refid="group___image_1gae75301dfe4245689d6552204da1bac7c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="222" refid="group___image_1ga0573e8647b615d0698ef000b5f013766" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="223" refid="group___image_1ga7b3472d8bf6ea05fb0c39ba0e380a924" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gab9988e0f3093c7ea96879529b44d3a05" kindref="member">DEFINE_FINDMINMAX_GRAY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DEFINE_FINDMINMAX_GRAY</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>======================================================================<sp/>//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Image<sp/>rescaling<sp/>functions</highlight></codeline>
<codeline lineno="230"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Layout,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="231" refid="group___image_1gae3e29da826156e86b948cc0fda4d6e4d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;Color&lt;T,Layout&gt;</ref>,<sp/>N&gt;<sp/><ref refid="group___image_1gae3e29da826156e86b948cc0fda4d6e4d" kindref="member" tooltip="color rescaling function.">colorRescale</ref>(</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image</ref>&lt;<ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref>,<sp/>N&gt;&amp;<sp/>src,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T, Layout&gt;</ref>&amp;<sp/>a<sp/>=<sp/>black&lt;T&gt;(),</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T, Layout&gt;</ref>&amp;<sp/>b<sp/>=<sp/>white&lt;T&gt;())</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image" kindref="compound" tooltip="The forward declaration of the image class.">Image&lt;Color&lt;T,Layout&gt;</ref>,<sp/>N&gt;<sp/>dst(src.sizes());</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref><sp/>*src_first<sp/>=<sp/>src.data();</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref><sp/>*src_last<sp/>=<sp/>src_first<sp/>+<sp/>src.<ref refid="class_d_o_1_1_multi_array_1a503ab01f6c0142145d3434f6924714e7" kindref="member" tooltip="Raw size getter.">size</ref>();</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref><sp/>*dst_first<sp/><sp/>=<sp/>dst.data();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref><sp/>min(*src_first);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_color" kindref="compound" tooltip="Lightweight template color class with some flexibility.">Color&lt;T,Layout&gt;</ref><sp/>max(*src_first);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>;<sp/>src_first<sp/>!=<sp/>src_last;<sp/>++src_first)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>min.cwiseMin(*src_first);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>max.cwiseMax(*src_first);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(min<sp/>==<sp/>max)</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Warning:<sp/>min<sp/>==<sp/>max!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(src_first<sp/>=<sp/>src.<ref refid="class_d_o_1_1_multi_array_1a36e4d11a00a3572c87bf7e913e9b5ca1" kindref="member" tooltip="Mutable POD accessor.">data</ref>();<sp/>src_first<sp/>!=<sp/>src_last;<sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++src_first,<sp/>++dst_first)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dst_first<sp/>=<sp/>a<sp/>+<sp/>(*src_first-min).cwiseProduct(b-a).</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cwiseQuotient(max-min);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="266" refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" refkind="member"><highlight class="preprocessor">#define<sp/>DEFINE_RESCALE_GRAY(T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;int<sp/>N&gt;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/>inline<sp/>Image&lt;T,<sp/>N&gt;<sp/>colorRescale(const<sp/>Image&lt;T,<sp/>N&gt;&amp;<sp/>src,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>a<sp/>=<sp/>ColorTraits&lt;T&gt;::min(),<sp/><sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>b<sp/>=<sp/>ColorTraits&lt;T&gt;::max())<sp/><sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>Image&lt;T,<sp/>N&gt;<sp/>dst(src.sizes());<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>T<sp/>*src_first<sp/>=<sp/>src.data();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="276"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>const<sp/>T<sp/>*src_last<sp/>=<sp/>src_first<sp/>+<sp/>src.size();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="277"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>T<sp/>*dst_first<sp/><sp/>=<sp/>dst.data();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="279"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>T<sp/>min<sp/>=<sp/>*std::min_element(src_first,<sp/>src_last);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>T<sp/>max<sp/>=<sp/>*std::max_element(src_first,<sp/>src_last);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(min<sp/>==<sp/>max)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>&quot;Warning:<sp/>min<sp/>==<sp/>max!&quot;<sp/>&lt;&lt;<sp/>std::endl;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>dst;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="286"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>for<sp/>(<sp/>;<sp/>src_first<sp/>!=<sp/>src_last;<sp/>++src_first,<sp/>++dst_first)<sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>*dst_first<sp/>=<sp/>a<sp/>+<sp/>(b-a)*(*src_first-min)/(max-min);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>return<sp/>dst;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="292"><highlight class="preprocessor"><sp/><sp/>}</highlight></codeline>
<codeline lineno="293"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294" refid="group___image_1ga1475fcd1a5a00c060a5f8f0adaaf379a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="295" refid="group___image_1gade813affccdcbf8455a9ff56245a33f7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296" refid="group___image_1ga9c737e1c128747f5e81889809f427e26" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297" refid="group___image_1gad1637ce411303db7d9633a8227bdcdaa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298" refid="group___image_1ga0d97fd312976e5f0b19fe3a7f61ccc8e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="299" refid="group___image_1gac3b1da175cc8d5ec00abf01554aba92a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="300" refid="group___image_1gae3dde5569ec14946867c7b62b3062956" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="301" refid="group___image_1ga0d96ddd420fb39361b01256716c2c776" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="group___image_1gae46f4594b176ee37843b58e67de94b2f" kindref="member">DEFINE_RESCALE_GRAY</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>DEFINE_RESCALE_GRAY</highlight></codeline>
<codeline lineno="303"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="306" refid="struct_d_o_1_1_color_rescale" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_d_o_1_1_color_rescale" kindref="compound" tooltip="color rescaling functor helper.">ColorRescale</ref></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref><sp/><ref refid="class_d_o_1_1_image" kindref="compound">ReturnType</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_d_o_1_1_color_rescale" kindref="compound" tooltip="color rescaling functor helper.">ColorRescale</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref>&amp;<sp/>src)<sp/>:<sp/>src_(src)<sp/>{}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_d_o_1_1_image" kindref="compound">ReturnType</ref><sp/>operator()()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group___image_1gae3e29da826156e86b948cc0fda4d6e4d" kindref="member" tooltip="color rescaling function.">colorRescale</ref>(src_);<sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_d_o_1_1_image" kindref="compound">Image&lt;T, N&gt;</ref>&amp;<sp/>src_;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>DO<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DO_CORE_IMAGE_HPP<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp"/>
  </compounddef>
</doxygen>
