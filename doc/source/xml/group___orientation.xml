<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="group___orientation" kind="group">
    <compoundname>Orientation</compoundname>
    <title>Dominant Orientation Assignment</title>
    <innerclass refid="class_d_o_1_1_compute_dominant_orientations" prot="public">DO::ComputeDominantOrientations</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___orientation_1ga06c2229537756ea076538c1b68395771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Image&lt; Matrix&lt; T, 2, 1 &gt; &gt;</type>
        <definition>Image&lt;Matrix&lt;T,2,1&gt; &gt; DO::gradPolar</definition>
        <argsstring>(const Image&lt; T &gt; &amp;I)</argsstring>
        <name>gradPolar</name>
        <param>
          <type>const Image&lt; T &gt; &amp;</type>
          <declname>I</declname>
        </param>
        <briefdescription>
<para>Computes the image gradients of image <formula id="0">$I$</formula> in polar coordinates. </para>        </briefdescription>
        <detaileddescription>
<para>In each pixel <formula id="1">$(x,y) \in [0,w[ \times [0,h[$</formula>, <formula id="2">$\nabla I(x,y)$</formula> is the 2D vector <formula id="3">$(r,\theta)$</formula> where:<itemizedlist>
<listitem><para><formula id="4">$r = 2 ||\nabla I(x,y)||$</formula>,</para></listitem><listitem><para><formula id="5">$\theta = \mathrm{angle}( \nabla I(x,y) )$</formula>. </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="35" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="34" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1ga0bacda5f679951ea8e9ef8a0218d7fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>ImagePyramid&lt; Matrix&lt; T, 2, 1 &gt; &gt;</type>
        <definition>ImagePyramid&lt;Matrix&lt;T, 2, 1&gt; &gt; DO::gradPolar</definition>
        <argsstring>(const ImagePyramid&lt; T &gt; &amp;pyramid)</argsstring>
        <name>gradPolar</name>
        <param>
          <type>const ImagePyramid&lt; T &gt; &amp;</type>
          <declname>pyramid</declname>
        </param>
        <briefdescription>
<para>Computes the image gradients in polar coordinates for each image in the pyramid. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="53" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="52" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1ga43d03e35ef7443adcbb1a68da2cc8257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::computeOrientationHistogram</definition>
        <argsstring>(Array&lt; T, N, 1 &gt; &amp;oriHist, const Image&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;gradPolar, T x, T y, T s, int patchTruncationFactor=3, T blurFactor=T(1.5))</argsstring>
        <name>computeOrientationHistogram</name>
        <param>
          <type>Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>const Image&lt; Matrix&lt; T, 2, 1 &gt; &gt; &amp;</type>
          <declname>gradPolar</declname>
        </param>
        <param>
          <type>T</type>
          <declname>x</declname>
        </param>
        <param>
          <type>T</type>
          <declname>y</declname>
        </param>
        <param>
          <type>T</type>
          <declname>s</declname>
        </param>
        <param>
          <type>int</type>
          <declname>patchTruncationFactor</declname>
          <defval>3</defval>
        </param>
        <param>
          <type>T</type>
          <declname>blurFactor</declname>
          <defval>T(1.5)</defval>
        </param>
        <briefdescription>
<para>Computes the orientation histogram on a local patch around keypoint <formula id="6">$(x,y,\sigma)$</formula>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="78" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="73" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1gaaf9d0a78501d3564f4b2e810456d593f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::smoothHistogram_Lowe</definition>
        <argsstring>(Array&lt; T, N, 1 &gt; &amp;oriHist)</argsstring>
        <name>smoothHistogram_Lowe</name>
        <param>
          <type>Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <briefdescription>
<para>This is used in [Lowe, IJCV 2004] to determine keypoint orientations. </para>        </briefdescription>
        <detaileddescription>
<para>Basically, the histogram is convolved 6 times with the mean kernel <formula id="7">$[1/3, 1/3, 1/3]$</formula>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="139" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="138" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1ga2aba4146d01599ac78b27ca5da991ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; DO::findPeaks</definition>
        <argsstring>(const Array&lt; T, N, 1 &gt; &amp;oriHist, T peakRatioThres=T(0.8))</argsstring>
        <name>findPeaks</name>
        <param>
          <type>const Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>T</type>
          <declname>peakRatioThres</declname>
          <defval>T(0.8)</defval>
        </param>
        <briefdescription>
<para>This is used in [Lowe, IJCV 2004] to find histogram peaks. </para>        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_d_o_1_1_a" kindref="compound">A</ref> histogram peak is by definition the index <formula id="8">$i$</formula> such that:<itemizedlist>
<listitem><para><formula id="9">$h_{i} &gt; h_{i+1}$</formula></para></listitem><listitem><para><formula id="10">$h_{i} &gt; h_{i-1}$</formula></para></listitem></itemizedlist>
</para><para>Only histogram peaks <formula id="8">$i$</formula> such that <formula id="11">$h_i \geq 0.8 \max_j h_j$</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="166" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="164" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1gae0bc7b7c7c79abdf62be048d42128d0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T DO::refinePeak</definition>
        <argsstring>(const Array&lt; T, N, 1 &gt; &amp;oriHist, int i)</argsstring>
        <name>refinePeak</name>
        <param>
          <type>const Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>int</type>
          <declname>i</declname>
        </param>
        <briefdescription>
<para>Refine peaks as in [Lowe, IJCV 2004] by interpolation based on a second-order Taylor approximation. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="183" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="182" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group___orientation_1gac90fa42c4655be0a466a257fa8e23405" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; DO::refinePeaks</definition>
        <argsstring>(const Array&lt; T, N, 1 &gt; &amp;oriHist, const std::vector&lt; int &gt; &amp;ori)</argsstring>
        <name>refinePeaks</name>
        <param>
          <type>const Array&lt; T, N, 1 &gt; &amp;</type>
          <declname>oriHist</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt; &amp;</type>
          <declname>ori</declname>
        </param>
        <briefdescription>
<para>Helper functions. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" line="205" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/FeatureDescriptors/Orientation.hpp" bodystart="203" bodyend="210"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
