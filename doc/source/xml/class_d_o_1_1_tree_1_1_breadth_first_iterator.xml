<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="class_d_o_1_1_tree_1_1_breadth_first_iterator" kind="class" prot="private">
    <compoundname>DO::Tree::BreadthFirstIterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">DO::Tree&lt; IsConst &gt;::NodeHandle</basecompoundref>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1ab2c600182ea293e4639681640d7b1262" prot="private" static="no">
        <type>BreadthFirstIterator</type>
        <definition>typedef BreadthFirstIterator self_type</definition>
        <argsstring></argsstring>
        <name>self_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="679" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="679" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a8aad75aec5d2c339f678dc576a4daec6" prot="private" static="no">
        <type>NodeHandle&lt; IsConst &gt;</type>
        <definition>typedef NodeHandle&lt;IsConst&gt; base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="680" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="680" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a6fc71a7786ea52c5c78d2114df63b15e" prot="private" static="no">
        <type>base_type::node_pointer</type>
        <definition>typedef base_type::node_pointer node_pointer</definition>
        <argsstring></argsstring>
        <name>node_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="681" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="681" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a499183385b8e887c557c48b80f1a2133" prot="private" static="no" mutable="no">
        <type>std::queue&lt; node_pointer &gt;</type>
        <definition>std::queue&lt;node_pointer&gt; _queue</definition>
        <argsstring></argsstring>
        <name>_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="714" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="714" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1adbdfb907cdf9bb586d70212e8b2c65e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BreadthFirstIterator</definition>
        <argsstring>()</argsstring>
        <name>BreadthFirstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="686" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="685" bodyend="686"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a235114ff79a58720be64d684e26d9ac6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BreadthFirstIterator</definition>
        <argsstring>(node_pointer node_ptr)</argsstring>
        <name>BreadthFirstIterator</name>
        <param>
          <type>node_pointer</type>
          <declname>node_ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="690" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="688" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1abd3b9922f7a8a54c47835d2df7aec302" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>BreadthFirstIterator</definition>
        <argsstring>(const NodeHandle&lt; false &gt; &amp;node)</argsstring>
        <name>BreadthFirstIterator</name>
        <param>
          <type>const NodeHandle&lt; false &gt; &amp;</type>
          <declname>node</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="694" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="692" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a68c6d6abdde9fef27d6a4f2904212559" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>self_type &amp;</type>
        <definition>self_type&amp; operator++</definition>
        <argsstring>()</argsstring>
        <name>operator++</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="697" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="696" bodyend="704"/>
      </memberdef>
      <memberdef kind="function" id="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a39f7c37604fd9845ff487b36b6f88602" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>self_type</type>
        <definition>self_type operator++</definition>
        <argsstring>(int)</argsstring>
        <name>operator++</name>
        <param>
          <type>int</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="707" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="706" bodyend="711"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="40">
        <label>Tree&lt; T &gt;::BreadthFirstIterator&lt; IsConst &gt;</label>
        <childnode refid="41" relation="public-inheritance">
        </childnode>
      </node>
      <node id="41">
        <label>NodeHandle</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="42">
        <label>Tree&lt; T &gt;::BreadthFirstIterator&lt; IsConst &gt;</label>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>Choose&lt; IsConst, const Node *, Node * &gt;</label>
        <link refid="struct_d_o_1_1_meta_1_1_choose"/>
      </node>
      <node id="43">
        <label>NodeHandle</label>
        <childnode refid="44" relation="usage">
          <edgelabel>_node_ptr</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" line="43" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Tree.hpp" bodystart="43" bodyend="-1"/>
    <listofallmembers>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a15740190d17658ee473d28d80f418a9c" prot="protected" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>_node_ptr</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a499183385b8e887c557c48b80f1a2133" prot="private" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>_queue</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a8aad75aec5d2c339f678dc576a4daec6" prot="private" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>base_type</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1adbdfb907cdf9bb586d70212e8b2c65e8" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>BreadthFirstIterator</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a235114ff79a58720be64d684e26d9ac6" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>BreadthFirstIterator</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1abd3b9922f7a8a54c47835d2df7aec302" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>BreadthFirstIterator</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a02f2d05b54905ef794473c3dd4963643" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>first_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1aeb2540297fbc128d501532e885fa8597" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>is_first_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a2248cb249459f497ef0f86c34c6cf218" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>is_last_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a3d427bf0b966aabbd323d35c4fa23e60" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>last_child</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a65681a9c090529243ef3d9176a7f26aa" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>next_sibling</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a6fc71a7786ea52c5c78d2114df63b15e" prot="private" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>node_pointer</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a514878fa0cf96489a1d061b7af41dc6f" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>NodeHandle</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1ac6ac1ceb1896213decb04354cbdef662" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>NodeHandle</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1af9b08673dd268dd832f32a0fadcfeb4d" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a878e059e92f2a8fa965666faad8f7134" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator!=</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1adbfc20b4917fb9e64e459d3a57a1021a" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator()</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1aa149c2249879e7727f33688b76bf2c99" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator*</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a68c6d6abdde9fef27d6a4f2904212559" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator++</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1a39f7c37604fd9845ff487b36b6f88602" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator++</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a33ce448509e9cc0d73861e4c1919c7a7" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator-&gt;</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a195c017863fbda13e585649328d77e06" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a259fdabf1356d51ef28962cb65e0eef7" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>operator==</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a521daa089e1641163ed60754ab076f6d" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>parent</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1afaf0601f102d426bf70a7903dc0b7aeb" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>pointer</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a77948ff2d68c4909850ac2e3c2c46263" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>prev_sibling</name></member>
      <member refid="class_d_o_1_1_tree_1_1_node_handle_1a98b9438a5b2fcbe0401c2b83a9b97866" prot="public" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>reference</name></member>
      <member refid="class_d_o_1_1_tree_1_1_breadth_first_iterator_1ab2c600182ea293e4639681640d7b1262" prot="private" virt="non-virtual"><scope>DO::Tree::BreadthFirstIterator</scope><name>self_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
