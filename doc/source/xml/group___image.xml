<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.3.1">
  <compounddef id="group___image" kind="group">
    <compoundname>Image</compoundname>
    <title>Image</title>
    <innerclass refid="struct_d_o_1_1_element_traits_3_01_color_3_01_t_00_01_layout_01_4_01_4" prot="public">DO::ElementTraits&lt; Color&lt; T, Layout &gt; &gt;</innerclass>
    <innerclass refid="class_d_o_1_1_image" prot="public">DO::Image</innerclass>
    <innerclass refid="struct_d_o_1_1_convert_image" prot="public">DO::ConvertImage</innerclass>
    <innerclass refid="struct_d_o_1_1_convert_image_3_01_t_00_01_t_00_01_n_01_4" prot="public">DO::ConvertImage&lt; T, T, N &gt;</innerclass>
    <innerclass refid="struct_d_o_1_1_color_rescale" prot="public">DO::ColorRescale</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___image_1ga4e5c520a37ac3ab27aa74f10d3c47b25" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename U</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void convert</definition>
        <argsstring>(Image&lt; T, N &gt; &amp;dst, const Image&lt; U, N &gt; &amp;src)</argsstring>
        <name>convert</name>
        <param>
          <type>Image&lt; T, N &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const Image&lt; U, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Helper function for color conversion. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="49" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga6ca7c2968f16fe642348e58d2d72c3d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Image&lt; Color&lt; T, Rgb &gt;, Rgb::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Rgb &gt;, Rgb ::size&gt; DO::asRgbImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Rgb::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asRgbImage</name>
        <param>
          <type>const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Rgb::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="136" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga4392375bc20250c8f8cf6c571ab3e5c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Image&lt; Color&lt; T, Rgba &gt;, Rgba::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Rgba &gt;, Rgba ::size&gt; DO::asRgbaImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Rgba::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asRgbaImage</name>
        <param>
          <type>const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Rgba::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="137" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga03047b50e8796b06624fbd45ac3c46ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Image&lt; Color&lt; T, Cmyk &gt;, Cmyk::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Cmyk &gt;, Cmyk ::size&gt; DO::asCmykImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Cmyk::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asCmykImage</name>
        <param>
          <type>const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Cmyk::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="138" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gac9273f843fb0d04b3be0c254e920896b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>Image&lt; Color&lt; T, Yuv &gt;, Yuv::size &gt;</type>
        <definition>Image&lt;Color&lt;T, Yuv &gt;, Yuv ::size&gt; DO::asYuvImage</definition>
        <argsstring>(const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Yuv::size, ColMajor &gt; &amp;M)</argsstring>
        <name>asYuvImage</name>
        <param>
          <type>const MultiArray&lt; Matrix&lt; T, 3, 1 &gt;, Yuv::size, ColMajor &gt; &amp;</type>
          <declname>M</declname>
        </param>
        <briefdescription>
<para>Reinterpret column-major matrix as an image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="139" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga21de6940367133734d08916371bdf437" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(Color&lt; T, Layout &gt; &amp;min, Color&lt; T, Layout &gt; &amp;max, const Image&lt; Color&lt; T, Layout &gt;, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>Color&lt; T, Layout &gt; &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>Color&lt; T, Layout &gt; &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; Color&lt; T, Layout &gt;, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max pixel values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="188" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="186" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga79e5852d1e9a85c8cfb247699e811591" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(unsigned char &amp;min, unsigned char &amp;max, const Image&lt; unsigned char, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>unsigned char &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned char &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; unsigned char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="216" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="216" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae77f9fc828bccd7a66f092b5f0a9b5d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(char &amp;min, char &amp;max, const Image&lt; char, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>char &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>char &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="217" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga07c9523d912baa0152f001e5613d1b40" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(unsigned short &amp;min, unsigned short &amp;max, const Image&lt; unsigned short, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>unsigned short &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned short &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; unsigned short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="218" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="218" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga12e66e7dfc90903cf9cda77e1ee9caa1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(short &amp;min, short &amp;max, const Image&lt; short, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>short &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>short &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="219" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gab1e882348bd53acd83f60a913c7dfe5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(unsigned int &amp;min, unsigned int &amp;max, const Image&lt; unsigned int, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>unsigned int &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>unsigned int &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; unsigned int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="220" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae75301dfe4245689d6552204da1bac7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(int &amp;min, int &amp;max, const Image&lt; int, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>int &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="221" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="221" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga0573e8647b615d0698ef000b5f013766" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(float &amp;min, float &amp;max, const Image&lt; float, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>float &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; float, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="222" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="222" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga7b3472d8bf6ea05fb0c39ba0e380a924" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void DO::findMinMax</definition>
        <argsstring>(double &amp;min, double &amp;max, const Image&lt; double, N &gt; &amp;src)</argsstring>
        <name>findMinMax</name>
        <param>
          <type>double &amp;</type>
          <declname>min</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>max</declname>
        </param>
        <param>
          <type>const Image&lt; double, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <briefdescription>
<para>Find min and max grayscale values of the image. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="223" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="223" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae3e29da826156e86b948cc0fda4d6e4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename Layout</type>
          </param>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; Color&lt; T, Layout &gt;, N &gt;</type>
        <definition>Image&lt;Color&lt;T,Layout&gt;, N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; Color&lt; T, Layout &gt;, N &gt; &amp;src, const Color&lt; T, Layout &gt; &amp;a=black&lt; T &gt;(), const Color&lt; T, Layout &gt; &amp;b=white&lt; T &gt;())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; Color&lt; T, Layout &gt;, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const Color&lt; T, Layout &gt; &amp;</type>
          <declname>a</declname>
          <defval>black&lt; T &gt;()</defval>
        </param>
        <param>
          <type>const Color&lt; T, Layout &gt; &amp;</type>
          <declname>b</declname>
          <defval>white&lt; T &gt;()</defval>
        </param>
        <briefdescription>
<para>color rescaling function. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="235" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="231" bodyend="262"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga1475fcd1a5a00c060a5f8f0adaaf379a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; unsigned char, N &gt;</type>
        <definition>Image&lt; unsigned char , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; unsigned char, N &gt; &amp;src, unsigned char a=ColorTraits&lt; unsigned char &gt;::min(), unsigned char b=ColorTraits&lt; unsigned char &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; unsigned char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; unsigned char &gt;::min()</defval>
        </param>
        <param>
          <type>unsigned char</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; unsigned char &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="294" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="294" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gade813affccdcbf8455a9ff56245a33f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; char, N &gt;</type>
        <definition>Image&lt; char , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; char, N &gt; &amp;src, char a=ColorTraits&lt; char &gt;::min(), char b=ColorTraits&lt; char &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; char, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>char</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; char &gt;::min()</defval>
        </param>
        <param>
          <type>char</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; char &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="295" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="295" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga9c737e1c128747f5e81889809f427e26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; unsigned short, N &gt;</type>
        <definition>Image&lt; unsigned short , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; unsigned short, N &gt; &amp;src, unsigned short a=ColorTraits&lt; unsigned short &gt;::min(), unsigned short b=ColorTraits&lt; unsigned short &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; unsigned short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; unsigned short &gt;::min()</defval>
        </param>
        <param>
          <type>unsigned short</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; unsigned short &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="296" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="296" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gad1637ce411303db7d9633a8227bdcdaa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; short, N &gt;</type>
        <definition>Image&lt; short , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; short, N &gt; &amp;src, short a=ColorTraits&lt; short &gt;::min(), short b=ColorTraits&lt; short &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; short, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>short</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; short &gt;::min()</defval>
        </param>
        <param>
          <type>short</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; short &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="297" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="297" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga0d97fd312976e5f0b19fe3a7f61ccc8e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; unsigned int, N &gt;</type>
        <definition>Image&lt; unsigned int , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; unsigned int, N &gt; &amp;src, unsigned int a=ColorTraits&lt; unsigned int &gt;::min(), unsigned int b=ColorTraits&lt; unsigned int &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; unsigned int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; unsigned int &gt;::min()</defval>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; unsigned int &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="298" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="298" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gac3b1da175cc8d5ec00abf01554aba92a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; int, N &gt;</type>
        <definition>Image&lt; int , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; int, N &gt; &amp;src, int a=ColorTraits&lt; int &gt;::min(), int b=ColorTraits&lt; int &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; int, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; int &gt;::min()</defval>
        </param>
        <param>
          <type>int</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; int &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="299" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="299" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1gae3dde5569ec14946867c7b62b3062956" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; float, N &gt;</type>
        <definition>Image&lt; float , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; float, N &gt; &amp;src, float a=ColorTraits&lt; float &gt;::min(), float b=ColorTraits&lt; float &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; float, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>float</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; float &gt;::min()</defval>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; float &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="300" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="300" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="group___image_1ga0d96ddd420fb39361b01256716c2c776" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>N</declname>
            <defname>N</defname>
          </param>
        </templateparamlist>
        <type>Image&lt; double, N &gt;</type>
        <definition>Image&lt; double , N&gt; DO::colorRescale</definition>
        <argsstring>(const Image&lt; double, N &gt; &amp;src, double a=ColorTraits&lt; double &gt;::min(), double b=ColorTraits&lt; double &gt;::max())</argsstring>
        <name>colorRescale</name>
        <param>
          <type>const Image&lt; double, N &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
          <defval>ColorTraits&lt; double &gt;::min()</defval>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
          <defval>ColorTraits&lt; double &gt;::max()</defval>
        </param>
        <briefdescription>
<para>Rescales color values properly for viewing. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="301" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="301" bodyend="301"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___image_1ga3589d93d904fd25e83198258d03d44e6" prot="public" static="no">
        <name>DEFINE_IMAGE_VIEW_FROM_COLMAJOR_MULTIARRAY</name>
        <param><defname>Colorspace</defname></param>
        <initializer>/*! \brief Reinterpret column-major matrix as an image. */            \
  template &lt;typename T&gt;                                                 \
  inline Image&lt;Color&lt;T, Colorspace&gt;, Colorspace::size&gt;                  \
  as##Colorspace##Image(const MultiArray&lt;Matrix&lt;T,3,1&gt;,                 \
                                         Colorspace::size,              \
                                         ColMajor&gt;&amp; M)                  \
  {                                                                     \
    return Image&lt;Color&lt;T, Colorspace&gt; &gt;(                                \
      reinterpret_cast&lt;Color&lt;T, Colorspace&gt; *&gt;(M.data()),               \
      M.sizes() );                                                      \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Check this functionality... </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="134" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___image_1gab9988e0f3093c7ea96879529b44d3a05" prot="public" static="no">
        <name>DEFINE_FINDMINMAX_GRAY</name>
        <param><defname>T</defname></param>
        <initializer>/*! \brief Find min and max grayscale values of the image. */ \
  template &lt;int N&gt;                                              \
  inline void findMinMax(T&amp; min, T&amp; max, const Image&lt;T, N&gt;&amp; src)\
  {                                                             \
    const T *src_first = src.data();                            \
    const T *src_last = src_first + src.size();                 \
                                                                \
    min = *std::min_element(src_first, src_last);               \
    max = *std::max_element(src_first, src_last);               \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro that defines min-max value functions for a specific grayscale color types. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="214" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___image_1gae46f4594b176ee37843b58e67de94b2f" prot="public" static="no">
        <name>DEFINE_RESCALE_GRAY</name>
        <param><defname>T</defname></param>
        <initializer>/*! \brief Rescales color values properly for viewing. */     \
  template &lt;int N&gt;                                              \
  inline Image&lt;T, N&gt; colorRescale(const Image&lt;T, N&gt;&amp; src,       \
                                  T a = ColorTraits&lt;T&gt;::min(),  \
                                  T b = ColorTraits&lt;T&gt;::max())  \
  {                                                             \
    Image&lt;T, N&gt; dst(src.sizes());                               \
                                                                \
    const T *src_first = src.data();                            \
    const T *src_last = src_first + src.size();                 \
    T *dst_first  = dst.data();                                 \
                                                                \
    T min = *std::min_element(src_first, src_last);             \
    T max = *std::max_element(src_first, src_last);             \
                                                                \
    if (min == max)                                             \
    {                                                           \
      std::cerr &lt;&lt; &quot;Warning: min == max!&quot; &lt;&lt; std::endl;         \
      return dst;                                               \
    }                                                           \
                                                                \
    for ( ; src_first != src_last; ++src_first, ++dst_first)    \
      *dst_first = a + (b-a)*(*src_first-min)/(max-min);        \
                                                                \
    return dst;                                                 \
  }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Macro that defines a color rescaling function for a specific grayscale color type. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" line="292" bodyfile="C:/Users/David/Desktop/GitHub/DO-CV/src/DO/Core/Image.hpp" bodystart="266" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
