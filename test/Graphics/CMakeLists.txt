cmake_minimum_required(VERSION 2.6)

project(DO_Graphics_test)

message(STATUS "  - DO_Graphics_test")

function(enable_precompiled_headers PRECOMPILED_HEADER SOURCE_VARIABLE_NAME)
  if(MSVC)
    set(files ${${SOURCE_VARIABLE_NAME}})
     
    # Generate precompiled header translation unit
    get_filename_component(pch_basename ${PRECOMPILED_HEADER} NAME_WE)
    set(pch_abs ${CMAKE_CURRENT_SOURCE_DIR}/${PRECOMPILED_HEADER})
    set(pch_unity ${CMAKE_CURRENT_BINARY_DIR}/${pch_basename}.cpp)
    file(WRITE ${pch_unity} "// Precompiled header unity generated by CMake\n")
    file(APPEND ${pch_unity} "#include <${pch_abs}>\n")
    set_source_files_properties(${pch_unity}  PROPERTIES
                                COMPILE_FLAGS "/Yc\"${pch_abs}\"")
     
    # Update properties of source files to use the precompiled header.
    # Additionally, force the inclusion of the precompiled header at beginning
    # of each source file.
    foreach(source_file ${files} )
      set_source_files_properties(
        ${source_file} 
        PROPERTIES COMPILE_FLAGS
        "/Yu\"${pch_abs}\" /FI\"${pch_abs}\""
      )
    endforeach(source_file)
     
    # Finally, update the source file collection to contain the precompiled 
    # header translation unit
    set(${SOURCE_VARIABLE_NAME} ${pch_unity} ${${SOURCE_VARIABLE_NAME}} 
        PARENT_SCOPE)
  endif(MSVC)
endfunction(enable_precompiled_headers)


find_package(DO COMPONENTS Core Graphics REQUIRED)
include(${DO_USE_FILE})

add_definitions(-DUSING_PCH)
add_pch(GraphicsTestingPch GraphicsTesting.hpp GraphicsTesting.cpp)
do_unit_test(Graphics_Qt test.cpp "${DO_LIBRARIES}")
use_pch(DO_Graphics_Qt_test GraphicsTestingPch)
#set_target_properties(DO_Graphics_Qt_test PROPERTIES
#                      COTIRE_CXX_PREFIX_HEADER_INIT "GraphicsTesting.hpp"
#                      COTIRE_UNITY_LINK_LIBRARIES_INIT "COPY")
#cotire(DO_Graphics_Qt_test)
#target_link_libraries(DO_Graphics_Qt_test_unity "gtest;${DO_LIBRARIES}")
set_property(TARGET DO_Graphics_Qt_test PROPERTY FOLDER "DO Tests/Graphics")
